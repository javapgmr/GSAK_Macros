#*******************************************
# MacDescription = FSG Plugin - Display 10 oldest caches found
# MacFileName = FSGPlugin_Oldest.gsk
# MacAuthor = jmonti 
# MacVersion=1.01
# MacUrl=
#*******************************************

# Based on 'FSGPlugin_FirstCacheByCounty.gsk' from 'The CEO', which is based on code
# from 'FindStatGen41Beta.gsk' by 'Lignumaqua'
#
# Purpose:
#	To display a table of your x (10 default) oldest caches by placed dated. 
#
# Syntax:
# 	<plugin>FSGPlugin_Oldest?number?showheader=xxxxx</plugin> 
# 	where
#		number	Is an optional number of caches to display
#			If not specified the default is 10 caches
#		showheader
#			false surpresses the header generation
#			true generates the header (default)
#
# Changes
#  V1.0  02-06-11  Initial release
#  V1.01 02-20-11  Added header suppression option

	# Declares
	Declare Var=$PlacedDateDate Type=Date
	Declare Var=$OldestStatusMsg Type=String
	Declare Var=$OldestNumber Type=String
	Declare Var=$OldestParm1 Type=String
	Declare Var=$OldestParm2 Type=String
	Declare Var=$OldestShowHeading Type=Boolean

	# Make sure we aren't being called directly
	IF $_MacroLevel = 1
		RETURN msg=This macro is a FindStatGen plug-in and cannot be run directly
	ENDIF


	# Get input parameters
	$OldestNumber = "10"
	IF len($_MacroParms) > 0
		$OldestParm1 = Extract($_MacroParms,"&",1)
		$OldestParm2 = Extract($_MacroParms,"&",2)
		IF val($OldestParm1) = 0
			IF not(val($OldestParm2) = 0)
				$OldestNumber = $OldestParm2
			ENDIF
		ELSE
			$OldestNumber = $OldestParm1
		ENDIF
	ENDIF
	
	If $OldestParm1 = "sectionheading=false" OR $OldestParm2 = "sectionheading=false" 
		$OldestShowHeading=FALSE
	ELSE
		$OldestShowHeading=TRUE
	ENDIF	

	# Exclude locationless?
	IF $Excludelocationless
		$Locationless = "Cachetype <>'L' AND Exclude <> '1'"
	ELSE
		$Locationless = "1"
	ENDIF
	
	# Initialize the output string
	$out = ""

	# Get the list of 10 oldest caches found 
	# Caches are ordered by placed date 
	$_sql = "SELECT rowid, ldate, state, code, cachetype, name, llogid, url, country, placedDate FROM allfinds WHERE $Locationless ORDER BY placedDate, cast(cacheId as integer) LIMIT " + $OldestNumber
	$work = Sqlite("sql",$_sql)
	
	#Initialize Variables
	$LogTotal = $_SqlRows
	
	# Let everyone know we are starting to generate the oldest caches
	$OldestStatusMsg = "First Placed Caches"
	SHOWSTATUS msg="$OldestStatusMsg" Width=350

	# Initialize Section header
	$colspan = 1
	$text= "Oldest Caches Found"
	If $OldestShowHeading
		GOSUB Name=SectionHead
	ENDIF

	# Initialize Some of the output data
	$out = $out + "<table width='$maxtablewidth' style='text-align: left;'>" + $_CrLf 
	# Column Heads
	$text1 = "<b>$Lang34</b>" # Code
	$text2 = "<b>$Lang91</b>" # Placed
	$text3 = "<b>$Lang32</b>" # Date
	$text4 = "<b>$Lang49</b>" # Country
	$text5 = "<b>$Lang169</b>" # State
	$text6 = "<b>$Lang35</b>" # Name

	# Build the table header for this state
	$out = $out + "<tr>" + "$_CrLf " + "<td style='$stTab2cHead'>" + $_CrLf 
	$out = $out + "$text1</td>" + $_CrLf 
	$out = $out + "<td style='$stTab2cHead'>$text2</td>" + $_CrLf 
	$out = $out + "<td style='$stTab2cHead'>$text3</td>" + $_CrLf 
	IF $FlagIcons
		$out = $out + "<td style='$stTab2cHead'>&nbsp;</td>" + $_CrLf 
	ELSE
		$out = $out + "<td style='$stTab2cHead'>$text4</td>" + $_CrLf 
	ENDIF
	$out = $out + "<td style='$stTab2cHead'>$text5</td>" + $_CrLf 

	IF $miletypes
		$out = $out + "<td style='$stTab2cHead'>&nbsp;</td>" + $_CrLf 
	ENDIF
	$out = $out + "<td style='$stTab2cHead'>$text6</td>" + $_CrLf  + "</tr>" + $_CrLf 

	# Initialize variables
	$count = 1

WHILE $count <= $LogTotal
	# Grab the row 
	$GetMilestone = Extract($work,$_CrLf ,$count)

	#Extract the dates
	$LogDateDate = SqlToDate(Extract($GetMilestone,";",2))
	$PlacedDateDate = SqlToDate(Extract($GetMilestone,";",10))

	#Strip off the suffix code if necessary
	$StripCode = Extract($GetMilestone,";",4)
	$StripCode = Extract($StripCode,"_",1)

	# Format the date to users standard format for display
	$FindDate = DateFormat($LogDateDate)
	$PlacedDate = DateFormat($PlacedDateDate)

	# Log ID for URL link to log
	$LogidSubstitute = Val(Extract($GetMilestone,";",7))
	IF $LogidSubstitute <>0
		BEGINCASE
		CASE Left($StripCode,2)="GC"
			$text3 = "<a href='http://www.geocaching.com/seek/log.aspx?LID=$LogidSubstitute'>$FindDate</a>"
		CASE Left($StripCode,2)="GA"
			$text3 = "<a href='http://geocaching.com.au/log/$LogidSubstitute'>$FindDate</a>"
		OTHERWISE
			$text3 = "$FindDate"
		ENDCASE
	ELSE
		$text3 = "$FindDate"
	ENDIF

	# Initialize other output data
	$text1 = Extract($GetMilestone,";",8)
	$text1 = "<a href='$text1'>$StripCode</a>"

	$text2 = $PlacedDate

	$text9 = Extract($GetMilestone,";",9)
	$text4 = Extract($GetMilestone,";",3)

	$text5 = Extract($GetMilestone,";",6)
	$text5 = "$text5"

	IF $miletypes
		$tmpB = FALSE
		GOSUB Name=StripCodeType
		$text6 = $TypeImage
	ELSE
		$text6 = ""
	ENDIF

	IF $FlagIcons
		# Country flag
		$FullName = $text9
		GOSUB Name=FlagImage
	ENDIF

	# Now build the output table row
	$out = $out + "<tr>" + "$_CrLf " + "<td style='$st2c1'>" + $_CrLf 
	$out = $out + "$text1</td>" + $_CrLf 
	$out = $out + "<td style='$st2c2'>$text2</td>" + $_CrLf 
	$out = $out + "<td style='$st2c2'>$text3</td>" + $_CrLf
	IF $FlagIcons
		$out = $out + "<td style='$st2c2'>$text7</td>" + $_CrLf 
	ELSE
		$out = $out + "<td style='$st2c2'>$text9</td>" + $_CrLf  
	ENDIF
	$out = $out + "<td style='$st2c2'>$text4</td>" + $_CrLf
	
 	IF $miletypes
		$out = $out + "<td style='$st2c2'>$text6</td>" + $_CrLf 
	ENDIF
	$out = $out + "<td width=30% style='$st2c1'>$text5</td>" + $_CrLf  + "</tr>" + $_CrLf 

	$count = $count + 1
ENDWHILE # Process rows


	$out = $out + "</table>" + $_CrLf 

	$p_FSGData = $out
	

BEGINSUB Name=FlagImage
	# Enter with $FullName containing the country name
	# Exits with $text7 containing the html to the flag Image
	$text7 = ""
	$tmpS1 = $FullName
	$FullName = "=" + $FullName + ","
	IF At($FullName,$world)>0
		$text7 = SubStr($world,At($FullName,$world)-2,2)
		IF $tmpS1 = "Hong Kong"
			$text7 = "HK"
		ENDIF
		$text7 = "<img align ='top' vspace='1'  alt='$tmpS1' title='$tmpS1' src='" + $ImageURL + "flags/" + $text7 + ".gif'/>"
	ENDIF
ENDSUB # FlagImage

BEGINSUB Name=StripCodeType
	#Enters with $Stripcode containing code
	# and $tmpB where TRUE = Placed table and FALSE = finds table
	#Exits with $TypeImage containing image of cache type
	$Types = "ABCEGLMRTUVWZXIY123"
	$Typenums = "9,5,13,6,27,12,3,137,2,8,4,11,453,2134,1858,waymark,3653,3773,3774"
	# If $tmpB is true then use the placed table instead
	IF $tmpB
		$_sql = "Select CacheType from PlacedStatsData WHERE Code like '$StripCode' LIMIT 1"
	ELSE
		$_sql = "Select CacheType from Allfinds WHERE Code like '$StripCode' LIMIT 1"
	ENDIF
	$tmpS = Sqlite("sql",$_sql)
	$tmpN = At($tmpS,$Types)
	$thistype	= Extract($Typenums, "," , $tmpN)
	BEGINCASE
		CASE $thistype = "Y"
			$TypeImage = "<img align='top' src='http://gsak.net/stats/wm16.gif' />"
		CASE $thistype = "L"
			$TypeImage = "<img align='top' src='http://gsak.net/stats/1216.gif' />"
		OTHERWISE
			$TypeImage = "<img align='top' src='http://www.geocaching.com/images/wpttypes/sm/" + $thistype + ".gif' />"
	ENDCASE
ENDSUB #StripCodeType

BEGINSUB Name=SectionHead
	# This subroutine is called by all the stats generating routines.
	# It writes the section header and also handles the half width sections
	# intelligently .
	# Add a couple of blank lines to the output variable
	$out = $out + "<br /><br />" + $CR
	$out = $out + "<!-- SectionHead CS=$colspan LCS=$lastcolspan C=$column $text -->" + $CR
	IF $colspan = 1
		# This is a full width section
		# If the last section was a half width close the previous table off
		IF $lastcolspan = 2
			GOSUB Name=Close2col
		ENDIF
		$lastcolspan = 1
		$column = 1
		$width = $maxtablewidth
	ELSE
		# This is a half width section
		IF $column = 1
			# First Column
			# If we're following another half width block, close the table off
			IF $lastcolspan = 2
				GOSUB Name=Close2col
			ENDIF
			GOSUB Name=Open2Col
			$column = 2
		ELSE
			# Second Column
			GOSUB Name=Mid2Col
			$column = 1
		ENDIF
		$lastcolspan = 2
		$width = $maxtablewidth/2
	ENDIF
	$tmpS = ""
	IF $Placed
		$tmpS = $stYearDataTit
	ENDIF
	# And add the header to the output variable
	$out = $out + "<div style='width:$width" + "px; $stSectHead; $tmpS'>" + $CR
	$out = $out + "<a name='$Srun'></a>"
	$out = $out + "    $text" + $CR + "</div><br />" + $CR
ENDSUB #SectionHead
