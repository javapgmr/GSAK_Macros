#**************************************************************************************
# MacDescription = FSG Plugin - generates a list of friends which went caching with you
# MacFileName = FSGPlugin_FriendsList.gsk
# MacAuthor = hulmgulm
# MacVersion=1.5.3
# MacUrl=http://gsak.net/board/index.php?showtopic=18001
#**************************************************************************************
# Usage:
#   Add the following code to a FindStatsGen annotation section:
#   <plugin>FSGPlugin_FriendsList?UserData=4&ProfileLinks=false&TxtFriend=Visited by</plugin>
#
#   As this plugin does not generate a head line, you might want to add 
#   <subhead>This is a list</subhead>
#   to the annotation too.
#
# Parameters:
# *	Separator
#   Used to define the separator used to separate the friends. (default: ,)
# * UserData
#   Used to specify the UserData/UserNote field used to store the friends.
#   Valid values are (default: 1):
#      1, 2, 3, 4 for UserData, User2, User3, User4
#      N for UserNote
# * ProfileLinks
#   Used to enable/disable the generation of links to the friends user profile on gc.com.
#   Valid values are: true, false (default: true)
# * TxtFriend
#   Name of the type of "friends" which get displayed. This is displayed as the header of
#   the first table column as well as it is used as "tag" for the extended list 
#   capabilities (see below).
#   (default German: Freund, default English: Friend)
#   
# Friend list simple version:
#   The whole content of the selected UserData field is treated as a list of friends, 
#   separated by the chosen separator. E.g.:
#     Clyde,lignumaqua,Kai Team
#
# Friend list extended version:
#   To specify several separate lists in one of the UserData fields at the same time,
#   the following notation has to be used:
#     <TxtFriend=friend1,friend2>
#   where TxtFriend is the same text as specified by the TxtFriend parameter. E.g.:
#     <Friend=Clyde,lignumaqua,Kai Team>
#     <Weather=sunny>
#
#
# ### Warning: ###
# If you store your friends in the UserNote field, it is recommended to use the 
# extended version of this macro (<TxtFriend=friend1,friend2>) or you have to make 
# sure that your "User Notes" and "Log Section" do not contain other content. You will 
# get unexpected results if they do!
# 
#**************************************************************************************
IF $_MacroLevel = 1
	RETURN msg="This macro is a FindStatGen plug-in and cannot be run directly. $_CrLf To use the plugin, add the following line to one of the notes $_CrLf sections in the FindStatsGen macro: $_CrLf $_CrLf <plugin>FSGPlugin_FriendsList[?AdditionalParameters]</plugin>"
ENDIF

GOSUB Name=DeclareVariables
GOSUB Name=InitLanguage

# initialize parameter variables
$FLUserData = "1"
$FLProfileLinks = true
$FLSeparator = ","

# parse parameters
if $_MacroParms <> ""
	$count = RegExCount("&",$_MacroParms)
	$i = 1
	while $i <= $count+1
		$Text1 = extract($_MacroParms,"&",$i)
		$Text2 = upper($Text1)
		
		if (AT("USERDATA", $Text2) <> 0)
			$Text2 = extract($Text1,"=",2)
			if $Text2 <> ""
				$FLUserData = AllTrim($Text2)
			else
				RETURN msg="$FLLangUserDataError $_CrLf $Text1"
			endif
			
			BeginCase
				Case $FLUserData = "1"
					$FLUserData = "Userdata"
				Case $FLUserData = "2"
					$FLUserData = "User2"
				Case $FLUserData = "3"
					$FLUserData = "User3"
				Case $FLUserData = "4"
					$FLUserData = "User4"
				Case $FLUserData = "N"
					$FLUserData = "UserNote"
				OtherWise
					$FLUserData = "Userdata"
			EndCase

		endif
		
		if (AT("PROFILELINKS", $Text2) <> 0)
			$work = extract($Text1,"=",2)
			if $work = "true"
				$FLProfileLinks = true
			else 
				if $work = "false"
					$FLProfileLinks = false
				else
					RETURN msg="$FLLangProfileLinksError $_CrLf $Text1"
				endif
			endif
		endif
		
		if (AT("TXTFRIEND", $Text2) <> 0)
			$Text2 = extract($Text1,"=",2)
			if $Text2 <> ""
				$FLFriend = AllTrim($Text2)
			else
				RETURN msg="$FLLangTxtFriendError $_CrLf $Text1"
			endif
		endif

		if (AT("SEPARATOR", $Text2) <> 0)
			$Text2 = extract($Text1,"=",2)
			if $Text2 <> ""
				$FLSeparator = AllTrim($Text2)
			else
				RETURN msg="$FLLangSeparatorError $_CrLf $Text1"
			endif
		endif

		$i = $i+1
	endwhile
endif

#MsgOK msg="UserData: '$FLUserData' $_CrLf"

# Initialise Variables
$out = ""
SHOWSTATUS msg="Generating friends list ..." Width=350


# If there is at least one entry inside <name= > then only use the extracted part
$Tmps = RegExEscape ("<"+$FLFriend+"=")
$_sql = "SELECT count(Code) FROM AllFinds WHERE g_regex("+SqlQuote($Tmps+".*")+",$FLUserData)"
$work = Sqlite("sql", $_sql)
IF Val($work)=0
	$FLStripped = $FLUserData
	$FLsqlAnd = ""
ELSE
	VSUB Status=off
	$FLStripped = "g_RegexReplace('(?s)>.*$',g_RegexReplace("+SqlQuote("(?s)^.*"+$Tmps)+", "+$FLUserData+",''),'')"
	VSUB Status=on
	$FLsqlAnd =  "AND lLogid IN (SELECT lLogid FROM AllFinds WHERE g_regex("+SqlQuote($Tmps+".*")+",$FLUserData))"
ENDIF

# Get friend names
$_sql = "SELECT replace($FLStripped, '$FLSeparator', '|') AS data FROM AllFinds WHERE $FLStripped <> "+$_Quote+$_Quote+" $FLsqlAnd group by "+$FLStripped
$work = Sqlite("sql", $_sql)

$status = List("tmp", "create", "|")
$work = Replace($_NewLine, "|", $work)
$status = List("tmp", "replace", $work)

$_sql = "DROP TABLE Friends"
$status = Sqlite("sql", $_sql, "error=Trap")
$_sql = "CREATE TABLE Friends (name text, founds int, UNIQUE(name) )"
$status = Sqlite("sql", $_sql)

$count = Val(List("tmp", "Count", ""))
$i = 1

# Add friends and found count to DB
while $i < $count+1
	$work = Alltrim(List("tmp", "Item", NumToStr($i)))
	$Tmps = RegExEscape( $work )
	$_sql = "INSERT OR REPLACE INTO Friends (name, founds) SELECT "+SqlQuote($Work)+", count(name) FROM  AllFinds WHERE g_regex("+SqlQuote("([^\w]|^)"+$Tmps+"([^\w]|$)")+","+$FLStripped+") "+$FLsqlAnd
	$status = Sqlite("sql", $_sql)
	
	$i = $i + 1
endwhile


GOSUB Name=FriendsList

$p_FSGData = $out

BEGINSUB Name=FriendsList
	# Determine the number of finds you've made by owner
	SHOWSTATUS msg="Rendering friends list ..." Width=350
	# Determine the cutoff poInt for listing owners based on number of
	# their caches found
	$Cutoff = 5
	# Generate an unduplicated list of the owners of all found caches in the database

	#Initialize Variables
	$ThisRecord = 0
	$Count = 0
	$_sql = "SELECT founds as c, name from Friends ORDER BY c DESC, name COLLATE NOCASE"
	$work = Sqlite("sql",$_sql)
	$list = list("sql","replace",$work)

	#Sorted list of Owners, largest # finds at the top.
	$list = List("sql","item","1")
	$maxnum = Val(Extract($list,";",1))
	$index = 0
	$result = ""
	$result2 = ""
	$result3 = ""
	$tmpB = TRUE
	$totalowners = $_SqlRows

	WHILE $index < $totalowners AND $tmpB = TRUE
		$tmpN = $index + 1
		$list = List("sql","item","$tmpN")
		$UserSort = Val(Extract($list,";",1))
		$OwnerID = "" #Extract($list,";",2)
		$OwnerName = Extract($list,";",2)
		IF $index >19 AND $UserSort > $Cutoff
			GOSUB Name=MakeUserLink
			$index=$index+1
			$indexstring = Str($index,2,0)
			$result3 = $result3 + "$UserLink,$UserSort;"
		ENDIF
		IF $index <=19 and $index >9
			GOSUB Name=MakeUserLink
			$index=$index+1
			$indexstring = Str($index,2,0)
			$result2 = $result2 + "$indexstring - $UserLink,$UserSort;"
		ENDIF
		IF $index <=9
			GOSUB Name=MakeUserLink
			$index=$index+1
			$indexstring = Str($index,2,0)
			$result = $result + "$indexstring - $UserLink,$UserSort;"
		ENDIF
		IF $index >19 AND $UserSort <= $Cutoff
			$tmpB = FALSE
		ENDIF
	ENDWHILE
	$listedowners = $index
	IF $listedowners > 40
		$listedowners = 40
	ENDIF
	$unlistedowners = $totalowners - $listedowners

	# Generate output
	# Initialise Section variables
	$colspan = 1
	$note=""
	$maxwidth=50
	$totalpercent = $FindsWithDuplicates
	GOSUB Name=Open2Col
	GOSUB Name=Table2Col
	GOSUB Name=Mid2Col
	$result = $result2
	GOSUB Name=Table2Col
	GOSUB Name=Close2col
	IF $result3 <> ""
		$out = $out + "<b><i>$Lang40</i></b><table style='text-align: left;'>"
		$out = $out + $CR+ "<tr>" + $CR
		$result = $result3
		$index = 0
		$NumItems = RegExCount(";",$result)
		WHILE $index < $NumItems AND $index < 20
			$index = $index + 1
			$data = Extract($result, ";" , $Index)
			$text = Extract($data, ",", 1)
			$num  = Val(Extract($data, ",", 2))
			$out = $out + "<td style='$stOwners3'><span >$text ($num)</span></td>" + $CR
			IF $index/4 = Int($index/4) AND $index <> 20
				$out = $out + "</tr><tr>" + $CR
			ENDIF
		ENDWHILE
		$out = $out + "</tr>" + $CR
		$out = $out + "</table>" + $CR
	ENDIF
	IF $unlistedowners >0
		$out = $out + "<br /><i>$user $FLUnlisted1 "
		$out = $out + "<b>$unlistedowners</b> $FLUnlisted2</i>" + $CR
	ENDIF
ENDSUB # FriendsList

BEGINSUB Name=MakeUserLink
	# Generate HTML link from GC userID
	# Format: http://www.geocaching.com/profile/?id=216368
	# Input: Ensure database is on one of the users cache so $d_OwnerId &
	# $d_Ownername are valid
	# Output: $UserLink
	IF Len($OwnerName) > 20
		$ShrunkOwnerName = Left($OwnerName,18) + "..."
	ELSE
		$ShrunkOwnerName = $OwnerName
	ENDIF
	$ShrunkOwnerName = Replace(","," ",$ShrunkOwnerName,true)
	$ShrunkOwnerName = Replace(";"," ",$ShrunkOwnerName,true)

	IF $FLProfileLinks = true
		#Strip off the first character
		$tmpS = Left($OwnerId,1)
		$OwnerId = SubStr($OwnerId,2,0)

		BEGINCASE
		CASE $tmpS = "T"
			$UserLink = "<a href='http://www.terracaching.com/profile.cgi?ID=$OwnerId'>"
		CASE $tmpS = "A"
			$UserLink = "<a href='http://geocaching.com.au/cacher/" + Replace(" ","+",$OwnerName,TRUE) + "'>"
		OTHERWISE
			IF NumToStr(Val($OwnerId))= $OwnerId     # equal - $OwnerId is number, link is created from $OwnerId
				$UserLink = "<a href='http://www.geocaching.com/profile/?id=$OwnerId'>"
			ELSE                                  # not equal - $OwnerId is something else, link is created from $OwnerName
				$UserLink = "<a href='http://www.geocaching.com/profile/?u="+HttpEncode($OwnerName)+"'>"
			ENDIF
		ENDCASE

		$UserLink = $UserLink + $ShrunkOwnerName + "</a>"
	ELSE
		$UserLink = $ShrunkOwnerName
	ENDIF

ENDSUB #MakeUserLink

BEGINSUB Name=Open2Col
	# Open the table for two column output
	$out = $out + "<!-- Open2Col -->" + $CR
	$out = $out + "<table border='0'>" + $CR
	$out = $out + "<tr>" + $CR
	$out = $out + "<td valign='top' align='center'>" + $CR
ENDSUB #Open2Col

BEGINSUB Name=Mid2Col
	# Add the HTML for between two, two column sections
	$out = $out + "<!-- Mid2Col -->" + $CR
	$out = $out + "</td>" + $CR
	$out = $out + "<td  valign='top' align='center'>" + $CR
ENDSUB #Mid2Col

BEGINSUB Name=Close2Col
	# Finish two column output
	$out = $out + "<!-- Close2Col -->" + $CR
	$out = $out + "</td></tr></table>" + $CR
ENDSUB #Close2col

BEGINSUB Name=Table2Col
	# This subroutine writes a fixed format stats table, taking these inputs:
	# $result : semicolon delimited record pairs, each record is a 'text'
	#           and a 'number' separated by a comma
	# $maxnum : The largest number in the dataset
	# $note   : Any note that should appear beneath the table
	# $totalpercent : The total that percentage is based on, nomrally $FindsWithDuplicates
	#
	# NB. It would be 'nicer' to calculate $maxnum in this routine, but there
	# is a significant cycle saving by doing it in the stats generating routines
	# They've already been through the data once after all!
	# Open the table and write the header line to the output variable
	$out = $out + "<!--  Table2Col -->" + $CR
	$out = $out + "<table border='0' summary='' width='375' style='text-align: left;'>" + $CR
	$out = $out + "<tr><td style='$stTab2cHead'><b> $FLFriend </b></td><td style='$stTab2cHead'><b> $Lang05 </b></td>"
	$out = $out + "<td style='$stTab2cHead'><b> $Lang06 </b></td><td style='$stTab2cHead'>&nbsp;</td></tr>" + $CR
	# How many records?
	$NumItems = RegExCount(";",$result)
	# Go through the data, one record at a time
	$index = 0
	WHILE $index < $NumItems
		$index = $index + 1
		# Get one data element
		$data = Extract($result, ";" , $Index)
		$text = Extract($data, ",", 1)
		$num  = Val(Extract($data, ",", 2))
		# Replace ampersands with &amp; etc to keep the HTML sweet
		$text = Replace("&","&amp;",$text,true)
		$text = Replace("%lt","&lt;",$text,true)
		$text = Replace("%gt","&gt;",$text,true)
		# Calculate the percentage of this record
		$pc = ($num/$totalpercent) * 100
		$percent = left("$pc",4)
		# Call the subroutine to write a row out
		GOSUB Name=Table2ColRow
	ENDWHILE
	# write table footer
	$out = $out + "</table>" + $CR
	IF $note <> ""
		$out = $out + "<span style='$stSmall'>$note</span>" + $CR
	ENDIF

ENDSUB # Table2Col

BEGINSUB Name=Table2ColRow
	# Write a row in the standard half width layout
	# If this is the largest data element, make the bar red and highlight it
	IF $num = $maxnum
		$style1 = $st2cHi1
		$style2 = $st2cHi2
	ELSE
		$style1 = $st2c1
		$style2 = $st2c2
	ENDIF
	# Write the row data to the output variable
	$out = $out + "<!-- Table2Col Row-->" + $CR
	$out = $out + "<tr><td style='$style1'>$text</td>" + $CR
	$out = $out + "<td style='$style2'>$num</td>" + $CR
	$out = $out + "<td style='$style2'>$percent %</td>" + $CR
	$out = $out + "<td style='$style2' width='$maxwidth'>" + $CR

	IF $maxnum = 0
		$maxnum = 1
	ENDIF

	$width = Int($maxwidth * $num / $maxnum)

	IF $width=0 AND $num >0
		$width = 1
	ENDIF

	IF $width>0
		GOSUB Name=HBar
	ENDIF
	$out = $out + "</td></tr>" + $CR
ENDSUB #Table2ColRow

BEGINSUB Name=HBar
	# Output the horizontal bar for the 'graph' display

	IF $UseImageBars
		IF $num = $maxnum
			$image = $imagepath + $ImageRH
			$out = $out + "<img src='$image' border='0' width='$width' "
		ELSE
			$image = $imagepath + $ImageBH
			$out = $out + "<img src='$image' border='0' width='$width' "
		ENDIF
		$out = $out + "height='15' alt='$num' title='$num' />" + $CR
	ELSE
		IF $UseHeatBars
			$heatnum = $num
			$heatmax = $maxnum
			GOSUB Name=GetHeatColor
			$out = $out + "<div title='$num' style='background: #$HeatColor; width:$width" + "px;'>&nbsp;</div>"
		ELSE
			IF $num = $maxnum
				$out = $out + "<div title='$num' style='background: $stRedBar; width:$width" + "px;'>&nbsp;</div>"
			ELSE
				$out = $out + "<div title='$num' style='background: $stBlueBar; width:$width" + "px;'>&nbsp;</div>"
			ENDIF
		ENDIF
	ENDIF
ENDSUB #HBar

BEGINSUB Name=GetHeatColor
	$begRed = 20
	$redChange = 180
	$begGreen = 50
	$greenChange = 150
	$begBlue = 0
	$blueChange = 0

	IF $heatmax > 0 AND $heatnum > 0
		# Use log scale to enhance color differences
		IF $heatmax = 1 AND $heatnum = 1
			$heatx = 1
		ELSE
			$heatx = Log($heatmax,$heatnum)
		ENDIF
		
		$heaty = 1-($heatnum/$heatmax)
		# Scale so one color is always at full intensity
		IF $heatx >= $heaty
			$heaty = $heaty/$heatx
			$heatx = 1
		ELSE
			$heatx = $heatx/$heaty
			$heaty = 1
		ENDIF
	ELSE
		$heatx = 0
		$heaty = 0
	ENDIF
	$red=$begRed+($redChange*$heatx)
	$dec=$red
	GOSUB Name=dectohex
	$redhex=$hex
	$green=$begGreen+($greenChange*$heaty)
	$dec=$green
	GOSUB Name=dectohex
	$greenhex=$hex
	$blue=$begBlue+($blueChange*$heatx)
	$dec=$blue
	GOSUB Name=dectohex
	$bluehex=$hex
	$heatcolor = $redhex + $greenhex + $bluehex
	$heatstyle = "background: #" + $redhex + $greenhex + $bluehex + "; color: #FFFFFF;"

ENDSUB #GetHeatColor

BEGINSUB name=dectohex
	# Takes input from 0-255 as a decimal number in $dec
	# and returns it as a two character hex string in $hex

	$hexlookup="0123456789ABCDEF"
	$c_d = Int($dec)
	$c_q = Int($c_d/16)
	$c_r = $c_d - ($c_q*16)
	$hex = SubStr($hexlookup,$c_q+1,1) + SubStr($hexlookup,$c_r+1,1)
ENDSUB

BEGINSUB Name=InitLanguage
	Declare Var=$FLFriend Type=String
	Declare Var=$FLUnlisted1 Type=String
	Declare Var=$FLUnlisted2 Type=String
	Declare Var=$FLLangUserDataError Type=String
	Declare Var=$FLLangProfileLinksError Type=String
	Declare Var=$FLLangTxtFriendError Type=String
	Declare Var=$FLLangSeparatorError Type=String
	
	# default: English
	$FLFriend = "Friend"	
	$FLLangUserDataError = "Error at ListItems parameter:"	
	$FLLangProfileLinksError = "Error at ProfileLinks parameter:"	
	$FLLangTxtFriendError = "Error at TxtFriend parameter:"	
	$FLLangSeparatorError = "Error at Separator parameter:"	
	$FLUnlisted1 = "got accompanied by"
	$FLUnlisted2 = "other friends"

	IF $Language = "Deutsch"
		$FLFriend = "Freund"	
		$FLLangUserDataError = "Fehler beim ListItems-Parameter:"	
		$FLLangProfileLinksError = "Fehler beim ProfileLinks-Parameter:"	
		$FLLangTxtFriendError = "Fehler beim TxtFriend-Parameter:"	
		$FLLangSeparatorError = "Fehler beim Separator-Parameter:"	
		$FLUnlisted1 = "wurde ausserdem von "
		$FLUnlisted2 = "weiteren Freunden beim Cachen begleitet"
	ENDIF
ENDSUB

BEGINSUB name=DeclareVariables
	Option Explicit=Yes
	
	Declare Var=$FLUserData Type=String
	Declare Var=$FLProfileLinks Type=Boolean
	Declare Var=$FLSeparator Type=String
	Declare Var=$FLStripped Type=String
	Declare Var=$FLsqlAnd Type=String
ENDSUB


