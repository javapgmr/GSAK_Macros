#************************************************************************
# The following macro will generate then display the current waypoint in
# your default browser.

# This display is roughly the same as when you take "show offline" option
# or view the waypoint in split screen with the "full display" format.

# The reason for providing this macro is so you can use it is a template
# to produce your own custom formats.

# The macro is modular and items like Travel bugs, child waypoints, logs,
# etc have been generated using subroutines so you can easily copy/change
# these blocks of code to create your custom page.

# You can then add these custom formats as tool buttons for quick access.

# In a future version of GSAK I will add the ability to add these macros
# to the "split screen" drop down list, and also in the
# "File=>Export=>HTML". You will then have the ability to fully customize
# the HTML generated by GSAK.

#**************************************************************************

# check to see if macro can run on this version
Gosub name=VersionCheck

# set where the actual file will be generated
$file = $_Install + "\temp\HtmlOffline.htm"

# GSAK images for cache and log types are stored here
$images = "file://" + $_Install + "\images"

# HTML expects the path to contain forward slashes, so convert the path to all forward slashes.
$images = replace("\","/",$images,false)


# set up required tables
$html = $header
$html = $html + "<table align=center bgcolor=" + quote("white") + " border=0 width=95% summary=" + quote("GSAK") + "><tr><td>"  + $_newline
$html = $html + "<table align=center bgcolor=" + quote("white") + " border=0 width=95% summary=" + quote("Latest Information") + ">" + $_NewLine
$html = $html + "<tr bgcolor=" + quote("white") + "> <td >" + $_NewLine

# set the Url to click on to go online
$html = $html + "Details are from the offline database last updated on " + DateFormat($d_LastGpxDate) + $_NewLine
if not (isempty($d_url))
  $html = $html + "(<a href=" + quote($d_Url) + ">Online waypoint URL</a>)" + $_NewLine
EndIf
$html = $html + "</td></tr></table>" + $_NewLine

# cache type image
$html = $html + "<img src=" + quote($images + "\cache" + $d_CacheType + ".gif") 
$html = $html + "alt="  + quote($d_CacheType) + " >" + $_NewLine  

# cache name line
$html = $html + "<b>" + $d_name + " by " + $d_PlacedBy + " ($d_difficulty/$d_Terrain) </b><br>"

# generate Latitude and Longitude output
$temp = GeoCalc($d_Latitude + ";" + $d_Longitude, "FormatMinutes")
$html = $html + "<b>" +  extract($temp,";",1) + " " + extract($temp,";",2) + "</b> (WGS84) <br>"  + $_Newline

# generate Waypoint code
$html = $html + "Use wapoint: " + $d_Code + "<br>" + $_newline

# container and date hidden/placed
$html = $html + "Size: " + $d_container + "&nbsp;&nbsp;&nbsp; Hidden on: " + DateFormat($d_PlacedDate) + "<br>" + $_NewLine

# state, country
$html = $html + "In: " + $d_state + ", " + $d_Country + "<br>" + $_NewLine

# Travel Bugs
GoSub Name=TravelBugs
$html = $html + $TravelBugs

# difficulty stars
GoSub Name=Difficulty
$html = $html + $Difficulty + $_NewLine

# Terrain stars
Gosub Name=Terrain
$html = $html + $Terrain + "<br>" + $_NewLine

# now the short description (but only if actaully something there)
If not (IsEmpty($d_ShortDescription))
  $html = $html + "<table align=center border=0 width=95% summary=" + quote("Short Description") + "><tr>" + $_NewLine
  $HtmlText = $d_ShortDescription
  # make plain text if not HTML encoded
  If not ($d_ShortHtm)
    GoSub Name=HtmlText
  EndIf
  $html = $html + "<td>" + $HtmlText + "</td></tr></table>" + $_NewLine
EndIf

# horizonal line here
$html = $html + "<hr>" + $_NewLine

# now the Long description (but only if actaully something there)
If not (IsEmpty($d_LongDescription))
  $temp = $d_LongDescription
  # remove "adition hidden waypoint" as these are shown in the GSAK child waypoint section
  if at("Additional Hidden Waypoints",$temp) > 0
    $temp = Extract($temp,"Additional Hidden Waypoints",1)
  EndIf
  # make plain text if not HTML encoded
  $HtmlText = $temp
  If not ($d_LongHtm)
    GoSub Name=HtmlText
  EndIf
  $html = $html + $HtmlText + "<br>" + $_NewLine
EndIf

# now child waypoints 
GoSub Name=Child
$Html = $html + $child

# Link to hints if any
If IsEmpty($d_Hints)
  $html = $html + "<p><b> Additional Hints</b> (There are no hints for this cache)" + $_NewLine 
else
  $Html = $html + "<p><b>Additional Hints </b><a href=" + quote("#Hints") + ">Hints</a>" + $_NewLine
Endif 

# Horizonal line here
$Html = $html + "<hr>" + $_NewLine

# now the logs 
GoSub Name=Logs
$Html = $html + $logs

# decode hints at the very end
GoSub Name=Hints
$Html = $Html + $hints
  
	
$html = $html + "</table></body></html>" + $_NewLine	
	

$error = Putfile($file,$html)

FileOpen File="$file"

# Finally, just in case calling this macro from another macro, make sure caches is now the active table
Table active=Caches

#******************************************************************
# subroutine and <data> elements start here
#******************************************************************

BeginSub Name=Hints
  $Hints = ""
  If IsEmpty($d_Hints)
    ExitSub
  EndIf
  $HtmlText = $d_Hints
  GoSub Name=HtmlText
  $Hints = "<a name=" + quote("Hints") + "></a><p><b>Decoded Hints</b><br><table border=0 "
  $Hints = $hints + "width=80% summary=" + quote("hints") + "><tr><td>"
  $Hints = $hints + $HtmlText + "<p align=" + quote("center") + "></p></tr></table>" + $_NewLine
EndSub



BeginSub Name=TravelBugs

# this section of code is best understood if we look at sample information of how the
# travelbug information is stored in the database. Travel bug information is currently
# combined into one field in the database called $d_TravelBugs. Here is a sample of 3
# travel bugs:

# <BR>Bugsbee (id = 57508, ref = TBE0A4)
# <BR>Toots the Brownie Bug (id = 70643, ref = TB113F3)
# <BR>(I was) Sad eye lobster (id = 105939, ref = TB19DD3)

# The follwoing code is required to extract the required information we want to show in
# our HTML output.
 
  $TravelBugs = ""
  $temp = ""
  If $d_HasTravelBug
    $Temp = "<img src=" + quote($Images + "/bug.gif") + " alt=" + quote("bug")
    $Temp = $temp + " border=" + quote("0") + "> (This cache may contain travel bugs)<br>"
    $TotalBugs = RegExCount("\r\n",$d_TravelBugs) #\r\n counts the line terminators
    $x = 0
    While $x < $TotalBugs
      $x = $x + 1
      $tb = RegExData(".+\r\n",$d_TravelBugs,$x) # this regex gets all the data for that line
      $tbName = Extract($tb,"(id =",1)
      $tbName = Replace("<br>","",$tbName,true) # this removes the <br> in the name
      $tbId = Extract($tb,"(id = ",2)
      $tbId = Extract($tbid,",",1)  
      $tbRef = Extract($tb,"ref = ",2)
      $tbRef = Extract($tbRef,")",1)
      $temp = $temp + $tbName + "(ref = <a href=" + quote("http://www.geocaching.com/track/details.aspx?id=" + $tbId)
      $temp = $temp + "> " + $tbRef + ")</a> <br>"
    EndWhile
    $TravelBugs = $temp
  EndIf
EndSub
  

BeginSub Name=LogImage
 # debug status=on
  $logImage = extract($LogTypes,$d_lType + "=",2)
  If IsEmpty($logImage)
    $logImage = "Note"
  Else
    $logImage = extract($LogImage,$_Newline,1)
  EndIf
  $LogImage = $Images + "/log" + $LogImage + ".gif"
EndSub

BeginSub Name=Difficulty
  $RoundedString = str($d_Difficulty,1,0)
  $RoundedNumber = val($RoundedString)
  If $RoundedNumber > $d_Difficulty # if has decimal portion will be rounded up
    $WholeNumber = NumToStr($RoundedNumber - 1)
  Else
    $WholeNumber = NumToStr($RoundedNumber)
  EndIf

  $x = 0
  $temp = "Difficulty: "
  While $x < val($wholeNumber)
     $temp = $temp + "<img src=" + quote($images + "/staryellow.gif") +  " height=" + quote("18") + "width=" + quote("18") + " alt=" + quote("*") + ">" + $_Newline
     $x = $x + 1
  EndWhile
  
  If $RoundedNumber > $d_Difficulty 
    $temp = $temp + "<img src=" + quote($Images + "/halfstaryellow.gif") + " height=" + quote("18") + " width=" + quote("10") + " alt=" + quote("&frac12;") + ">" + $_Newline
  EndIf
  $Difficulty = $temp
EndSub

BeginSub Name=Terrain
  $RoundedString = str($d_Terrain,1,0)
  $RoundedNumber = val($RoundedString)
  # if has decimal portion will be rounded up
  If $RoundedNumber > $d_Terrain
    $WholeNumber = NumToStr($RoundedNumber - 1)
  Else
    $WholeNumber = NumToStr($RoundedNumber)
  EndIf

  $x = 0
  $temp = "&nbsp;&nbsp;Terrain: "
  While $x < val($wholeNumber)
     $temp = $temp + "<img src=" + quote($images + "/stargreen.gif") +  " height=" + quote("18") + "width=" + quote("18") + " alt=" + quote("*") + ">" + $_Newline
     $x = $x + 1
  EndWhile

  if $RoundedNumber > $d_Terrain 
    $temp = $temp + "<img src=" + quote($Images + "/halfstargreen.gif") + " height=" + quote("18") + " width=" + quote("10") + " alt=" + quote("&frac12;") + ">" + $_Newline
  EndIf
  $Terrain = $temp
EndSub

BeginSub name=HtmlText
  $HtmlText = Replace("<br>", "~.~", $HtmlText, true) # exception, do not replace <br>
  $HtmlText = Replace("&", "&amp;", $HtmlText, false)
  $HtmlText = Replace("<","&lt;", $HtmlText, false)
  $HtmlText = Replace(">", "&gt;", $HtmlText, false)
  $HtmlText = Replace($_quote, "&quot;", $HtmlText, false)
  $HtmlText = Replace("~.~", "<br>", $HtmlText, false)
  $HtmlText = Replace($_Newline,"<br>",$HtmlText,false) 
EndSub


BeginSub name=Child
  Table Active=WayPoints scope=Parent
  $Child = ""
  If $_count > 0
    $temp = "<b>Additional Waypoints (" + NumToStr($_count) + ") </b>" + $_NewLine
    $temp = $temp + "<table cellspacing=" + quote("0") + " border=" + quote("1") + "><tr align=" + quote("center") + "><td><b>Prefix</b></td><td><b>Name</b></td><td><b>Type</b></td>"
    $temp = $temp + "<td><b>Comments</b></td><td><b>Coordinates</b></td></tr>" + $_NewLine
    While not($_eol)
      $temp = $temp + "<tr>" + $_NewLine
      $temp = $temp + "<td>" +  $d_cPrefix + "</td>" + $_NewLine
      $temp = $temp + "<td><a href=" + quote($d_cUrl) + ">" + $d_cName + "</a>&nbsp;&nbsp;</td>" + $_NewLine
      $temp = $temp + "<td>" + $d_cType + "&nbsp;&nbsp;</td>" + $_NewLine
      $temp = $temp + "<td>" + $d_cComment + "&nbsp;&nbsp;</td>" + $_NewLine
      $temp2 = GeoCalc($d_cLat + ";" + $d_cLon, "FormatMinutes")
      $temp2 = extract($temp2,";",1) + " " + extract($temp2,";",2) 
      $temp = $temp + "<td>" + $temp2 + "</td>" + $_NewLine 
      $temp = $temp + "</tr>" + $_NewLine
      Goto Position=Next
    EndWhile
    $Child = $temp + "</table>" + $_NewLine
  EndIf
EndSub

BeginSub name=Logs
  Table Active=Logs scope=Parent
  $logs = ""
  If $_count > 0
    $temp = ""
    While not ($_eol)
      GoSub Name=LogImage 
      $temp = $temp + "<p>" + "<img src=" + quote($LogImage) + " width=" + quote("15") + " height=" + quote("15") +  " alt=" + quote($d_lType) + ">" 
      $temp = $temp + "&nbsp;<b>" + DateFormat($d_lDate) + " by&nbsp;" + $d_lBy + "</b><br>" + $_NewLine
      $HtmlText = $d_lText
      GoSub Name=HtmlText
      $temp = $temp + $HtmlText + $_NewLine
      Goto Position=Next
    EndWhile
    $Logs = $temp 
  EndIf
EndSub


Beginsub name=VersionCheck
  #*****************************************************************
  # Block of code to make sure macro can run in this version of GSAK
  #*****************************************************************
  $RequiredVersion = "6.6.1.15"
  # Get required version as a number we can compare
  $work = extract($RequiredVersion,".",1)
  $RequiredNumber = Val($work) * 10000
  $work = extract($RequiredVersion,".",2)
  $RequiredNumber = $RequiredNumber + (Val($work) * 1000)
  $work = extract($RequiredVersion,".",3)
  $RequiredNumber = $RequiredNumber + (Val($work) * 100)
  $work = extract($RequiredVersion,".",4)
  $RequiredNumber = $RequiredNumber + Val($work)
  # Get current version as a number we can compare
  $work = extract($_Version,".",1)
  $CurrentNumber = Val($work) * 10000
  $work = extract($_Version,".",2)
  $CurrentNumber = $CurrentNumber + (Val($work) * 1000)
  $work = extract($_Version,".",3)
  $CurrentNumber = $CurrentNumber + (Val($work) * 100)
  $work = extract($_Version,".",4)
  $CurrentNumber = $CurrentNumber + Val($work)
  If $RequiredNumber > $CurrentNumber
    $msg = "*Error* - This macro requires version $RequiredVersion or Higher." + $_NewLine + $_NewLine
    $msg = $msg + "You are currently running GSAK version: $_Version"
    pause msg=$msg
    Cancel
  EndIf
EndSub

<data> VarName=$header
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>GSAK Offline</title>
<style type='text/css'>                                                 
.FullText { font-weight: bold; color: #F00; background-color: #FF0 } 
.gsak { font-family: Times, serif }
</style>
</head>                                                                
<body text="#000000">
<enddata>

<data> VarName=$LogTypes
Webcam Photo Taken=Webcam
Found it=Found
Didn't find it=NotFound
Temporarily Disable Listing=Disable
Archive (show)=Archived
Archive (no show)=Archived
Needs Archived=NeedsArchived
Post Reviewer Note=Review
Will Attend=WillAttend
Enable Listing=Enable
Publish Listing=Published
Owner Maintenance=OwnerMaintenance
Needs Maintenance=NeedsMaintenance
Update Coordinates=UpdateCoordinates
Attended=Attended
<enddata>
