#*******************************************
# MacVersion = 1.0.1
# MacDescription = Instant Filter
# MacAuthor = Lignumaqua
# MacFileName = iFilter.gsk
# MacUrl =
#*******************************************

# 1.0 Version History:
#
# 1.0.0 12-27-08 First full release
# 1.0.1 2-19-09 Change to SQLiteCaches code for 7.5.2.10 and later

$test = 1
VERCHECK Version=7.5.0.172 (Note: this macro requires the latest 7.5 GSAK release)

IF $_Version < "7.5.2.10"
 		$SQLiteTable = "CachesAll"
ELSE
 		$SQLiteTable = "CachesTempAll"
ENDIF

$macrofile = $_Install + "\macros\iFilterRun.gsk"
$datafile = $_Install + "\macros\iFilter.db3"

$variables = ""

# Set up the SQL table

IF NOT(FileExists($datafile))
 	$status = Sqlite("create",$datafile)
ENDIF

$status = Sqlite("open",$datafile)

$Data="SaveName text UNIQUE, SaveText text"
$_sql = "CREATE TABLE IF NOT EXISTS ifilter ($Data)"
$status = Sqlite("sql",$_sql)
$Data="ID integer UNIQUE, variables text"
$_sql = "CREATE TABLE IF NOT EXISTS history ($Data)"
$status = Sqlite("sql",$_sql)

$_sql = "SELECT variables FROM history WHERE ID = '1'"
$history = Sqlite("sql",$_sql,"delim=%%")

$_sql = "SELECT SaveName FROM ifilter ORDER BY SaveName"
$PromptSaveText = "Select saved setting..."
$SaveNameValues = $PromptSaveText + ";" +  Sqlite("sql",$_sql)
$SaveNameValues = Replace($_NewLine,";",$SaveNameValues)

# Saved data to see whether we need to re-issue sqlitecaches?
IF VarExists("p_database")
	IF $P_Database = $_CurrentDatabase
		$UpdateSQLite = FALSE
	ELSE
		$UpdateSQLite = TRUE
	ENDIF
ELSE
	$UpdateSQLite = TRUE
ENDIF

# Was the macro called from another  macro?
IF Len($_MacroParms) > 0
	$SaveBoxSQL = Replace("'","''",$_MacroParms)
	$_sql = "SELECT SaveText FROM iFilter WHERE SaveName = '$SaveBoxSQL'"
	$ExpressionText = Sqlite("sql",$_sql,"")
	$OK = TRUE
	GOSUB Name=DoFilter
	CANCEL
ENDIF

#$Form = EditForm($Form,"ExpressionText","Values",$History)
$HistoryList = $History
#$Form = EditForm($Form,"SaveBox","Values",$SaveNameValues)
$SaveBoxList = $SaveNameValues

WHILE TRUE		
	$result = Form($form,"")
	# Reset the screen position of the menu form to where the user left it
  $Form = EditForm($Form,"Form1","Top",$_FormTop)
  $Form = EditForm($Form,"Form1","Left",$_FormLeft)
  	
  BEGINCASE #Buttons
  	CASE $Cancel
   		CANCEL
		CASE $OK
			GOSUB Name=DoFilter
			IF $FilterGood
				CANCEL
			ENDIF
			$status = Sqlite("open",$datafile)
			$_sql = "SELECT variables FROM history WHERE ID = '1'"
			$history = Sqlite("sql",$_sql,"delim=%%")
			$HistoryList = $History
		CASE $Save
			GOSUB name=Save
		CASE $Delete
			GOSUB name=Delete
		CASE $result="SaveBox"
			GOSUB name=SaveBox
	  OTHERWISE 
  		CANCEL
  ENDCASE	
ENDWHILE

# Save values
BEGINSUB name=Save
	IF $SaveBox = $PromptSaveText
		$Name = ""
	ELSE
		$Name = $SaveBox
	ENDIF
	$result = Form($form2,"")
	IF $NameOK
		$NameSQL = Replace("'","''",$Name)
		$ExpressionTextSQL = Replace("'","''",$ExpressionText)
		$_sql = "REPLACE INTO iFilter VALUES ('$NameSQL','$ExpressionTextSQL')"
		$status = Sqlite("sql",$_sql)
		$_sql = "SELECT SaveName FROM ifilter ORDER BY SaveName"
		$SaveNameValues = $PromptSaveText + ";" +  Sqlite("sql",$_sql)
		$SaveNameValues = Replace($_NewLine,";",$SaveNameValues)
		$SaveBoxList = $SaveNameValues
		$SaveBox = $Name
		$TempHistory = $ExpressionText + ";" + $history
		#$Form = EditForm($Form,"ExpressionText","Values",$temphistory)
		$HistoryList = $tempHistory
	ENDIF
ENDSUB

# Delete values
BEGINSUB name=DELETE
	IF $SaveBox = $PromptSaveText
		EXITSUB
	ENDIF
	$Name = $SaveBox
	$Form3 = EditForm($Form3,"FilterLabel","Caption",$Name)
	$result = Form($form3,"")
	IF $DeleteOK
		$NameSQL = Replace("'","''",$Name)
		$_sql = "DELETE FROM iFilter WHERE SaveName = '$NameSQL'"
		$status = Sqlite("sql",$_sql)
		$_sql = "SELECT SaveName FROM ifilter ORDER BY SaveName"
		$SaveNameValues = $PromptSaveText + ";" +  Sqlite("sql",$_sql)
		$SaveNameValues = Replace($_NewLine,";",$SaveNameValues)
		#$Form = EditForm($Form,"SaveBox","Values",$SaveNameValues)
		$SaveBoxList = $SaveNameValues
	ENDIF
ENDSUB

# Retrieve Saved value
BEGINSUB Name=SaveBox
	$SaveBoxSQL = Replace("'","''",$SaveBox)
	$_sql = "SELECT SaveText FROM iFilter WHERE SaveName = '$SaveBoxSQL'"
	$result = Sqlite("sql",$_sql,"")
	IF Len($result) > 0
		$TempHistory = $result + ";" + $history
		#$Form = EditForm($Form,"ExpressionText","Values",$temphistory)
		$HistoryList = $tempHistory
		$ExpressionText = $result
	ENDIF
ENDSUB

# Actually Filter!
BEGINSUB Name=DoFilter
	CANCELFILTER
$FilterGood = FALSE
$ExpressionText = Trim($ExpressionText)

IF $OK AND Len($ExpressionText) > 0
	# Update the history database
	$history = $ExpressionText + ";" + $history
	$historycount = RegExPos(";",$history,20)
	IF $historycount > 0
		$history = Left($history,$historycount - 1)
	ENDIF
	
	$HistorySQL = Replace("'","''",$History)
	$_sql = "REPLACE INTO history VALUES ('1','$HistorySQL')"
	$status = Sqlite("sql",$_sql)
		
	# MFILTER or SQLite?
	IF At("$d_",$ExpressionText) <> 0
		# MFILTER
		$macrotext = "MFILTER Expression=$ExpressionText"
		$macrotext = $macrotext + $_NewLine + "IF $" + "_FilterCount = 0" + $_NewLine + "MSGOK msg=Sorry this filter contains no waypoints. Filter will NOT be set" + $_NewLine + "ENDIF"
		$result = PutFile($macrofile, $macrotext)
		MACRO File=$macrofile
		$FilterGood = TRUE
	ELSE
		# SQLite
		IF $UpdateSQLite
			SQLITECACHES
			$P_Database = $_CurrentDatabase
		ENDIF
		# Open our current database that now contains the "caches" table
		$status = Sqlite("open","$_CurrentDataPath\sqlite.db3")
		$_sql = "SELECT code FROM $SQLiteTable Where " + $ExpressionText
		$codes = Sqlite("sql",$_sql,"error=trap")
		IF Left($codes,7) = "*Error*"
			$codes = Replace("*Error*","",$codes) + $_NewLine + $_NewLine + "             Press OK to continue"
			MSGOK msg="$codes"
		ELSE
			$FilterGood = TRUE
			MACROFLAG type=clear range=all
			$count = Val(CodeMatch($codes,$_NewLine,"M"))
			IF $count > 0
				MFILTER Expression=$d_MacroFlag
			ELSE
				MSGOK msg="Sorry this filter contains no waypoints. Filter will NOT be set"
			ENDIF
		ENDIF
	ENDIF
ENDIF
ENDSUB

<Data> VarName=$form
#********************************************************************
# Form generated by GSAK form designer on Fri 26-Dec-2008 17:22:59
#********************************************************************

Name = Form1
  Type = Form
  Caption = iFilter
  Height = 222
  Width = 500

Name = Groupbox1
  Type = Groupbox
  Caption = Settings
  Height = 53
  Left = 10
  Top = 85
  Width = 470
  Taborder = 2

Name = Groupbox2
  Type = Groupbox
  Height = 53
  Left = 10
  Top = 24
  Width = 470
  Taborder = 3

Name = Label1
  Type = Label
  Color = 16744448
  Height = 20
  Left = 194
  Size = 12
  Style = bold
  Top = 4
  Width = 103
  Caption = Instant Filter

Name = ExpressionText
  Type = Combobox
  Container = Groupbox2
  Directinput = yes
  Height = 21
  Left = 10
  Top = 25
  Values = $HistoryList
  Width = 450
  Taborder = 0
  Display = 20

Name = Label2
  Type = Label
  Container = Groupbox2
  Height = 13
  Left = 10
  Top = 9
  Width = 205
  Caption = Mfilter Expression or SQLite 'Where' clause:

Name = OK
  Type = Button
  Enter = yes
  Height = 25
  Left = 212
  Top = 153
  Width = 100
  Taborder = 0
  Caption = Filter

Name = UpdateSQLite
  Type = Checkbox
  Height = 17
  Left = 140
  Top = 158
  Width = 15
  Taborder = 1

Name = Label3
  Type = Label
  Height = 13
  Left = 10
  Top = 160
  Width = 120
  Caption = Update SQLite database:

Name = SaveBox
  Type = Combobox
  Container = Groupbox1
  Exitonchange = Yes
  Height = 21
  Left = 10
  Top = 18
  Values = $SaveBoxList
  Width = 220
  Taborder = 0
  Display = 20

Name = Save
  Type = Button
  Container = Groupbox1
  Height = 25
  Left = 266
  Top = 16
  Width = 75
  Taborder = 1

Name = Delete
  Type = Button
  Container = Groupbox1
  Height = 25
  Left = 369
  Top = 16
  Width = 75
  Taborder = 2

Name = Cancel
  Type = Button
  Height = 25
  Left = 353
  Top = 153
  Width = 100
  Taborder = 12
  Caption = Cancel

<enddata>

<Data> VarName=$form2
#********************************************************************
# Form generated by GSAK form designer on Fri 26-Dec-2008 17:07:47
#********************************************************************

Name = Form2
  Type = Form
  Caption = iFilter Name to Save ...
  Height = 163
  Width = 300

Name = Name
  Type = Edit
  Height = 21
  Left = 16
  Top = 28
  Width = 260
  Taborder = 8

Name = NameOK
  Type = Button
  Height = 30
  Left = 33
  Top = 80
  Width = 75
  Taborder = 9
  Caption = OK

Name = Cancel
  Type = Button
  Height = 30
  Left = 183
  Top = 80
  Width = 75
  Taborder = 10
  Caption = Cancel

<enddata>

<Data> VarName=$form3
Name = form3
  Type = Form
  Caption = Confirm deletion
  Height = 163
  Width = 300

Name = DeleteOK
  Type = Button
  Height = 30
  Left = 33
  Top = 80
  Width = 75
  Taborder = 8
  Caption = Delete

Name = Cancel
  Type = Button
  Height = 30
  Left = 183
  Top = 80
  Width = 75
  Taborder = 9
  Caption = Cancel

Name = Label1
  Type = Label
  Height = 16
  Left = 11
  Size = 10
  Top = 10
  Width = 270
  Caption = Confirm that you wish to delete the saved filter:

Name = FilterLabel
  Type = Label
  Color = 255
  Height = 16
  Left = 20
  Size = 10
  Top = 40
  Width = 58
  Caption = %name%

<enddata>

#*******************************************************
#   Variable declarations for
#   ifilter.gsk
#
#   Generated 2/19/2009 9:35:13 PM on GSAKVariables.gsk Rev V0.30
#
#*******************************************************


#Option Explicit=Yes

Declare Var=$codes Type=String
Declare Var=$count Type=Numeric
Declare Var=$Data Type=String
Declare Var=$datafile Type=String
Declare Var=$ExpressionText Type=String
Declare Var=$ExpressionTextSQL Type=String
Declare Var=$FilterGood Type=Boolean
Declare Var=$Form Type=String
Declare Var=$form2 Type=String
Declare Var=$Form3 Type=String
Declare Var=$history Type=String
Declare Var=$historycount Type=Numeric
Declare Var=$HistoryList Type=String
Declare Var=$HistorySQL Type=String
Declare Var=$macrofile Type=String
Declare Var=$macrotext Type=String
Declare Var=$Name Type=String
Declare Var=$NameSQL Type=String
Declare Var=$OK Type=Boolean
Declare Var=$P_Database Type=String
Declare Var=$PromptSaveText Type=String
Declare Var=$result Type=String
Declare Var=$SaveBox Type=String
Declare Var=$SaveBoxList Type=String
Declare Var=$SaveBoxSQL Type=String
Declare Var=$SaveNameValues Type=String
Declare Var=$SQLiteTable Type=String
Declare Var=$status Type=String
Declare Var=$TempHistory Type=String
Declare Var=$test Type=Numeric
Declare Var=$UpdateSQLite Type=Boolean
Declare Var=$variables Type=String
