#*******************************************
# MacVersion = 0.0.3
# MacDescription = Generates badges based on your geocaching accomplishments.
# MacAuthor = ky.m.guy
# MacFileName = BadgeGenTrial.gsk
# MacUrl = http://kylemills.net/Geocaching/BadgeGen/
# ForumThread = http://gsak.net/board/index.php?act=ST&f=7&t=17611
#*******************************************



BEGINSUB name=DeclareTotalBadges
	$TotalNumberofBadges = 37 #The total number of badges...not including *any* state badges.
ENDSUB


TIMER status=on
$Version = "V0.0.4 TRIAL"
VERCHECK Version=7.7.2.25 (please update GSAK to version 7.7 to run this macro - see http://gsak.net/board/index.php?showtopic=13999&view=findpost&p=94364)

GOSUB name=VersionCheck
BEGINSUB name=VersionCheck
	#Declare versioncheck variables
	OPTION Explicit=on
		DECLARE Var=$test1 Type=string
		DECLARE Var=$MostRecentVersion Type=String
		DECLARE Var=$StateData Type=string
		DECLARE Var=$StateValues Type=String
	OPTION explicit=off	
	SHOWSTATUS msg="Checking Internet Status" top=10 Left=10
	$test1=SysInfo("Internet")
	IF $test1="yes"
		SHOWSTATUS msg="Checking Version" top=10 Left=10
		$MostRecentVersion = GetUrl("http://kylemills.net/Geocaching/BadgeGen/MacroFiles/CurrentBetaVersion.php")
		SHOWSTATUS msg="Downloading State Data"  top=10 Left=10
		$StateData = GetUrl("http://kylemills.net/Geocaching/BadgeGen/badgescripts/statelist.txt")
		$StateValues = RegExReplace("[0-9]*",$StateData,"")
		$StateValues = Replace(",",";",$StateValues)
		$StateValues = Replace("$_NewLine","",$StateValues)
		$stateform = EditForm($stateform,"AvailableCountries","Values",$StateValues)
		SHOWSTATUS msg="" top=10 Left=10
		IF $Version <> $MostRecentVersion
			$Form = EditForm($Form,"NoNewVersion","ExitonClick","Yes")
			$Form = EditForm($Form,"NoNewVersion","File","Version.gif")
			$Form = EditForm($Form,"NoNewVersion","Name","NewVersionAvailable")
		ENDIF
	ELSE
		$StateData = $OfflineStateData
		PAUSE msg="You are not currently connected to the internet.  You can still run the macro and the HTML code that it generates will be correct only you will not be able to view your awarded badges until you have an internet connection."
	ENDIF
ENDSUB #name=VersionCheck

TIMER STATUS=ON
SHOWSTATUS msg="Assigning Literal Variables" top=10 Left=10
OPTION explicit=ON
DECLARE Var=$size type=string
DECLARE Var=$Light type=string
DECLARE Var=$Dark type=string
DECLARE Var=$Current type=string
DECLARE Var=$DBs type=string
DECLARE Var=$Override type=boolean
DECLARE Var=$AvailableCountries type=string
OPTION explicit=off
$AvailableCountries = ""
$Size="100"
$Light="FFCCCC"
$Dark="FF8080"
$Current=$_CurrentDatabase
$DBs=SysInfo("databases")
$Form = EditForm($Form,"EditBox","values",$DBs)
$Form = EditForm($Form,"EditBox2","values",$DBs)
$Override=FALSE
SHOWSTATUS msg=""


#---------------------------------------------------
GOSUB name=Declaration
IF $DelayRun
	$Form = EditForm($form,"Form1","Delay","5")
ENDIF
IF Not($HasRun)
	GOSUB name=DetermineHomeCoords
ENDIF
IF $WritetoFSG
	$Form = EditForm($form,"LabelSettings","visible","Yes")
	$Form = EditForm($form,"NotesSettings","visible","Yes")
	$Form = EditForm($form,"NotesSection","visible","Yes")
ENDIF
IF $ShowOther
	$Form = EditForm($form,"Groupbox4","Visible","Yes")
ENDIF
IF $Override
	$Form = EditForm($form,"HomeCoords","Enabled","Yes")
ENDIF
IF $AutoCountTrackables
	$TravString = "Auto"
	$CoinString = "Auto"
ENDIF
GOSUB name=InitializeSQLiteDatabase

GOSUB name=MainForm
#---------------------------------------------------


#--------------
# SubRoutines
#--------------


BEGINSUB name=MainForm
	#Kill Timer
	TIMER status=off msg=no
	$timer = $timer + Round($_Timer,3)
	WHILE TRUE
		$FormExit = form($form,"")
		BEGINCASE
		CASE $FormExit = "SystemExit"
			CANCEL
		CASE $FormExit = "Button1"
			TIMER status=ON
			GOSUB name=StrtoNum
			GOSUB name=Run
			RETURN
		CASE $FormExit = "DelayExit"
			TIMER status=ON
			GOSUB name=StrtoNum
			GOSUB name=Run
			RETURN
		CASE $FormExit = "Forum"
			WEB Url="http://kylemills.net/Geocaching/BadgeGen/index.html"
		CASE $FormExit = "NewVersionAvailable"
			WEB Url="http://kylemills.net/Geocaching/BadgeGen/download.php"
			CANCEL
		CASE $FormExit = "ConfigureState"
			GOSUB name=StateForm
		CASE $FormExit = "ShowOther"
			IF $ShowOther
				$Form = EditForm($form,"Groupbox4","Visible","Yes")
				GOSUB name=MainForm
			ELSE
				$Form = EditForm($form,"Groupbox4","Visible","No")
				GOSUB name=MainForm
			ENDIF
		CASE $FormExit = "WritetoFSG"
			IF $WritetoFSG
				MSGOK msg="This will clear ALL notes in the section chosen. Other sections will remain intact.  $_NewLine If you want to keep the data in your notes, press OK and uncheck this option."
				$Form = EditForm($form,"LabelSettings","visible","Yes")
				$Form = EditForm($form,"NotesSettings","visible","Yes")
				$Form = EditForm($form,"NotesSection","visible","Yes")
			ELSE
				$Form = EditForm($form,"LabelSettings","visible","No")
				$Form = EditForm($form,"NotesSettings","visible","No")
				$Form = EditForm($form,"NotesSection","visible","No")
			ENDIF
			GOSUB name=MainForm
		CASE $FormExit = "SuggestUnde"
			GOSUB name=SuggestUnde
		CASE $FormExit="EditTrackables"
			GOSUB name=CountTrackables
			GOSUB name=MainForm
		CASE $FormExit = "Override"
			IF $Override
				$Form = EditForm($form,"HomeCoords","Enabled","Yes")
				$HomeCoords = "Please enter coordinates"
			ELSE
				$Form = EditForm($form,"HomeCoords","Enabled","No")
				GOSUB name=DetermineHomeCoords
			ENDIF
			GOSUB name=MainForm
		EndCase
	ENDWHILE
ENDSUB #name=MainForm


BEGINSUB name=StateForm
	WHILE TRUE
		$FormExit = Form($stateform,"")
		BEGINCASE
		CASE $FormExit = "OK"
			GOSUB name=MainForm
		CASE $FormExit = "SystemExit"
			GOSUB name=MainForm
		CASE $FormExit = "SelectAll"
			$AvailableCountries = $StateValues
			GOSUB name=StateForm
		CASE $FormExit = "SelectNone"
			$AvailableCountries = ""
			GOSUB name=StateForm
		ENDCASE
	ENDWHILE
	
	
ENDSUB #name=StateForm




#------------------------------------------------------------------------------------------------------------------------------------------

BEGINSUB name=ShowLimits
	$Message="Please Wait"
	IF Not($RANDOMVARR=1)
		GOSUB name=Tense
		GOSUB name=Counter
		GOSUB name=Assignment
		GOSUB name=HoverText
	ENDIF
	GOSUB name=report
ENDSUB #name=ShowLimits


#------------------------------------------------------------------------------------------------------------------------------------------


BEGINSUB name=StrtoNum
	$Unde=Val($UndeString)
	$Trav=Val($TravString)
	$Coin=Val($CoinString)
	IF $WritetoFSG AND ($NotesSection="A")
		$NotesSection=""
	ENDIF

		$units = "m"
		$unitsshort = "m"
		$unitsbig = "km"
		$unitsshortbig = "km"

ENDSUB #StrtoNum

#------------------------------------------------------------------------------------------------------------------------------------------

BEGINSUB name=RUN
	$HasRun=TRUE
	MACSETTINGS Type=S Vars=AvailableCountries,Dark,Light,AutoCountTrackables,DelayRun,HasRun,Override,HomeCoords,SortBadges,MultipleLines,TopDiamond,TopBronze,ShowBelt,NotesSettings,NotesSection,UndeString,Editbox,Editbox2,Suppress,FirstPerson,ThirdPerson,Username,Size,ShowType,CoinString,TravString,ShowSize,ShowFTF,ShowDiff,ShowCoun,ShowHidd,ShowElev,ShowOther,PostMacroFile,RunPostMacro,WritetoFSG File="BadgeGenSavedSettings.data"


	IF $FirstPerson=FALSE AND $Username=""
		MSGOK msg=" You did not input a username but selected 'Third Person'.$_NewLine Please enter a username."
		GOSUB name=MainForm
	ENDIF
	TIMER status=on
	SHOWSTATUS msg="Preparing Databases" top=10 Left=10
	GOSUB name=Tense
	$Message="Determining Badges"
	IF not($RANDOMVARR=1)
		GOSUB name=Counter
	ENDIF
	GOSUB name=Assignment
	GOSUB name=PrepareHTML
	GOSUB name=Output
	DATABASE Name=$Current
ENDSUB #name=run

#------------------------------------------------------------------------------------------------------------------------------------------

BEGINSUB name=Tense
	IF $FirstPerson=TRUE
		$iYou="I"
		$hh="have"
		$nn="need"
	ELSE

		$iYou = Replace("'","",$Username)
		$hh="has"
		$nn="needs"
	ENDIF
ENDSUB #name=Tense

#------------------------------------------------------------------------------------------------------------------------------------------

BEGINSUB name=Counter


	$Temp = Sqlite("close","","")
	#Selects the desired database:
	IF not(DatabaseExists($Editbox))
		MsgOK msg="That database does not exist.  Please try again"
		GOSUB name=MainForm
	ENDIF

	IF not($_CurrentDatabase=$Editbox)
		DATABASE name=$Editbox StopStartupMacro=Y
	ENDIF
	MFILTER Expression=$d_Found
	SQLITECACHES Scope=FILTER
	$CountTemp = Sqlite("sql","Select COUNT(Code) from caches where found")
	IF Val($CountTemp)=0
		MSGOK msg="There are no found caches in the selected database. Please select a database containing found caches."
		GOSUB name=MainForm
	ENDIF
	
	SHOWSTATUS msg="Determining UserID" top=10 Left=10
	$UserID = Sqlite("sql","Select lownerid from logs where lisowner limit 1")
	SHOWSTATUS msg="Counting CacheTypes" top=10 Left=10
	$Trad = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='T') and lIsOwner"))
	$Mult = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='M') and lIsOwner"))
	$Virt = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='V') and lIsOwner"))
	$Myst = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='U') and lIsOwner"))
	$Lett = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='B') and lIsOwner"))
	$Wher = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='I') and lIsOwner"))
	$Webc = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='W') and lIsOwner"))
	$Apec = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='A') and lIsOwner"))
	$Eart = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='R') and lIsOwner"))
	$Mega = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='Z') and lIsOwner"))
	$Even = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='E') and lIsOwner"))
	$CITO = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType='C') and lIsOwner"))
	$Benc = Val(Sqlite("sql","Select count(distinct code) from caches where found and CacheType='G'"))
	$Waym = Val(Sqlite("sql","Select count(distinct code) from caches where found and CacheType='Y'"))
	$Teny = Val(Sqlite("sql","Select count(distinct code) from CacheMemo where (UserNote like '%FindStats10YearEvent%') or (UserNote like '%BadgeGen10YearEvent%')"))
	SHOWSTATUS msg="Counting Cache Size" top=10 Left=10
	$Micr = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and container='Micro') and lIsOwner"))
	$Smal = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and container='Small') and lIsOwner"))
	$Regu = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and container='Regular') and lIsOwner"))
	$Larg = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and container='Large') and lIsOwner"))
	SHOWSTATUS msg="Counting FTFs" top=10 Left=10
	$FTF = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and ftf) and lIsOwner"))
	SHOWSTATUS msg="Counting D5/T5 caches" top=10 Left=10
	$Five = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and (difficulty = 5.0 AND terrain = 5.0)) and lIsOwner"))
	SHOWSTATUS msg="Counting D/T Matrix" top=10 Left=10
	$Matr = Val(Sqlite("sql","Select count(*) from (select terrain,difficulty from caches where found group by terrain, difficulty)"))
	SHOWSTATUS msg="Counting all caches" top=10 Left=10
	$Geoc = Val(Sqlite("sql","select count(*) from Logs where g_foundlog(ltype) AND lParent in(Select code from caches where found and CacheType<>'Y' and CacheType<>'G') and lIsOwner"))
	SHOWSTATUS msg="Calculating Maximum Distance" top=10 Left=10
	GOSUB name=CalculateDistance
	SHOWSTATUS msg="Calculating States" top=10 Left=10
	GOSUB name=CalculateStateBadge
	SHOWSTATUS msg="Counting Max Finds in a Day" top=10 Left=10
	$Twen = Val(Sqlite("sql","SELECT count(*) as rows from logs where lIsOwner and g_foundlog(ltype) group by lDate order by rows desc limit 1"))
	#Old Calculation
######	$Data = Sqlite("sql","SELECT Count(Code) as c,FoundByMeDate from caches where found GROUP BY FoundbyMeDate ORDER BY c DESC LIMIT 1")
######	$Temp = List("Total","Create",";")
######	$Temp = List("Total","add","$Data")
######	$Twen = Val(List("total","item","1"))
######	$TwenDate = List("total","item","2")
	SHOWSTATUS msg="Calculating Consecutive Days with finds" top=10 Left=10
	GOSUB name=CalculateConsecutive
	SHOWSTATUS msg="Counting Countries" top=10 Left=10
	$CountTemp = Sqlite("sql","Select Count(Distinct Country) from caches where found and country<>''")
	$Coun=Val($CountTemp)
	SHOWSTATUS msg="Counting States" top=10 Left=10
	$CountTemp = Sqlite("sql","Select Count(Distinct State) from caches where found and State<>''")
	$State=Val($CountTemp)
	SHOWSTATUS msg="Counting Average Log Length" top=10 Left=10
	GOSUB name=LogWordCount
	SHOWSTATUS msg="Counting Elevation" top=10 Left=10
	CANCELFILTER
	IF $ShowElev
		GOSUB name="CalculateElevation"
	ENDIF
	SHOWSTATUS msg="Calculating Finds By Day" top=10 Left=10
	$Cale = Val(Sqlite("sql","select count(distinct substr(lDate,6,5)) from logs where lisowner and g_foundlog(ltype) and NOT lParent in(select code from caches where CacheType='G' or CacheType='Y')"))
	
	
	SHOWSTATUS msg="Switching databases" top=10 Left=10
	DATABASE name=$EditBox2
	SQLiteCaches	Scope=FILTER
	SHOWSTATUS msg="Counting Hidden Caches" top=10 Left=10
	$CountTemp = SQLite("sql","Select count(distinct Code) from caches where IsOwner")
	$Hidd = Val($CountTemp)
	SHOWSTATUS msg="Determining UserID" top=10 Left=10
	IF $UserID=""
	$userid = Sqlite("sql","select ownerID from caches where isowner limit 1")
ENDIF
	SHOWSTATUS msg="Counting Hosted Events" top=10 Left=10
	$CountTemp = Sqlite("sql","Select count(distinct Code) from caches where IsOwner AND (cachetype='E' OR cachetype='Z' OR cachetype='C')")
	$Host = Val($CountTemp)

	SHOWSTATUS msg="Determining other hidden cache numbers" top=10 Left=10
	$CountTemp = Sqlite("sql","select count(distinct CacheType) from caches where IsOwner")
	$HiddTypes = Val($CountTemp)
	SHOWSTATUS msg="Count Complete" top=10 Left=10
	$RANDOMVARR=1
	$TEMP = List("*all","destroy","")

	IF $AutoCountTrackables
		GOSUB name=AutoCountTrackables
	ENDIF

	SHOWSTATUS msg="Converting data to correct units" top=10 Left=10
	SHOWSTATUS msg="" top=10 Left=10
	GOSUB name=Convert
ENDSUB #name=Counter

#------------------------------------------------------------------------------------------------------------------------------------------

BEGINSUB name=Assignment
	BEGINCASE #Trad
	CASE $Trad>=$TradB1 AND $Trad<=$TradB2
		$TradLeft = $TradS1 - $Trad
		$TradHTML="$HotLinkURL"+"TradB.png"
	CASE $Trad>=$TradS1 AND $Trad<=$TradS2
		$TradLeft = $TradG1 - $Trad
		$TradHTML="$HotLinkURL"+"TradS.png"
	CASE $Trad>=$TradG1 AND $Trad<=$TradG2
		$TradLeft = $TradP1 - $Trad
		$TradHTML="$HotLinkURL"+"TradG.png"
	CASE $Trad>=$TradP1 AND $Trad<=$TradP2
		$TradLeft = $TradR1 - $Trad
		$TradHTML="$HotLinkURL"+"TradP.png"
	CASE $Trad>=$TradR1 AND $Trad<=$TradR2
		$TradLeft = $TradSa1 - $Trad
		$TradHTML="$HotLinkURL"+"TradR.png"
	CASE $Trad>=$TradSa1 AND $Trad<=$TradSa2
		$TradLeft = $TradE1 - $Trad
		$TradHTML="$HotLinkURL"+"TradSa.png"
	CASE $Trad>=$TradE1 AND $Trad<=$TradE2
		$TradLeft = $TradD - $Trad
		$TradHTML="$HotLinkURL"+"TradE.png"
	CASE $Trad>=$TradD
		$TradLeft = 0
		$TradHTML="$HotLinkURL"+"TradD.png"
	CASE $Trad=0
		$TradLeft= $TradB1
		$TradHTML=""
	OTHERWISE
		$TradLeft = $TradB1 - $Trad
	ENDCASE #Trad
	SHOWSTATUS msg="$Message.................."  top=10 Left=10

	BEGINCASE #Mult
	CASE $Mult>=$MultB1 AND $Mult<=$MultB2
		$MultLeft = $MultS1 - $Mult
		$MultHTML="$HotLinkURL"+"MultB.png"
	CASE $Mult>=$MultS1 AND $Mult<=$MultS2
		$MultLeft = $MultG1 - $Mult
		$MultHTML="$HotLinkURL"+"MultS.png"
	CASE $Mult>=$MultG1 AND $Mult<=$MultG2
		$MultLeft = $MultP1 - $Mult
		$MultHTML="$HotLinkURL"+"MultG.png"
	CASE $Mult>=$MultP1 AND $Mult<=$MultP2
		$MultLeft = $MultR1 - $Mult
		$MultHTML="$HotLinkURL"+"MultP.png"
	CASE $Mult>=$MultR1 AND $Mult<=$MultR2
		$MultLeft = $MultSa1 - $Mult
		$MultHTML="$HotLinkURL"+"MultR.png"
	CASE $Mult>=$MultSa1 AND $Mult<=$MultSa2
		$MultLeft = $MultE1 - $Mult
		$MultHTML="$HotLinkURL"+"MultSa.png"
	CASE $Mult>=$MultE1 AND $Mult<=$MultE2
		$MultLeft = $MultD - $Mult
		$MultHTML="$HotLinkURL"+"MultE.png"
	CASE $Mult>=$MultD
		$MultLeft = 0
		$MultHTML="$HotLinkURL"+"MultD.png"
	CASE $Mult=0
		$MultLeft= $MultB1
		$MultHTML=""
	OTHERWISE
		$MultLeft = $MultB1 - $Mult
	ENDCASE #Mult
	SHOWSTATUS msg="$Message................." top=10 Left=10

	BEGINCASE #Virt
	CASE $Virt>=$VirtB1 AND $Virt<=$VirtB2
		$VirtLeft = $VirtS1 - $Virt
		$VirtHTML="$HotLinkURL"+"VirtB.png"
	CASE $Virt>=$VirtS1 AND $Virt<=$VirtS2
		$VirtLeft = $VirtG1 - $Virt
		$VirtHTML="$HotLinkURL"+"VirtS.png"
	CASE $Virt>=$VirtG1 AND $Virt<=$VirtG2
		$VirtLeft = $VirtP1 - $Virt
		$VirtHTML="$HotLinkURL"+"VirtG.png"
	CASE $Virt>=$VirtP1 AND $Virt<=$VirtP2
		$VirtLeft = $VirtR1 - $Virt
		$VirtHTML="$HotLinkURL"+"VirtP.png"
	CASE $Virt>=$VirtR1 AND $Virt<=$VirtR2
		$VirtLeft = $VirtSa1 - $Virt
		$VirtHTML="$HotLinkURL"+"VirtR.png"
	CASE $Virt>=$VirtSa1 AND $Virt<=$VirtSa2
		$VirtLeft = $VirtE1 - $Virt
		$VirtHTML="$HotLinkURL"+"VirtSa.png"
	CASE $Virt>=$VirtE1 AND $Virt<=$VirtE2
		$VirtLeft = $VirtD - $Virt
		$VirtHTML="$HotLinkURL"+"VirtE.png"
	CASE $Virt>=$VirtD
		$VirtLeft = 0
		$VirtHTML="$HotLinkURL"+"VirtD.png"
	CASE $Virt=0
		$VirtLeft= $VirtB1
		$VirtHTML=""
	OTHERWISE
		$VirtLeft = $VirtB1 - $Virt
	ENDCASE #Virt
	SHOWSTATUS msg="$Message................"

	BEGINCASE #Myst
	CASE $Myst>=$MystB1 AND $Myst<=$MystB2
		$MystLeft = $MystS1 - $Myst
		$MystHTML="$HotLinkURL"+"MystB.png"
	CASE $Myst>=$MystS1 AND $Myst<=$MystS2
		$MystLeft = $MystG1 - $Myst
		$MystHTML="$HotLinkURL"+"MystS.png"
	CASE $Myst>=$MystG1 AND $Myst<=$MystG2
		$MystLeft = $MystP1 - $Myst
		$MystHTML="$HotLinkURL"+"MystG.png"
	CASE $Myst>=$MystP1 AND $Myst<=$MystP2
		$MystLeft = $MystR1 - $Myst
		$MystHTML="$HotLinkURL"+"MystP.png"
	CASE $Myst>=$MystR1 AND $Myst<=$MystR2
		$MystLeft = $MystSa1 - $Myst
		$MystHTML="$HotLinkURL"+"MystR.png"
	CASE $Myst>=$MystSa1 AND $Myst<=$MystSa2
		$MystLeft = $MystE1 - $Myst
		$MystHTML="$HotLinkURL"+"MystSa.png"
	CASE $Myst>=$MystE1 AND $Myst<=$MystE2
		$MystLeft = $MystD - $Myst
		$MystHTML="$HotLinkURL"+"MystE.png"
	CASE $Myst>=$MystD
		$MystLeft = 0
		$MystHTML="$HotLinkURL"+"MystD.png"
	CASE $Myst=0
		$MystLeft= $MystB1
		$MystHTML=""
	OTHERWISE
		$MystLeft = $MystB1 - $Myst
	ENDCASE #Myst
	SHOWSTATUS msg="$Message..............."

	BEGINCASE #Eart
	CASE $Eart>=$EartB1 AND $Eart<=$EartB2
		$EartLeft = $EartS1 - $Eart
		$EartHTML="$HotLinkURL"+"EartB.png"
	CASE $Eart>=$EartS1 AND $Eart<=$EartS2
		$EartLeft = $EartG1 - $Eart
		$EartHTML="$HotLinkURL"+"EartS.png"
	CASE $Eart>=$EartG1 AND $Eart<=$EartG2
		$EartLeft = $EartP1 - $Eart
		$EartHTML="$HotLinkURL"+"EartG.png"
	CASE $Eart>=$EartP1 AND $Eart<=$EartP2
		$EartLeft = $EartR1 - $Eart
		$EartHTML="$HotLinkURL"+"EartP.png"
	CASE $Eart>=$EartR1 AND $Eart<=$EartR2
		$EartLeft = $EartSa1 - $Eart
		$EartHTML="$HotLinkURL"+"EartR.png"
	CASE $Eart>=$EartSa1 AND $Eart<=$EartSa2
		$EartLeft = $EartE1 - $Eart
		$EartHTML="$HotLinkURL"+"EartSa.png"
	CASE $Eart>=$EartE1 AND $Eart<=$EartE2
		$EartLeft = $EartD - $Eart
		$EartHTML="$HotLinkURL"+"EartE.png"
	CASE $Eart>=$EartD
		$EartLeft = 0
		$EartHTML="$HotLinkURL"+"EartD.png"
	CASE $Eart=0
		$EartLeft= $EartB1
		$EartHTML=""
	OTHERWISE
		$EartLeft = $EartB1 - $Eart
	ENDCASE #Eart
	SHOWSTATUS msg="$Message.............."

	BEGINCASE #Lett
	CASE $Lett>=$LettB1 AND $Lett<=$LettB2
		$LettLeft = $LettS1 - $Lett
		$LettHTML="$HotLinkURL"+"LettB.png"
	CASE $Lett>=$LettS1 AND $Lett<=$LettS2
		$LettLeft = $LettG1 - $Lett
		$LettHTML="$HotLinkURL"+"LettS.png"
	CASE $Lett>=$LettG1 AND $Lett<=$LettG2
		$LettLeft = $LettP1 - $Lett
		$LettHTML="$HotLinkURL"+"LettG.png"
	CASE $Lett>=$LettP1 AND $Lett<=$LettP2
		$LettLeft = $LettR1 - $Lett
		$LettHTML="$HotLinkURL"+"LettP.png"
	CASE $Lett>=$LettR1 AND $Lett<=$LettR2
		$LettLeft = $LettSa1 - $Lett
		$LettHTML="$HotLinkURL"+"LettR.png"
	CASE $Lett>=$LettSa1 AND $Lett<=$LettSa2
		$LettLeft = $LettE1 - $Lett
		$LettHTML="$HotLinkURL"+"LettSa.png"
	CASE $Lett>=$LettE1 AND $Lett<=$LettE2
		$LettLeft = $LettD - $Lett
		$LettHTML="$HotLinkURL"+"LettE.png"
	CASE $Lett>=$LettD
		$LettLeft = 0
		$LettHTML="$HotLinkURL"+"LettD.png"
	CASE $Lett=0
		$LettLeft= $LettB1
		$LettHTML=""
	OTHERWISE
		$LettLeft = $LettB1 - $Lett
	ENDCASE #Lett
	SHOWSTATUS msg="$Message.............."


	BEGINCASE #Wher
	CASE $Wher>=$WherB1 AND $Wher<=$WherB2
		$WherLeft = $WherS1 - $Wher
		$WherHTML="$HotLinkURL"+"WherB.png"
	CASE $Wher>=$WherS1 AND $Wher<=$WherS2
		$WherLeft = $WherG1 - $Wher
		$WherHTML="$HotLinkURL"+"WherS.png"
	CASE $Wher>=$WherG1 AND $Wher<=$WherG2
		$WherLeft = $WherP1 - $Wher
		$WherHTML="$HotLinkURL"+"WherG.png"
	CASE $Wher>=$WherP1 AND $Wher<=$WherP2
		$WherLeft = $WherR1 - $Wher
		$WherHTML="$HotLinkURL"+"WherP.png"
	CASE $Wher>=$WherR1 AND $Wher<=$WherR2
		$WherLeft = $WherSa1 - $Wher
		$WherHTML="$HotLinkURL"+"WherR.png"
	CASE $Wher>=$WherSa1 AND $Wher<=$WherSa2
		$WherLeft = $WherE1 - $Wher
		$WherHTML="$HotLinkURL"+"WherSa.png"
	CASE $Wher>=$WherE1 AND $Wher<=$WherE2
		$WherLeft = $WherD - $Wher
		$WherHTML="$HotLinkURL"+"WherE.png"
	CASE $Wher>=$WherD
		$WherLeft = 0
		$WherHTML="$HotLinkURL"+"WherD.png"
	CASE $Wher=0
		$WherLeft= $WherB1
		$WherHTML=""
	OTHERWISE
		$WherLeft = $WherB1 - $Wher
	ENDCASE #Wher
	SHOWSTATUS msg="$Message............."

	BEGINCASE #Mega
	CASE $Mega>=$MegaB1 AND $Mega<=$MegaB2
		$MegaLeft = $MegaS1 - $Mega
		$MegaHTML="$HotLinkURL"+"MegaB.png"
	CASE $Mega>=$MegaS1 AND $Mega<=$MegaS2
		$MegaLeft = $MegaG1 - $Mega
		$MegaHTML="$HotLinkURL"+"MegaS.png"
	CASE $Mega>=$MegaG1 AND $Mega<=$MegaG2
		$MegaLeft = $MegaP1 - $Mega
		$MegaHTML="$HotLinkURL"+"MegaG.png"
	CASE $Mega>=$MegaP1 AND $Mega<=$MegaP2
		$MegaLeft = $MegaR1 - $Mega
		$MegaHTML="$HotLinkURL"+"MegaP.png"
	CASE $Mega>=$MegaR1 AND $Mega<=$MegaR2
		$MegaLeft = $MegaSa1 - $Mega
		$MegaHTML="$HotLinkURL"+"MegaR.png"
	CASE $Mega>=$MegaSa1 AND $Mega<=$MegaSa2
		$MegaLeft = $MegaE1 - $Mega
		$MegaHTML="$HotLinkURL"+"MegaSa.png"
	CASE $Mega>=$MegaE1 AND $Mega<=$MegaE2
		$MegaLeft = $MegaD - $Mega
		$MegaHTML="$HotLinkURL"+"MegaE.png"
	CASE $Mega>=$MegaD
		$MegaLeft = 0
		$MegaHTML="$HotLinkURL"+"MegaD.png"
	CASE $Mega=0
		$MegaLeft= $MegaB1
		$MegaHTML=""
	OTHERWISE
		$MegaLeft = $MegaB1 - $Mega
	ENDCASE #Mega
	SHOWSTATUS msg="$Message............"

	BEGINCASE #Even
	CASE $Even>=$EvenB1 AND $Even<=$EvenB2
		$EvenLeft = $EvenS1 - $Even
		$EvenHTML="$HotLinkURL"+"EvenB.png"
	CASE $Even>=$EvenS1 AND $Even<=$EvenS2
		$EvenLeft = $EvenG1 - $Even
		$EvenHTML="$HotLinkURL"+"EvenS.png"
	CASE $Even>=$EvenG1 AND $Even<=$EvenG2
		$EvenLeft = $EvenP1 - $Even
		$EvenHTML="$HotLinkURL"+"EvenG.png"
	CASE $Even>=$EvenP1 AND $Even<=$EvenP2
		$EvenLeft = $EvenR1 - $Even
		$EvenHTML="$HotLinkURL"+"EvenP.png"
	CASE $Even>=$EvenR1 AND $Even<=$EvenR2
		$EvenLeft = $EvenSa1 - $Even
		$EvenHTML="$HotLinkURL"+"EvenR.png"
	CASE $Even>=$EvenSa1 AND $Even<=$EvenSa2
		$EvenLeft = $EvenE1 - $Even
		$EvenHTML="$HotLinkURL"+"EvenSa.png"
	CASE $Even>=$EvenE1 AND $Even<=$EvenE2
		$EvenLeft = $EvenD - $Even
		$EvenHTML="$HotLinkURL"+"EvenE.png"
	CASE $Even>=$EvenD
		$EvenLeft = 0
		$EvenHTML="$HotLinkURL"+"EvenD.png"
	CASE $Even=0
		$EvenLeft= $EvenB1
		$EvenHTML=""
	OTHERWISE
		$EvenLeft = $EvenB1 - $Even
	ENDCASE #Even
	SHOWSTATUS msg="$Message..........."

	BEGINCASE #CITO
	CASE $CITO>=$CITOB1 AND $CITO<=$CITOB2
		$CITOLeft = $CITOS1 - $CITO
		$CITOHTML="$HotLinkURL"+"CITOB.png"
	CASE $CITO>=$CITOS1 AND $CITO<=$CITOS2
		$CITOLeft = $CITOG1 - $CITO
		$CITOHTML="$HotLinkURL"+"CITOS.png"
	CASE $CITO>=$CITOG1 AND $CITO<=$CITOG2
		$CITOLeft = $CITOP1 - $CITO
		$CITOHTML="$HotLinkURL"+"CITOG.png"
	CASE $CITO>=$CITOP1 AND $CITO<=$CITOP2
		$CITOLeft = $CITOR1 - $CITO
		$CITOHTML="$HotLinkURL"+"CITOP.png"
	CASE $CITO>=$CITOR1 AND $CITO<=$CITOR2
		$CITOLeft = $CITOSa1 - $CITO
		$CITOHTML="$HotLinkURL"+"CITOR.png"
	CASE $CITO>=$CITOSa1 AND $CITO<=$CITOSa2
		$CITOLeft = $CITOE1 - $CITO
		$CITOHTML="$HotLinkURL"+"CITOSa.png"
	CASE $CITO>=$CITOE1 AND $CITO<=$CITOE2
		$CITOLeft = $CITOD - $CITO
		$CITOHTML="$HotLinkURL"+"CITOE.png"
	CASE $CITO>=$CITOD
		$CITOLeft = 0
		$CITOHTML="$HotLinkURL"+"CITOD.png"
	CASE $CITO=0
		$CITOLeft= $CITOB1
		$CITOHTML=""
	OTHERWISE
		$CITOLeft = $CITOB1 - $CITO
	ENDCASE #CITO
	SHOWSTATUS msg="$Message.........."

	BEGINCASE #Teny
	CASE $Teny>=$TenyB1 AND $Teny<=$TenyB2
		$TenyLeft = $TenyS1 - $Teny
		$TenyHTML="$HotLinkURL"+"TenyB.png"
	CASE $Teny>=$TenyS1 AND $Teny<=$TenyS2
		$TenyLeft = $TenyG1 - $Teny
		$TenyHTML="$HotLinkURL"+"TenyS.png"
	CASE $Teny>=$TenyG1 AND $Teny<=$TenyG2
		$TenyLeft = $TenyP1 - $Teny
		$TenyHTML="$HotLinkURL"+"TenyG.png"
	CASE $Teny>=$TenyP1 AND $Teny<=$TenyP2
		$TenyLeft = $TenyR1 - $Teny
		$TenyHTML="$HotLinkURL"+"TenyP.png"
	CASE $Teny>=$TenyR1 AND $Teny<=$TenyR2
		$TenyLeft = $TenySa1 - $Teny
		$TenyHTML="$HotLinkURL"+"TenyR.png"
	CASE $Teny>=$TenySa1 AND $Teny<=$TenySa2
		$TenyLeft = $TenyE1 - $Teny
		$TenyHTML="$HotLinkURL"+"TenySa.png"
	CASE $Teny>=$TenyE1 AND $Teny<=$TenyE2
		$TenyLeft = $TenyD - $Teny
		$TenyHTML="$HotLinkURL"+"TenyE.png"
	CASE $Teny>=$TenyD
		$TenyLeft = 0
		$TenyHTML="$HotLinkURL"+"TenyD.png"
	CASE $Teny=0
		$TenyLeft= $TenyB1
		$TenyHTML=""
	OTHERWISE
		$TenyLeft = $TenyB1 - $Teny
	ENDCASE #Teny

	BEGINCASE #Benc
	CASE $Benc>=$BencB1 AND $Benc<=$BencB2
		$BencLeft = $BencS1 - $Benc
		$BencHTML="$HotLinkURL"+"BencB.png"
	CASE $Benc>=$BencS1 AND $Benc<=$BencS2
		$BencLeft = $BencG1 - $Benc
		$BencHTML="$HotLinkURL"+"BencS.png"
	CASE $Benc>=$BencG1 AND $Benc<=$BencG2
		$BencLeft = $BencP1 - $Benc
		$BencHTML="$HotLinkURL"+"BencG.png"
	CASE $Benc>=$BencP1 AND $Benc<=$BencP2
		$BencLeft = $BencR1 - $Benc
		$BencHTML="$HotLinkURL"+"BencP.png"
	CASE $Benc>=$BencR1 AND $Benc<=$BencR2
		$BencLeft = $BencSa1 - $Benc
		$BencHTML="$HotLinkURL"+"BencR.png"
	CASE $Benc>=$BencSa1 AND $Benc<=$BencSa2
		$BencLeft = $BencE1 - $Benc
		$BencHTML="$HotLinkURL"+"BencSa.png"
	CASE $Benc>=$BencE1 AND $Benc<=$BencE2
		$BencLeft = $BencD - $Benc
		$BencHTML="$HotLinkURL"+"BencE.png"
	CASE $Benc>=$BencD
		$BencLeft = 0
		$BencHTML="$HotLinkURL"+"BencD.png"
	CASE $Benc=0
		$BencLeft= $BencB1
		$BencHTML=""
	OTHERWISE
		$BencLeft = $BencB1 - $Benc
	ENDCASE #Benc

	BEGINCASE #Waym
	CASE $Waym>=$WaymB1 AND $Waym<=$WaymB2
		$WaymLeft = $WaymS1 - $Waym
		$WaymHTML="$HotLinkURL"+"WaymB.png"
	CASE $Waym>=$WaymS1 AND $Waym<=$WaymS2
		$WaymLeft = $WaymG1 - $Waym
		$WaymHTML="$HotLinkURL"+"WaymS.png"
	CASE $Waym>=$WaymG1 AND $Waym<=$WaymG2
		$WaymLeft = $WaymP1 - $Waym
		$WaymHTML="$HotLinkURL"+"WaymG.png"
	CASE $Waym>=$WaymP1 AND $Waym<=$WaymP2
		$WaymLeft = $WaymR1 - $Waym
		$WaymHTML="$HotLinkURL"+"WaymP.png"
	CASE $Waym>=$WaymR1 AND $Waym<=$WaymR2
		$WaymLeft = $WaymSa1 - $Waym
		$WaymHTML="$HotLinkURL"+"WaymR.png"
	CASE $Waym>=$WaymSa1 AND $Waym<=$WaymSa2
		$WaymLeft = $WaymE1 - $Waym
		$WaymHTML="$HotLinkURL"+"WaymSa.png"
	CASE $Waym>=$WaymE1 AND $Waym<=$WaymE2
		$WaymLeft = $WaymD - $Waym
		$WaymHTML="$HotLinkURL"+"WaymE.png"
	CASE $Waym>=$WaymD
		$WaymLeft = 0
		$WaymHTML="$HotLinkURL"+"WaymD.png"
	CASE $Waym=0
		$WaymLeft= $WaymB1
		$WaymHTML=""
	OTHERWISE
		$WaymLeft = $WaymB1 - $Waym
	ENDCASE #Waym

	SHOWSTATUS msg="$Message........."
	BEGINCASE #Webc
	CASE $Webc>=$WebcB1 AND $Webc<=$WebcB2
		$WebcLeft = $WebcS1 - $Webc
		$WebcHTML="$HotLinkURL"+"WebcB.png"
	CASE $Webc>=$WebcS1 AND $Webc<=$WebcS2
		$WebcLeft = $WebcG1 - $Webc
		$WebcHTML="$HotLinkURL"+"WebcS.png"
	CASE $Webc>=$WebcG1 AND $Webc<=$WebcG2
		$WebcLeft = $WebcP1 - $Webc
		$WebcHTML="$HotLinkURL"+"WebcG.png"
	CASE $Webc>=$WebcP1 AND $Webc<=$WebcP2
		$WebcLeft = $WebcR1 - $Webc
		$WebcHTML="$HotLinkURL"+"WebcP.png"
	CASE $Webc>=$WebcR1 AND $Webc<=$WebcR2
		$WebcLeft = $WebcSa1 - $Webc
		$WebcHTML="$HotLinkURL"+"WebcR.png"
	CASE $Webc>=$WebcSa1 AND $Webc<=$WebcSa2
		$WebcLeft = $WebcE1 - $Webc
		$WebcHTML="$HotLinkURL"+"WebcSa.png"
	CASE $Webc>=$WebcE1 AND $Webc<=$WebcE2
		$WebcLeft = $WebcD - $Webc
		$WebcHTML="$HotLinkURL"+"WebcE.png"
	CASE $Webc>=$WebcD
		$WebcLeft = 0
		$WebcHTML="$HotLinkURL"+"WebcD.png"
	CASE $Webc=0
		$WebcLeft= $WebcB1
		$WebcHTML=""
	OTHERWISE
		$WebcLeft = $WebcB1 - $Webc
	ENDCASE #Webc

	BEGINCASE #Apec
	CASE $Apec>=$ApecB1 AND $Apec<=$ApecB2
		$ApecLeft = $ApecS1 - $Apec
		$ApecHTML="$HotLinkURL"+"ApecB.png"
	CASE $Apec>=$ApecS1 AND $Apec<=$ApecS2
		$ApecLeft = $ApecG1 - $Apec
		$ApecHTML="$HotLinkURL"+"ApecS.png"
	CASE $Apec>=$ApecG1 AND $Apec<=$ApecG2
		$ApecLeft = $ApecP1 - $Apec
		$ApecHTML="$HotLinkURL"+"ApecG.png"
	CASE $Apec>=$ApecP1 AND $Apec<=$ApecP2
		$ApecLeft = $ApecR1 - $Apec
		$ApecHTML="$HotLinkURL"+"ApecP.png"
	CASE $Apec>=$ApecR1 AND $Apec<=$ApecR2
		$ApecLeft = $ApecSa1 - $Apec
		$ApecHTML="$HotLinkURL"+"ApecR.png"
	CASE $Apec>=$ApecSa1 AND $Apec<=$ApecSa2
		$ApecLeft = $ApecE1 - $Apec
		$ApecHTML="$HotLinkURL"+"ApecSa.png"
	CASE $Apec>=$ApecE1 AND $Apec<=$ApecE2
		$ApecLeft = $ApecD - $Apec
		$ApecHTML="$HotLinkURL"+"ApecE.png"
	CASE $Apec>=$ApecD
		$ApecLeft = 0
		$ApecHTML="$HotLinkURL"+"ApecD.png"
	CASE $Apec=0
		$ApecLeft= $ApecB1
		$ApecHTML=""
	OTHERWISE
		$ApecLeft = $ApecB1 - $Apec
	ENDCASE #Apec

	BEGINCASE #Micr
	CASE $Micr>=$MicrB1 AND $Micr<=$MicrB2
		$MicrLeft = $MicrS1 - $Micr
		$MicrHTML="$HotLinkURL"+"MicrB.png"
	CASE $Micr>=$MicrS1 AND $Micr<=$MicrS2
		$MicrLeft = $MicrG1 - $Micr
		$MicrHTML="$HotLinkURL"+"MicrS.png"
	CASE $Micr>=$MicrG1 AND $Micr<=$MicrG2
		$MicrLeft = $MicrP1 - $Micr
		$MicrHTML="$HotLinkURL"+"MicrG.png"
	CASE $Micr>=$MicrP1 AND $Micr<=$MicrP2
		$MicrLeft = $MicrR1 - $Micr
		$MicrHTML="$HotLinkURL"+"MicrP.png"
	CASE $Micr>=$MicrR1 AND $Micr<=$MicrR2
		$MicrLeft = $MicrSa1 - $Micr
		$MicrHTML="$HotLinkURL"+"MicrR.png"
	CASE $Micr>=$MicrSa1 AND $Micr<=$MicrSa2
		$MicrLeft = $MicrE1 - $Micr
		$MicrHTML="$HotLinkURL"+"MicrSa.png"
	CASE $Micr>=$MicrE1 AND $Micr<=$MicrE2
		$MicrLeft = $MicrD - $Micr
		$MicrHTML="$HotLinkURL"+"MicrE.png"
	CASE $Micr>=$MicrD
		$MicrLeft = 0
		$MicrHTML="$HotLinkURL"+"MicrD.png"
	CASE $Micr=0
		$MicrLeft= $MicrB1
		$MicrHTML=""
	OTHERWISE
		$MicrLeft = $MicrB1 - $Micr
	ENDCASE #Micr
	SHOWSTATUS msg="$Message........"

	BEGINCASE #Smal
	CASE $Smal>=$SmalB1 AND $Smal<=$SmalB2
		$SmalLeft = $SmalS1 - $Smal
		$SmalHTML="$HotLinkURL"+"SmalB.png"
	CASE $Smal>=$SmalS1 AND $Smal<=$SmalS2
		$SmalLeft = $SmalG1 - $Smal
		$SmalHTML="$HotLinkURL"+"SmalS.png"
	CASE $Smal>=$SmalG1 AND $Smal<=$SmalG2
		$SmalLeft = $SmalP1 - $Smal
		$SmalHTML="$HotLinkURL"+"SmalG.png"
	CASE $Smal>=$SmalP1 AND $Smal<=$SmalP2
		$SmalLeft = $SmalR1 - $Smal
		$SmalHTML="$HotLinkURL"+"SmalP.png"
	CASE $Smal>=$SmalR1 AND $Smal<=$SmalR2
		$SmalLeft = $SmalSa1 - $Smal
		$SmalHTML="$HotLinkURL"+"SmalR.png"
	CASE $Smal>=$SmalSa1 AND $Smal<=$SmalSa2
		$SmalLeft = $SmalE1 - $Smal
		$SmalHTML="$HotLinkURL"+"SmalSa.png"
	CASE $Smal>=$SmalE1 AND $Smal<=$SmalE2
		$SmalLeft = $SmalD - $Smal
		$SmalHTML="$HotLinkURL"+"SmalE.png"
	CASE $Smal>=$SmalD
		$SmalLeft = 0
		$SmalHTML="$HotLinkURL"+"SmalD.png"
	CASE $Smal=0
		$SmalLeft= $SmalB1
		$SmalHTML=""
	OTHERWISE
		$SmalLeft = $SmalB1 - $Smal
	ENDCASE #Smal
	SHOWSTATUS msg="$Message......."

	BEGINCASE #Regu
	CASE $Regu>=$ReguB1 AND $Regu<=$ReguB2
		$ReguLeft = $ReguS1 - $Regu
		$ReguHTML="$HotLinkURL"+"ReguB.png"
	CASE $Regu>=$ReguS1 AND $Regu<=$ReguS2
		$ReguLeft = $ReguG1 - $Regu
		$ReguHTML="$HotLinkURL"+"ReguS.png"
	CASE $Regu>=$ReguG1 AND $Regu<=$ReguG2
		$ReguLeft = $ReguP1 - $Regu
		$ReguHTML="$HotLinkURL"+"ReguG.png"
	CASE $Regu>=$ReguP1 AND $Regu<=$ReguP2
		$ReguLeft = $ReguR1 - $Regu
		$ReguHTML="$HotLinkURL"+"ReguP.png"
	CASE $Regu>=$ReguR1 AND $Regu<=$ReguR2
		$ReguLeft = $ReguSa1 - $Regu
		$ReguHTML="$HotLinkURL"+"ReguR.png"
	CASE $Regu>=$ReguSa1 AND $Regu<=$ReguSa2
		$ReguLeft = $ReguE1 - $Regu
		$ReguHTML="$HotLinkURL"+"ReguSa.png"
	CASE $Regu>=$ReguE1 AND $Regu<=$ReguE2
		$ReguLeft = $ReguD - $Regu
		$ReguHTML="$HotLinkURL"+"ReguE.png"
	CASE $Regu>=$ReguD
		$ReguLeft = 0
		$ReguHTML="$HotLinkURL"+"ReguD.png"
	CASE $Regu=0
		$ReguLeft= $ReguB1
		$ReguHTML=""
	OTHERWISE
		$ReguLeft = $ReguB1 - $Regu
	ENDCASE #Regu
	SHOWSTATUS msg="$Message......"

	BEGINCASE #Larg
	CASE $Larg>=$LargB1 AND $Larg<=$LargB2
		$LargLeft = $LargS1 - $Larg
		$LargHTML="$HotLinkURL"+"LargB.png"
	CASE $Larg>=$LargS1 AND $Larg<=$LargS2
		$LargLeft = $LargG1 - $Larg
		$LargHTML="$HotLinkURL"+"LargS.png"
	CASE $Larg>=$LargG1 AND $Larg<=$LargG2
		$LargLeft = $LargP1 - $Larg
		$LargHTML="$HotLinkURL"+"LargG.png"
	CASE $Larg>=$LargP1 AND $Larg<=$LargP2
		$LargLeft = $LargR1 - $Larg
		$LargHTML="$HotLinkURL"+"LargP.png"
	CASE $Larg>=$LargR1 AND $Larg<=$LargR2
		$LargLeft = $LargSa1 - $Larg
		$LargHTML="$HotLinkURL"+"LargR.png"
	CASE $Larg>=$LargSa1 AND $Larg<=$LargSa2
		$LargLeft = $LargE1 - $Larg
		$LargHTML="$HotLinkURL"+"LargSa.png"
	CASE $Larg>=$LargE1 AND $Larg<=$LargE2
		$LargLeft = $LargD - $Larg
		$LargHTML="$HotLinkURL"+"LargE.png"
	CASE $Larg>=$LargD
		$LargLeft = 0
		$LargHTML="$HotLinkURL"+"LargD.png"
	CASE $Larg=0
		$LargLeft= $LargB1
		$LargHTML=""
	OTHERWISE
		$LargLeft = $LargB1 - $Larg
	ENDCASE #Larg
	SHOWSTATUS msg="$Message....."

	BEGINCASE #Five
	CASE $Five>=$FiveB1 AND $Five<=$FiveB2
		$FiveLeft = $FiveS1 - $Five
		$FiveHTML="$HotLinkURL"+"FiveB.png"
	CASE $Five>=$FiveS1 AND $Five<=$FiveS2
		$FiveLeft = $FiveG1 - $Five
		$FiveHTML="$HotLinkURL"+"FiveS.png"
	CASE $Five>=$FiveG1 AND $Five<=$FiveG2
		$FiveLeft = $FiveP1 - $Five
		$FiveHTML="$HotLinkURL"+"FiveG.png"
	CASE $Five>=$FiveP1 AND $Five<=$FiveP2
		$FiveLeft = $FiveR1 - $Five
		$FiveHTML="$HotLinkURL"+"FiveP.png"
	CASE $Five>=$FiveR1 AND $Five<=$FiveR2
		$FiveLeft = $FiveSa1 - $Five
		$FiveHTML="$HotLinkURL"+"FiveR.png"
	CASE $Five>=$FiveSa1 AND $Five<=$FiveSa2
		$FiveLeft = $FiveE1 - $Five
		$FiveHTML="$HotLinkURL"+"FiveSa.png"
	CASE $Five>=$FiveE1 AND $Five<=$FiveE2
		$FiveLeft = $FiveD - $Five
		$FiveHTML="$HotLinkURL"+"FiveE.png"
	CASE $Five>=$FiveD
		$FiveLeft = 0
		$FiveHTML="$HotLinkURL"+"FiveD.png"
	CASE $Five=0
		$FiveLeft= $FiveB1
		$FiveHTML=""
	OTHERWISE
		$FiveLeft = $FiveB1 - $Five
	ENDCASE #Five
	SHOWSTATUS msg="$Message...."

	BEGINCASE #Coun
	CASE $Coun>=$CounB1 AND $Coun<=$CounB2
		$CounLeft = $CounS1 - $Coun
		$CounHTML="$HotLinkURL"+"CounB.png"
	CASE $Coun>=$CounS1 AND $Coun<=$CounS2
		$CounLeft = $CounG1 - $Coun
		$CounHTML="$HotLinkURL"+"CounS.png"
	CASE $Coun>=$CounG1 AND $Coun<=$CounG2
		$CounLeft = $CounP1 - $Coun
		$CounHTML="$HotLinkURL"+"CounG.png"
	CASE $Coun>=$CounP1 AND $Coun<=$CounP2
		$CounLeft = $CounR1 - $Coun
		$CounHTML="$HotLinkURL"+"CounP.png"
	CASE $Coun>=$CounR1 AND $Coun<=$CounR2
		$CounLeft = $CounSa1 - $Coun
		$CounHTML="$HotLinkURL"+"CounR.png"
	CASE $Coun>=$CounSa1 AND $Coun<=$CounSa2
		$CounLeft = $CounE1 - $Coun
		$CounHTML="$HotLinkURL"+"CounSa.png"
	CASE $Coun>=$CounE1 AND $Coun<=$CounE2
		$CounLeft = $CounD - $Coun
		$CounHTML="$HotLinkURL"+"CounE.png"
	CASE $Coun>=$CounD
		$CounLeft = 0
		$CounHTML="$HotLinkURL"+"CounD.png"
	CASE $Coun=0
		$CounLeft= $CounB1
		$CounHTML=""
	OTHERWISE
		$CounLeft = $CounB1 - $Coun
	ENDCASE #Coun
	SHOWSTATUS msg="$Message..."

	BEGINCASE #FTF
	CASE $FTF>=$FTFB1 AND $FTF<=$FTFB2
		$FTFLeft = $FTFS1 - $FTF
		$FTFHTML="$HotLinkURL"+"FTFB.png"
	CASE $FTF>=$FTFS1 AND $FTF<=$FTFS2
		$FTFLeft = $FTFG1 - $FTF
		$FTFHTML="$HotLinkURL"+"FTFS.png"
	CASE $FTF>=$FTFG1 AND $FTF<=$FTFG2
		$FTFLeft = $FTFP1 - $FTF
		$FTFHTML="$HotLinkURL"+"FTFG.png"
	CASE $FTF>=$FTFP1 AND $FTF<=$FTFP2
		$FTFLeft = $FTFR1 - $FTF
		$FTFHTML="$HotLinkURL"+"FTFP.png"
	CASE $FTF>=$FTFR1 AND $FTF<=$FTFR2
		$FTFLeft = $FTFSa1 - $FTF
		$FTFHTML="$HotLinkURL"+"FTFR.png"
	CASE $FTF>=$FTFSa1 AND $FTF<=$FTFSa2
		$FTFLeft = $FTFE1 - $FTF
		$FTFHTML="$HotLinkURL"+"FTFSa.png"
	CASE $FTF>=$FTFE1 AND $FTF<=$FTFE2
		$FTFLeft = $FTFD - $FTF
		$FTFHTML="$HotLinkURL"+"FTFE.png"
	CASE $FTF>=$FTFD
		$FTFLeft = 0
		$FTFHTML="$HotLinkURL"+"FTFD.png"
	CASE $FTF=0
		$FTFLeft= $FTFB1
		$FTFHTML=""
	OTHERWISE
		$FTFLeft = $FTFB1 - $FTF
	ENDCASE #FTF
	SHOWSTATUS msg="$Message.."

	BEGINCASE #Hidd
	CASE $Hidd>=$HiddB1 AND $Hidd<=$HiddB2
		$HiddLeft = $HiddS1 - $Hidd
		$HiddHTML="$HotLinkURL"+"HiddB.png"
	CASE $Hidd>=$HiddS1 AND $Hidd<=$HiddS2
		$HiddLeft = $HiddG1 - $Hidd
		$HiddHTML="$HotLinkURL"+"HiddS.png"
	CASE $Hidd>=$HiddG1 AND $Hidd<=$HiddG2
		$HiddLeft = $HiddP1 - $Hidd
		$HiddHTML="$HotLinkURL"+"HiddG.png"
	CASE $Hidd>=$HiddP1 AND $Hidd<=$HiddP2
		$HiddLeft = $HiddR1 - $Hidd
		$HiddHTML="$HotLinkURL"+"HiddP.png"
	CASE $Hidd>=$HiddR1 AND $Hidd<=$HiddR2
		$HiddLeft = $HiddSa1 - $Hidd
		$HiddHTML="$HotLinkURL"+"HiddR.png"
	CASE $Hidd>=$HiddSa1 AND $Hidd<=$HiddSa2
		$HiddLeft = $HiddE1 - $Hidd
		$HiddHTML="$HotLinkURL"+"HiddSa.png"
	CASE $Hidd>=$HiddE1 AND $Hidd<=$HiddE2
		$HiddLeft = $HiddD - $Hidd
		$HiddHTML="$HotLinkURL"+"HiddE.png"
	CASE $Hidd>=$HiddD
		$HiddLeft = 0
		$HiddHTML="$HotLinkURL"+"HiddD.png"
	CASE $Hidd=0
		$HiddLeft= $HiddB1
		$HiddHTML=""
	OTHERWISE
		$HiddLeft = $HiddB1 - $Hidd
	ENDCASE #Hidd
	SHOWSTATUS msg="$Message."

	BEGINCASE #Elev
	CASE $Elev>=$ElevB1 AND $Elev<=$ElevB2
		$ElevLeft = $ElevS1
		$ElevHTML="$HotLinkURL"+"ElevB.png"
	CASE $Elev>=$ElevS1 AND $Elev<=$ElevS2
		$ElevLeft = $ElevG1
		$ElevHTML="$HotLinkURL"+"ElevS.png"
	CASE $Elev>=$ElevG1 AND $Elev<=$ElevG2
		$ElevLeft = $ElevP1
		$ElevHTML="$HotLinkURL"+"ElevG.png"
	CASE $Elev>=$ElevP1 AND $Elev<=$ElevP2
		$ElevLeft = $ElevR1
		$ElevHTML="$HotLinkURL"+"ElevP.png"
	CASE $Elev>=$ElevR1 AND $Elev<=$ElevR2
		$ElevLeft = $ElevSa1
		$ElevHTML="$HotLinkURL"+"ElevR.png"
	CASE $Elev>=$ElevSa1 AND $Elev<=$ElevSa2
		$ElevLeft = $ElevE1
		$ElevHTML="$HotLinkURL"+"ElevSa.png"
	CASE $Elev>=$ElevE1 AND $Elev<=$ElevE2
		$ElevLeft = $ElevD
		$ElevHTML="$HotLinkURL"+"ElevE.png"
	CASE $Elev>=$ElevD
		$ElevLeft = 0
		$ElevHTML="$HotLinkURL"+"ElevD.png"
	CASE $Elev=0
		$ElevLeft= $ElevB1
		$ElevHTML=""
	OTHERWISE
		$ElevLeft = $ElevB1
	ENDCASE #Elev
	BEGINCASE #Twen
	CASE $Twen>=$TwenB1 AND $Twen<=$TwenB2
		$TwenLeft = $TwenS1
		$TwenHTML="$HotLinkURL"+"TwenB.png"
	CASE $Twen>=$TwenS1 AND $Twen<=$TwenS2
		$TwenLeft = $TwenG1
		$TwenHTML="$HotLinkURL"+"TwenS.png"
	CASE $Twen>=$TwenG1 AND $Twen<=$TwenG2
		$TwenLeft = $TwenP1
		$TwenHTML="$HotLinkURL"+"TwenG.png"
	CASE $Twen>=$TwenP1 AND $Twen<=$TwenP2
		$TwenLeft = $TwenR1
		$TwenHTML="$HotLinkURL"+"TwenP.png"
	CASE $Twen>=$TwenR1 AND $Twen<=$TwenR2
		$TwenLeft = $TwenSa1
		$TwenHTML="$HotLinkURL"+"TwenR.png"
	CASE $Twen>=$TwenSa1 AND $Twen<=$TwenSa2
		$TwenLeft = $TwenE1
		$TwenHTML="$HotLinkURL"+"TwenSa.png"
	CASE $Twen>=$TwenE1 AND $Twen<=$TwenE2
		$TwenLeft = $TwenD
		$TwenHTML="$HotLinkURL"+"TwenE.png"
	CASE $Twen>=$TwenD
		$TwenLeft = 0
		$TwenHTML="$HotLinkURL"+"TwenD.png"
	CASE $Twen=0
		$TwenLeft= $TwenB1
		$TwenHTML=""
	OTHERWISE
		$TwenLeft = $TwenB1 - $Twen
	ENDCASE #Twen
	BEGINCASE #Unde
	CASE $Unde>=$UndeB1 AND $Unde<=$UndeB2
		$UndeLeft = $UndeS1 - $Unde
		$UndeHTML="$HotLinkURL"+"UndeB.png"
	CASE $Unde>=$UndeS1 AND $Unde<=$UndeS2
		$UndeLeft = $UndeG1 - $Unde
		$UndeHTML="$HotLinkURL"+"UndeS.png"
	CASE $Unde>=$UndeG1 AND $Unde<=$UndeG2
		$UndeLeft = $UndeP1 - $Unde
		$UndeHTML="$HotLinkURL"+"UndeG.png"
	CASE $Unde>=$UndeP1 AND $Unde<=$UndeP2
		$UndeLeft = $UndeR1 - $Unde
		$UndeHTML="$HotLinkURL"+"UndeP.png"
	CASE $Unde>=$UndeR1 AND $Unde<=$UndeR2
		$UndeLeft = $UndeSa1 - $Unde
		$UndeHTML="$HotLinkURL"+"UndeR.png"
	CASE $Unde>=$UndeSa1 AND $Unde<=$UndeSa2
		$UndeLeft = $UndeE1 - $Unde
		$UndeHTML="$HotLinkURL"+"UndeSa.png"
	CASE $Unde>=$UndeE1 AND $Unde<=$UndeE2
		$UndeLeft = $UndeD - $Unde
		$UndeHTML="$HotLinkURL"+"UndeE.png"
	CASE $Unde>=$UndeD
		$UndeLeft = 0
		$UndeHTML="$HotLinkURL"+"UndeD.png"
	CASE $Unde=0
		$UndeLeft= $UndeB1
		$UndeHTML=""
	OTHERWISE
		$UndeLeft = $UndeB1 - $Unde
	ENDCASE #Unde
	BEGINCASE #Lowe
	CASE $Lowe<=$LoweB1 AND $Lowe>=$LoweB2
		$LoweLeft = $LoweS1
		$LoweHTML="$HotLinkURL"+"LoweB.png"
	CASE $Lowe<=$LoweS1 AND $Lowe>=$LoweS2
		$LoweLeft = $LoweG1
		$LoweHTML="$HotLinkURL"+"LoweS.png"
	CASE $Lowe<=$LoweG1 AND $Lowe>=$LoweG2
		$LoweLeft = $LoweP1
		$LoweHTML="$HotLinkURL"+"LoweG.png"
	CASE $Lowe<=$LoweP1 AND $Lowe>=$LoweP2
		$LoweLeft = $LoweR1
		$LoweHTML="$HotLinkURL"+"LoweP.png"
	CASE $Lowe<=$LoweR1 AND $Lowe>=$LoweR2
		$LoweLeft = $LoweSa1
		$LoweHTML="$HotLinkURL"+"LoweR.png"
	CASE $Lowe<=$LoweSa1 AND $Lowe>=$LoweSa2
		$LoweLeft = $LoweE1
		$LoweHTML="$HotLinkURL"+"LoweSa.png"
	CASE $Lowe<=$LoweE1 AND $Lowe>=$LoweE2
		$LoweLeft = $LoweD
		$LoweHTML="$HotLinkURL"+"LoweE.png"
	CASE $Lowe<=$LoweD
		$LoweLeft = 0
		$LoweHTML="$HotLinkURL"+"LoweD.png"
	CASE $Lowe=0
		$LoweLeft= $LoweB1
		$LoweHTML=""
	OTHERWISE
		$LoweLeft = $LoweB1
	ENDCASE #Lowe
	BEGINCASE #Host
	CASE $Host>=$HostB1 AND $Host<=$HostB2
		$HostLeft = $HostS1 - $Host
		$HostHTML="$HotLinkURL"+"HostB.png"
	CASE $Host>=$HostS1 AND $Host<=$HostS2
		$HostLeft = $HostG1 - $Host
		$HostHTML="$HotLinkURL"+"HostS.png"
	CASE $Host>=$HostG1 AND $Host<=$HostG2
		$HostLeft = $HostP1 - $Host
		$HostHTML="$HotLinkURL"+"HostG.png"
	CASE $Host>=$HostP1 AND $Host<=$HostP2
		$HostLeft = $HostR1 - $Host
		$HostHTML="$HotLinkURL"+"HostP.png"
	CASE $Host>=$HostR1 AND $Host<=$HostR2
		$HostLeft = $HostSa1 - $Host
		$HostHTML="$HotLinkURL"+"HostR.png"
	CASE $Host>=$HostSa1 AND $Host<=$HostSa2
		$HostLeft = $HostE1 - $Host
		$HostHTML="$HotLinkURL"+"HostSa.png"
	CASE $Host>=$HostE1 AND $Host<=$HostE2
		$HostLeft = $HostD - $Host
		$HostHTML="$HotLinkURL"+"HostE.png"
	CASE $Host>=$HostD
		$HostLeft = 0
		$HostHTML="$HotLinkURL"+"HostD.png"
	CASE $Host=0
		$HostLeft= $HostB1
		$HostHTML=""
	OTHERWISE
		$HostLeft = $HostB1 - $Host
	ENDCASE #Host
	BEGINCASE #Cons
	CASE $Cons>=$ConsB1 AND $Cons<=$ConsB2
		$ConsLeft = $ConsS1
		$ConsHTML="$HotLinkURL"+"ConsB.png"
	CASE $Cons>=$ConsS1 AND $Cons<=$ConsS2
		$ConsLeft = $ConsG1
		$ConsHTML="$HotLinkURL"+"ConsS.png"
	CASE $Cons>=$ConsG1 AND $Cons<=$ConsG2
		$ConsLeft = $ConsP1
		$ConsHTML="$HotLinkURL"+"ConsG.png"
	CASE $Cons>=$ConsP1 AND $Cons<=$ConsP2
		$ConsLeft = $ConsR1
		$ConsHTML="$HotLinkURL"+"ConsP.png"
	CASE $Cons>=$ConsR1 AND $Cons<=$ConsR2
		$ConsLeft = $ConsSa1
		$ConsHTML="$HotLinkURL"+"ConsR.png"
	CASE $Cons>=$ConsSa1 AND $Cons<=$ConsSa2
		$ConsLeft = $ConsE1
		$ConsHTML="$HotLinkURL"+"ConsSa.png"
	CASE $Cons>=$ConsE1 AND $Cons<=$ConsE2
		$ConsLeft = $ConsD
		$ConsHTML="$HotLinkURL"+"ConsE.png"
	CASE $Cons>=$ConsD
		$ConsLeft = 0
		$ConsHTML="$HotLinkURL"+"ConsD.png"
	CASE $Cons=0
		$ConsLeft= $ConsB1
		$ConsHTML=""
	OTHERWISE
		$ConsLeft = $ConsB1 - $Cons
	ENDCASE #Cons
	BEGINCASE #Geoc
	CASE $Geoc>=$GeocB1 AND $Geoc<=$GeocB2
		$GeocLeft = $GeocS1 - $Geoc
		$GeocHTML="$HotLinkURL"+"GGeocB.png"
	CASE $Geoc>=$GeocS1 AND $Geoc<=$GeocS2
		$GeocLeft = $GeocG1 - $Geoc
		$GeocHTML="$HotLinkURL"+"GGeocS.png"
	CASE $Geoc>=$GeocG1 AND $Geoc<=$GeocG2
		$GeocLeft = $GeocP1 - $Geoc
		$GeocHTML="$HotLinkURL"+"GGeocG.png"
	CASE $Geoc>=$GeocP1 AND $Geoc<=$GeocP2
		$GeocLeft = $GeocR1 - $Geoc
		$GeocHTML="$HotLinkURL"+"GGeocP.png"
	CASE $Geoc>=$GeocR1 AND $Geoc<=$GeocR2
		$GeocLeft = $GeocSa1 - $Geoc
		$GeocHTML="$HotLinkURL"+"GGeocR.png"
	CASE $Geoc>=$GeocSa1 AND $Geoc<=$GeocSa2
		$GeocLeft = $GeocE1 - $Geoc
		$GeocHTML="$HotLinkURL"+"GGeocSa.png"
	CASE $Geoc>=$GeocE1 AND $Geoc<=$GeocE2
		$GeocLeft = $GeocD - $Geoc
		$GeocHTML="$HotLinkURL"+"GGeocE.png"
	CASE $Geoc>=$GeocD
		$GeocLeft = 0
		$GeocHTML="$HotLinkURL"+"GGeocD.png"
	CASE $Geoc=0
		$GeocLeft= $GeocB1
		$GeocHTML=""
	OTHERWISE
		$GeocLeft = $GeocB1 - $Geoc
	ENDCASE #Geoc
	BEGINCASE #Dist
	CASE $Dist>=$DistB1 AND $Dist<=$DistB2
		$DistLeft = $DistS1
		$DistHTML="$HotLinkURL"+"DistB.png"
	CASE $Dist>=$DistS1 AND $Dist<=$DistS2
		$DistLeft = $DistG1
		$DistHTML="$HotLinkURL"+"DistS.png"
	CASE $Dist>=$DistG1 AND $Dist<=$DistG2
		$DistLeft = $DistP1
		$DistHTML="$HotLinkURL"+"DistG.png"
	CASE $Dist>=$DistP1 AND $Dist<=$DistP2
		$DistLeft = $DistR1
		$DistHTML="$HotLinkURL"+"DistP.png"
	CASE $Dist>=$DistR1 AND $Dist<=$DistR2
		$DistLeft = $DistSa1
		$DistHTML="$HotLinkURL"+"DistR.png"
	CASE $Dist>=$DistSa1 AND $Dist<=$DistSa2
		$DistLeft = $DistE1
		$DistHTML="$HotLinkURL"+"DistSa.png"
	CASE $Dist>=$DistE1 AND $Dist<=$DistE2
		$DistLeft = $DistD
		$DistHTML="$HotLinkURL"+"DistE.png"
	CASE $Dist>=$DistD
		$DistLeft = 0
		$DistHTML="$HotLinkURL"+"DistD.png"
	CASE $Dist=0
		$DistLeft= $DistB1
		$DistHTML=""
	OTHERWISE
		$DistLeft = $DistB1 - $Dist
	ENDCASE #Dist
	BEGINCASE #Matr
	CASE $Matr>=$MatrB1 AND $Matr<=$MatrB2
		$MatrLeft = $MatrS1 - $Matr
		$MatrHTML="$HotLinkURL"+"MatrB.png"
	CASE $Matr>=$MatrS1 AND $Matr<=$MatrS2
		$MatrLeft = $MatrG1 - $Matr
		$MatrHTML="$HotLinkURL"+"MatrS.png"
	CASE $Matr>=$MatrG1 AND $Matr<=$MatrG2
		$MatrLeft = $MatrP1 - $Matr
		$MatrHTML="$HotLinkURL"+"MatrG.png"
	CASE $Matr>=$MatrP1 AND $Matr<=$MatrP2
		$MatrLeft = $MatrR1 - $Matr
		$MatrHTML="$HotLinkURL"+"MatrP.png"
	CASE $Matr>=$MatrR1 AND $Matr<=$MatrR2
		$MatrLeft = $MatrSa1 - $Matr
		$MatrHTML="$HotLinkURL"+"MatrR.png"
	CASE $Matr>=$MatrSa1 AND $Matr<=$MatrSa2
		$MatrLeft = $MatrE1 - $Matr
		$MatrHTML="$HotLinkURL"+"MatrSa.png"
	CASE $Matr>=$MatrE1 AND $Matr<=$MatrE2
		$MatrLeft = $MatrD - $Matr
		$MatrHTML="$HotLinkURL"+"MatrE.png"
	CASE $Matr>=$MatrD
		$MatrLeft = 0
		$MatrHTML="$HotLinkURL"+"MatrD.png"
	CASE $Matr=0
		$MatrLeft= $MatrB1
		$MatrHTML=""
	OTHERWISE
		$MatrLeft = $MatrB1 - $Matr
	ENDCASE #Matr
	BEGINCASE #Cale
	CASE $Cale>=$CaleB1 AND $Cale<=$CaleB2
		$CaleLeft = $CaleS1 - $Cale
		$CaleHTML="$HotLinkURL"+"CaleB.png"
	CASE $Cale>=$CaleS1 AND $Cale<=$CaleS2
		$CaleLeft = $CaleG1 - $Cale
		$CaleHTML="$HotLinkURL"+"CaleS.png"
	CASE $Cale>=$CaleG1 AND $Cale<=$CaleG2
		$CaleLeft = $CaleP1 - $Cale
		$CaleHTML="$HotLinkURL"+"CaleG.png"
	CASE $Cale>=$CaleP1 AND $Cale<=$CaleP2
		$CaleLeft = $CaleR1 - $Cale
		$CaleHTML="$HotLinkURL"+"CaleP.png"
	CASE $Cale>=$CaleR1 AND $Cale<=$CaleR2
		$CaleLeft = $CaleSa1 - $Cale
		$CaleHTML="$HotLinkURL"+"CaleR.png"
	CASE $Cale>=$CaleSa1 AND $Cale<=$CaleSa2
		$CaleLeft = $CaleE1 - $Cale
		$CaleHTML="$HotLinkURL"+"CaleSa.png"
	CASE $Cale>=$CaleE1 AND $Cale<=$CaleE2
		$CaleLeft = $CaleD - $Cale
		$CaleHTML="$HotLinkURL"+"CaleE.png"
	CASE $Cale>=$CaleD
		$CaleLeft = 0
		$CaleHTML="$HotLinkURL"+"CaleD.png"
	CASE $Cale=0
		$CaleLeft= $CaleB1
		$CaleHTML=""
	OTHERWISE
		$CaleLeft = $CaleB1 - $Cale
	ENDCASE #Cale
	BEGINCASE #Trav
	CASE $Trav>=$TravB1 AND $Trav<=$TravB2
		$TravLeft = $TravS1 - $Trav
		$TravHTML="$HotLinkURL"+"TravB.png"
	CASE $Trav>=$TravS1 AND $Trav<=$TravS2
		$TravLeft = $TravG1 - $Trav
		$TravHTML="$HotLinkURL"+"TravS.png"
	CASE $Trav>=$TravG1 AND $Trav<=$TravG2
		$TravLeft = $TravP1 - $Trav
		$TravHTML="$HotLinkURL"+"TravG.png"
	CASE $Trav>=$TravP1 AND $Trav<=$TravP2
		$TravLeft = $TravR1 - $Trav
		$TravHTML="$HotLinkURL"+"TravP.png"
	CASE $Trav>=$TravR1 AND $Trav<=$TravR2
		$TravLeft = $TravSa1 - $Trav
		$TravHTML="$HotLinkURL"+"TravR.png"
	CASE $Trav>=$TravSa1 AND $Trav<=$TravSa2
		$TravLeft = $TravE1 - $Trav
		$TravHTML="$HotLinkURL"+"TravSa.png"
	CASE $Trav>=$TravE1 AND $Trav<=$TravE2
		$TravLeft = $TravD - $Trav
		$TravHTML="$HotLinkURL"+"TravE.png"
	CASE $Trav>=$TravD
		$TravLeft = 0
		$TravHTML="$HotLinkURL"+"TravD.png"
	CASE $Trav=0
		$TravLeft= $TravB1
		$TravHTML=""
	OTHERWISE
		$TravLeft = $TravB1 - $Trav
	ENDCASE #Trav
	BEGINCASE #Coin
	CASE $Coin>=$CoinB1 AND $Coin<=$CoinB2
		$CoinLeft = $CoinS1 - $Coin
		$CoinHTML="$HotLinkURL"+"CoinB.png"
	CASE $Coin>=$CoinS1 AND $Coin<=$CoinS2
		$CoinLeft = $CoinG1 - $Coin
		$CoinHTML="$HotLinkURL"+"CoinS.png"
	CASE $Coin>=$CoinG1 AND $Coin<=$CoinG2
		$CoinLeft = $CoinP1 - $Coin
		$CoinHTML="$HotLinkURL"+"CoinG.png"
	CASE $Coin>=$CoinP1 AND $Coin<=$CoinP2
		$CoinLeft = $CoinR1 - $Coin
		$CoinHTML="$HotLinkURL"+"CoinP.png"
	CASE $Coin>=$CoinR1 AND $Coin<=$CoinR2
		$CoinLeft = $CoinSa1 - $Coin
		$CoinHTML="$HotLinkURL"+"CoinR.png"
	CASE $Coin>=$CoinSa1 AND $Coin<=$CoinSa2
		$CoinLeft = $CoinE1 - $Coin
		$CoinHTML="$HotLinkURL"+"CoinSa.png"
	CASE $Coin>=$CoinE1 AND $Coin<=$CoinE2
		$CoinLeft = $CoinD - $Coin
		$CoinHTML="$HotLinkURL"+"CoinE.png"
	CASE $Coin>=$CoinD
		$CoinLeft = 0
		$CoinHTML="$HotLinkURL"+"CoinD.png"
	CASE $Coin=0
		$CoinLeft= $CoinB1
		$CoinHTML=""
	OTHERWISE
		$CoinLeft = $CoinB1 - $Coin
	ENDCASE #Coin
	BEGINCASE #Writ
	CASE $Writ>=$WritB1 AND $Writ<=$WritB2
		$WritLeft = $WritS1
		$WritHTML="$HotLinkURL"+"WritB.png"
	CASE $Writ>=$WritS1 AND $Writ<=$WritS2
		$WritLeft = $WritG1
		$WritHTML="$HotLinkURL"+"WritS.png"
	CASE $Writ>=$WritG1 AND $Writ<=$WritG2
		$WritLeft = $WritP1
		$WritHTML="$HotLinkURL"+"WritG.png"
	CASE $Writ>=$WritP1 AND $Writ<=$WritP2
		$WritLeft = $WritR1
		$WritHTML="$HotLinkURL"+"WritP.png"
	CASE $Writ>=$WritR1 AND $Writ<=$WritR2
		$WritLeft = $WritSa1
		$WritHTML="$HotLinkURL"+"WritR.png"
	CASE $Writ>=$WritSa1 AND $Writ<=$WritSa2
		$WritLeft = $WritE1
		$WritHTML="$HotLinkURL"+"WritSa.png"
	CASE $Writ>=$WritE1 AND $Writ<=$WritE2
		$WritLeft = $WritD
		$WritHTML="$HotLinkURL"+"WritE.png"
	CASE $Writ>=$WritD
		$WritLeft = 0
		$WritHTML="$HotLinkURL"+"WritD.png"
	CASE $Writ=0
		$WritLeft= $WritB1
		$WritHTML=""
	OTHERWISE
		$WritLeft = $WritB1 - $Writ
	ENDCASE #Writ



	SHOWSTATUS msg="$Message"

	SHOWSTATUS msg=""  top=10 Left=10
ENDSUB name=Assignment


#------------------------------------------------------------------------------------------------------------------------------------------

BEGINSUB name=PrepareHTML
	SHOWSTATUS msg="Preparing HTML Code" top=10 Left=10
#	GOSUB name=Convert
	GOSUB name=HoverText
	IF not($TradHTML="") AND $ShowType=TRUE
		$TradCode=" $1$2$3$2$5$6$2$TradHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$TradAlt$2$5$28$2$20$TradAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($MultHTML="") AND $ShowType=TRUE
		$MultCode=" $1$2$3$2$5$6$2$MultHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$MultAlt$2$5$28$2$20$MultAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($MystHTML="") AND $ShowType=TRUE
		$MystCode=" $1$2$3$2$5$6$2$MystHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$MystAlt$2$5$28$2$20$MystAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($VirtHTML="") AND $ShowType=TRUE
		$VirtCode=" $1$2$3$2$5$6$2$VirtHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$VirtAlt$2$5$28$2$20$VirtAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($EartHTML="") AND $ShowType=TRUE
		$EartCode=" $1$2$3$2$5$6$2$EartHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$EartAlt$2$5$28$2$20$EartAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($LettHTML="") AND $ShowType=TRUE
		$LettCode=" $1$2$3$2$5$6$2$LettHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$LettAlt$2$5$28$2$20$LettAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($WherHTML="") AND $ShowType=TRUE
		$WherCode=" $1$2$3$2$5$6$2$WherHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$WherAlt$2$5$28$2$20$WherAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($MegaHTML="") AND $ShowType=TRUE
		$MegaCode=" $1$2$3$2$5$6$2$MegaHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$MegaAlt$2$5$28$2$20$MegaAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($EvenHTML="") AND $ShowType=TRUE
		$EvenCode=" $1$2$3$2$5$6$2$EvenHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$EvenAlt$2$5$28$2$20$EvenAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($CitoHTML="") AND $ShowType=TRUE
		$CitoCode=" $1$2$3$2$5$6$2$CitoHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$CitoAlt$2$5$28$2$20$CitoAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($TenyHTML="") AND $ShowType=TRUE
		$TenyCode=" $1$2$3$2$5$6$2$TenyHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$TenyAlt$2$5$28$2$20$TenyAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($BencHTML="") AND $ShowType=TRUE
		$BencCode=" $1$2$3$2$5$6$2$BencHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$BencAlt$2$5$28$2$20$BencAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($WaymHTML="") AND $ShowType=TRUE
		$WaymCode=" $1$2$3$2$5$6$2$WaymHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$WaymAlt$2$5$28$2$20$WaymAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($WebcHTML="") AND $ShowType=TRUE
		$WebcCode=" $1$2$3$2$5$6$2$WebcHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$WebcAlt$2$5$28$2$20$WebcAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($ApecHTML="") AND $ShowType=TRUE
		$ApecCode=" $1$2$3$2$5$6$2$ApecHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$ApecAlt$2$5$28$2$20$ApecAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($MicrHTML="") AND $ShowSize=TRUE
		$MicrCode=" $1$2$3$2$5$6$2$MicrHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$MicrAlt$2$5$28$2$20$MicrAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($SmalHTML="") AND $ShowSize=TRUE
		$SmalCode=" $1$2$3$2$5$6$2$SmalHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$SmalAlt$2$5$28$2$20$SmalAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($ReguHTML="") AND $ShowSize=TRUE
		$ReguCode=" $1$2$3$2$5$6$2$ReguHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$ReguAlt$2$5$28$2$20$ReguAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($LargHTML="") AND $ShowSize=TRUE
		$LargCode=" $1$2$3$2$5$6$2$LargHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$LargAlt$2$5$28$2$20$LargAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($FiveHTML="") AND $ShowDiff=TRUE
		$FiveCode=" $1$2$3$2$5$6$2$FiveHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$FiveAlt$2$5$28$2$20$FiveAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($CounHTML="") AND $ShowCoun=TRUE
		$CounCode=" $1$2$3$2$5$6$2$CounHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$CounAlt$2$5$28$2$20$CounAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($FTFHTML="") AND $ShowFTF=TRUE
		$FTFCode=" $1$2$3$2$5$6$2$FTFHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$FTFAlt$2$5$28$2$20$FTFAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($HIDDHTML="") AND $ShowHidd=TRUE
		$HiddCode=" $1$2$3$2$5$6$2$HiddHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$HiddAlt$2$5$28$2$20$HiddAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($ElevHTML="") AND $ShowElev=TRUE
		$ElevCode=" $1$2$3$2$5$6$2$ElevHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$ElevAlt$2$5$28$2$20$ElevAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($TwenHTML="")
		$TwenCode=" $1$2$3$2$5$6$2$TwenHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$TwenAlt$2$5$28$2$20$TwenAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($UndeHTML="") AND $ShowOther=TRUE
		$UndeCode=" $1$2$3$2$5$6$2$UndeHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$UndeAlt$2$5$28$2$20$UndeAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($LoweHTML="") AND $ShowElev=TRUE
		$LoweCode=" $1$2$3$2$5$6$2$LoweHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$LoweAlt$2$5$28$2$20$LoweAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($HostHTML="") AND $ShowHidd=TRUE
		$HostCode=" $1$2$3$2$5$6$2$HostHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$HostAlt$2$5$28$2$20$HostAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($ConsHTML="") AND $ShowOther=TRUE
		$ConsCode=" $1$2$3$2$5$6$2$ConsHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$ConsAlt$2$5$28$2$20$ConsAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($GeocHTML="") AND $ShowType=TRUE
		$GeocCode=" $1$2$3$2$5$6$2$GeocHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$GeocAlt$2$5$28$2$20$GeocAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($DistHTML="") AND $ShowOther=TRUE
		$DistCode=" $1$2$3$2$5$6$2$DistHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$DistAlt$2$5$28$2$20$DistAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($MatrHTML="") AND $ShowOther=TRUE
		$MatrCode=" $1$2$3$2$5$6$2$MatrHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$MatrAlt$2$5$28$2$20$MatrAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($CaleHTML="") AND $ShowOther=TRUE
		$CaleCode=" $1$2$3$2$5$6$2$CaleHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$CaleAlt$2$5$28$2$20$CaleAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($TravHTML="") AND $ShowOther=TRUE
		$TravCode=" $1$2$3$2$5$6$2$TravHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$TravAlt$2$5$28$2$20$TravAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($CoinHTML="") AND $ShowType=TRUE
		$CoinCode=" $1$2$3$2$5$6$2$CoinHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$CoinAlt$2$5$28$2$20$CoinAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF
	IF not($WritHTML="") AND $ShowOther=TRUE
		$WritCode=" $1$2$3$2$5$6$2$WritHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$WritAlt$2$5$28$2$20$WritAlt$2$5$23$_NewLine"
		$BADGENUMBER=$BADGENUMBER+1
	ENDIF







	#GOSUB name=Unconvert

ENDSUB #name=PrepareHTML

#------------------------------------------------------------------------------------------------------------------------------------------




BEGINSUB name=Output
	GOSUB name="Report"

	IF $ShowBelt
		SHOWSTATUS msg="Determining Geocaching Belt" top=10 Left=10
		GOSUB name=Belts
	ENDIF


	SHOWSTATUS msg="Outputting HTML Code" top=10 Left=10

	#GOSUB name=convert
	$HTMLCode= $HTMLCode + "$GeocCode$TradCode$MultCode$MystCode$VirtCode$EartCode$WherCode$LettCode$WebcCode$ApecCode$EvenCode$CitoCode$MegaCode$TenyCode$BencCode$WaymCode$MicrCode$SmalCode$ReguCode$LargCode$FTFCode$CounCode$FiveCode$TwenCode$ConsCode$CaleCode$WritCode$ElevCode$LoweCode$DistCode$MatrCode$UndeCode$HiddCode$HostCode$TravCode$CoinCode"
	IF $SortBadges
		GOSUB name=SortBadges
	ELSE
		$HTMLCode="$Centre$_NewLine" + "$HTMLCode" + "<br>$BeltCode<br>$_NewLine $Link $_NewLine$endcentre"
	ENDIF
	SHOWSTATUS msg="Generating 'More Information' table" top=10 Left=10
	GOSUB name=MoreInfo
	SHOWSTATUS msg="Outputting...copying to clipboard" top=10 Left=10
	CLIP data=$HTMLCode
	TIMER status=off msg=no
	$timer = $timer + Round($_Timer,1)
	SHOWSTATUS msg="Outputting...saving preview" top=10 Left=10
	$Data = PutFile($SaveLocation,"$HTMLCode")
	SHOWSTATUS msg="Collecting Data" top=10 Left=10
	$datasubmitURL = $datasubmiturl + "userid=$userid&username=$username&badgesawarded=$badgenumber&version=$version&trad=$trad&mult=$mult&myst=$myst&virt=$virt&eart=$eart&lett=$lett&wher=$wher&mega=$mega&even=$even&cito=$cito&teny=$teny&benc=$benc&waym=$waym&webc=$webc&apec=$apec&micr=$micr&smal=$smal&regu=$regu&larg=$larg&five=$five&coun=$coun&ftf=$ftf&hidd=$hidd&elev=$elev&lowe=$lowe&twen=$twen&unde=$unde&host=$host&cons=$cons&geoc=$geoc&dist=$dist&matr=$matr&cale=$cale&trav=$trav&coin=$coin&writ=$writ"
	$Data = GetUrl($datasubmitURL)
	SHOWSTATUS msg="" top=10 Left=10
	IF not($Suppress=TRUE)

		SHOWSTATUS msg="Done!" top=10 Left=10 Display=off
		MSGOK msg="Your badges have been generated in $timer seconds.  You have been awarded $BADGENUMBER badges.  The HTML code to display your badges has been copied to your clipboard. Press OK to view badges."
		FILEOPEN File=$SaveLocation wait=no
	ENDIF


	IF $WritetoFSG
		IF FileExists($Supplementary)
			$Temp = GetFile($Supplementary)
			$Data = "$FirstLine"+"$_NewLine"+"$HTMLCODE"+"$_NewLine"+"$Temp"
		ELSE
			$Data = "$FirstLine"+"$_NewLine"+"$HTMLCODE"
		ENDIF
		$Location = "$_AppData\macros\FindStatGenNotes$NotesSettings$NotesSection.dat"
		$XData = PutFile($Location,"$Data")
	ENDIF
	IF $RunPostMacro=TRUE
		SHOWSTATUS msg="Removing Conflicting Variables" top=10 Left=10
		$RemoveVariables=RemoveVar("FTF")
		$RemoveVariables=RemoveVar("Test")
		$RemoveVariables=RemoveVar("Percent")
		$RemoveVariables=RemoveVar("State")
		SHOWSTATUS msg="Running External Macro" top=10 Left=10
		MACRO file=$PostMacroFile
	ELSE
		DATABASE name=$Current
		RETURN
	ENDIF

ENDSUB #name=output




#------------------------------------------------------------------------------------------------------------------------------------------


BEGINSUB name=Declaration
	SHOWSTATUS msg="Declaring Variables..." top=10 Left=10
	GOSUB name=VarDec
	GOSUB name=HoverText
	MacSettings Type=R File="BadgeGenSavedSettings.data" FileCheck=N
	SHOWSTATUS msg="Initializing..." top=10 Left=10
ENDSUB #name=Declaration


#------------------------------------------------------------------------------------------------------------------------------------------


BEGINSUB name=HoverText
	SHOWSTATUS msg="Creating Hover Text..." top=10 Left=10
	$TradAlt="$TradName:  Awarded for finding $TradB1 or more Traditional type caches  |  $Iyou $hh $Trad and $nn $TradLeft to go up a level"
	$MultAlt="$MultName:  Awarded for finding $MultB1 or more Multi-cache type caches  |  $Iyou $hh $Mult and $nn $MultLeft to go up a level"
	$MystAlt="$MystName:  Awarded for finding $MystB1 or more Mystery/Puzzle type caches  |  $Iyou $hh $Myst and $nn $MystLeft to go up a level"
	$VirtAlt="$VirtName:  Awarded for finding $VirtB1 or more Virtual type caches  |  $Iyou $hh $Virt and $nn $VirtLeft to go up a level"
	$EartAlt="$EartName:  Awarded for finding $EartB1 or more Earthcache type caches  |  $Iyou $hh $Eart and $nn $EartLeft to go up a level"
	$LettAlt="$LettName:  Awarded for finding $LettB1 or more Letterbox type caches  |  $Iyou $hh $Lett and $nn $LettLeft to go up a level"
	$WherAlt="$WherName:  Awarded for finding $WherB1 or more Wherigo type caches  |  $Iyou $hh $Wher and $nn $WherLeft to go up a level"
	$MegaAlt="$MegaName:  Awarded for attending $MegaB1 or more Mega Event caches  |  $Iyou $hh $Mega and $nn $MegaLeft to go up a level"
	$EvenAlt="$EvenName:  Awarded for attending $EvenB1 or more Event caches  |  $Iyou $hh $Even and $nn $EvenLeft to go up a level"
	$CITOAlt="$CITOName:  Awarded for attending $CITOB1 or more Cache-In-Trash-Out (CITO) event caches  |  $Iyou $hh $Cito and $nn $CitoLeft to go up a level"
	$TenyAlt="$TenyName:  Awarded for attending $TenyB1 or more Ten Years! event caches  |  $Iyou $hh $Teny"
	$BencAlt="$BencName:  Awarded for finding $BencB1  or more Benchmarks  |  $Iyou $hh $Benc and $nn $BencLeft to go up a level"
	$WaymAlt="$WaymName:  Awarded for logging $WaymB1 or more Waymarks  |  $Iyou $hh $Waym and $nn $WaymLeft to go up a level"
	$WebcAlt="$WebcName:  Awarded for taking pictures at $WebcB1 or more Webcam type caches  |  $Iyou $hh $Webc and $nn $WebcLeft to go up a level"
	$ApecAlt="$ApecName:  Awarded for finding $ApecB1 or more Project: A.P.E. type caches  |  $Iyou $hh $Apec and $nn $ApecLeft to go up a level"
	$MicrAlt="$MicrName:  Awarded for finding $MicrB1 or more micro sized cache containers  |  $Iyou $hh $Micr and $nn $MicrLeft to go up a level"
	$SmalAlt="$SmalName:  Awarded for finding $SmalB1 or more small sized cache containers  |  $Iyou $hh $Smal and $nn $SmalLeft to go up a level"
	$ReguAlt="$ReguName:  Awarded for finding $ReguB1 or more regular sized cache containers  |  $Iyou $hh $Regu and $nn $ReguLeft to go up a level"
	$LargAlt="$LargName:  Awarded for finding $LargB1 or more large sized cache containers  |  $Iyou $hh $Larg and $nn $LargLeft to go up a level"
	$FiveAlt="$FiveName:  Awarded for finding $FiveB1 or more caches with a Difficulty/Terrain rating of 5/5  |  $Iyou $hh $Five and $nn $FiveLeft to go up a level"
	$FTFAlt="$FTFName:  Awarded for being the first cacher to find $FTFB1 or more caches  |  $Iyou $hh $FTF and $nn $FTFLeft to go up a level"
	$CounAlt="$CounName:  Awarded for finding a cache in $CounB1 or more countries  |  $Iyou $hh $Coun and $nn $CounLeft to go up a level"
	$HiddAlt="$HiddName:  Awarded for hiding/hosting $HiddB1 or more geocaches/event caches  |  $Iyou $hh $Hidd and $nn $HiddLeft to go up a level"
	$ElevAlt="$ElevName:  Awarded for finding a cache above $ElevB1$units in elevation  |  $Iyou $hh found a cache above $Elev" + "$units and $nn to find one at $ElevLeft" + "$units to go up a level"
	$LoweAlt="$LoweName:  Awarded for finding a cache below sea level  |  $Iyou $hh found a cache below $Lowe" + "$units and $nn to find a cache below $LoweLeft" + "$units to go up a level"
	$TwenAlt="$TwenName:  Awarded for finding $TwenB1 or more caches in a single day  |  $Iyou $hh $Twen and $nn $TwenLeft to go up a level"
	$ConsAlt="$ConsName:  Awarded for having $ConsB1 or more consecutive days with finds  |  $Iyou $hh $Cons and $nn $ConsLeft to go up a level"
	$CaleAlt="$CaleName:  Awarded for having found a cache on $CaleB1 or more different dates  |  $Iyou $hh $Cale and $nn $CaleLeft to go up a level"
	$UndeAlt="$UndeName:  Awarded for finding $UndeB1 or more caches underwater  |  $Iyou $hh $Unde and $nn $UndeLeft to go up a level"
	$HostAlt="$HostName:  Awarded for hosting $HostB1 or more event caches  |  $Iyou $hh hosted $Host and $nn to host $HostLeft more to go up a level"
	$GeocAlt="$GeocName:  Awarded for finding $GeocB1 or more geocaches (any type)  |  $Iyou $hh $Geoc and $nn $GeocLeft to go up a level"
	$DistAlt="$DistName:  Awarded for finding a cache at least $DistB1 $unitsbig from home  |  $Iyou $hh geocached $Dist" + "$unitsbig from home and $nn to geocache $DistLeft" + "$unitsbig to go up a level"
	$MatrAlt="$MatrName:  Awarded for finding $MatrB1 caches with unique Difficulty/Terrain ratings  |  $Iyou $hh $Matr and $nn $MatrLeft to go up a level"
	$TravAlt="$TravName:  Awarded for moving/discovering $TravB1 Travel Bugs  |  $Iyou $hh $Trav and $nn $TravLeft to go up a level"
	$CoinAlt="$CoinName:  Awarded for moving/discovering $CoinB1 Geocoins  |  $Iyou $hh $Coin and $nn $CoinLeft to go up a level"
	$WritAlt="$WritName:  Awarded for having an average log length of $WritB1 words  |  $Iyou $hh approximately $Writ words/log and $nn $WritLeft to go up a level"

	SHOWSTATUS msg="" top=10 Left=10
ENDSUB #name=HoverText

#------------------------------------------------------------------------------------------------------------------------------------------



BEGINSUB name=Convert
#	#metric to stat
#	IF SysInfo("Distance") = "M"
#		$conversion = 3.2808399
#		$conversion2 = 1.609344
##$Lowe = Round($Lowe*$conversion,0)
##$Elev = Round($Elev*$conversion,0)
#MSGOK msg="Distance in miles: $Dist"
#$Dist = Round($Dist*$conversion2,0)
#MSGOK msg="Distance in km: Dist"
#	ENDIF
ENDSUB #Convert






#BEGINSUB name=Convert
#	#metric to stat
#	IF SysInfo("Distance") = "M"
#		$conversion = 3.2808399
#		$conversion2 = 0.62137119
#		$Lowe = Round(($Lowe*$conversion),0)
#		$LoweB1 = Round(($LoweB1*$conversion),0)
#		$LoweB2 = Round(($LoweB2*$conversion),0)
#		$LoweS1 = Round(($LoweS1*$conversion),0)
#		$LoweS2 = Round(($LoweS2*$conversion),0)
#		$LoweG1 = Round(($LoweG1*$conversion),0)
#		$LoweG2 = Round(($LoweG2*$conversion),0)
#		$LoweP1 = Round(($LoweP1*$conversion),0)
#		$LoweP2 = Round(($LoweP2*$conversion),0)
#		$LoweR1 = Round(($LoweR1*$conversion),0)
#		$LoweR2 = Round(($LoweR2*$conversion),0)
#		$LoweSa1 = Round(($LoweSa1*$conversion),0)
#		$LoweSa2 = Round(($LoweSa2*$conversion),0)
#		$LoweE1 = Round(($LoweE1*$conversion),0)
#		$LoweE2 = Round(($LoweE2*$conversion),0)
#		$LoweD = Round(($LoweD*$conversion),0)
#		$LoweLeft = Round(($LoweLeft*$conversion),0)
#		$Elev = Round(($Elev*$conversion),0)
#		$ElevB1 = Round(($ElevB1*$conversion),0)
#		$ElevB2 = Round(($ElevB2*$conversion),0)
#		$ElevS1 = Round(($ElevS1*$conversion),0)
#		$ElevS2 = Round(($ElevS2*$conversion),0)
#		$ElevG1 = Round(($ElevG1*$conversion),0)
#		$ElevG2 = Round(($ElevG2*$conversion),0)
#		$ElevP1 = Round(($ElevP1*$conversion),0)
#		$ElevP2 = Round(($ElevP2*$conversion),0)
#		$ElevR1 = Round(($ElevR1*$conversion),0)
#		$ElevR2 = Round(($ElevR2*$conversion),0)
#		$ElevSa1 = Round(($ElevSa1*$conversion),0)
#		$ElevSa2 = Round(($ElevSa2*$conversion),0)
#		$ElevE1 = Round(($ElevE1*$conversion),0)
#		$ElevE2 = Round(($ElevE2*$conversion),0)
#		$ElevD = Round(($ElevD*$conversion),0)
#		$ElevLeft = Round(($ElevLeft*$conversion),0)
#		$Dist = Round(($Dist*$conversion2),0)
#		$DistB1 = Round(($DistB1*$conversion2),0)
#		$DistB2 = Round(($DistB2*$conversion2),0)
#		$DistS1 = Round(($DistS1*$conversion2),0)
#		$DistS2 = Round(($DistS2*$conversion2),0)
#		$DistG1 = Round(($DistG1*$conversion2),0)
#		$DistG2 = Round(($DistG2*$conversion2),0)
#		$DistP1 = Round(($DistP1*$conversion2),0)
#		$DistP2 = Round(($DistP2*$conversion2),0)
#		$DistR1 = Round(($DistR1*$conversion2),0)
#		$DistR2 = Round(($DistR2*$conversion2),0)
#		$DistSa1 = Round(($DistSa1*$conversion2),0)
#		$DistSa2 = Round(($DistSa2*$conversion2),0)
#		$DistE1 = Round(($DistE1*$conversion2),0)
#		$DistE2 = Round(($DistE2*$conversion2),0)
#		$DistD = Round(($DistD*$conversion2),0)
#		$DistLeft = Round(($DistLeft*$conversion2),0)
#	ENDIF
#ENDSUB #Convert
#
#BEGINSUB name=Unconvert
#	#stat to metric
#	IF SysInfo("Distance") = "M"
#		$conversion = 0.3048
#		$conversion2 = 1.609344
#		$Lowe = Round(($Lowe*$conversion),0)
#		$LoweB1 = Round(($LoweB1*$conversion),0)
#		$LoweB2 = Round(($LoweB2*$conversion),0)
#		$LoweS1 = Round(($LoweS1*$conversion),0)
#		$LoweS2 = Round(($LoweS2*$conversion),0)
#		$LoweG1 = Round(($LoweG1*$conversion),0)
#		$LoweG2 = Round(($LoweG2*$conversion),0)
#		$LoweP1 = Round(($LoweP1*$conversion),0)
#		$LoweP2 = Round(($LoweP2*$conversion),0)
#		$LoweR1 = Round(($LoweR1*$conversion),0)
#		$LoweR2 = Round(($LoweR2*$conversion),0)
#		$LoweSa1 = Round(($LoweSa1*$conversion),0)
#		$LoweSa2 = Round(($LoweSa2*$conversion),0)
#		$LoweE1 = Round(($LoweE1*$conversion),0)
#		$LoweE2 = Round(($LoweE2*$conversion),0)
#		$LoweD = Round(($LoweD*$conversion),0)
#		$LoweLeft = Round(($LoweLeft*$conversion),0)
#		$Elev = Round(($Elev*$conversion),0)
#		$ElevB1 = Round(($ElevB1*$conversion),0)
#		$ElevB2 = Round(($ElevB2*$conversion),0)
#		$ElevS1 = Round(($ElevS1*$conversion),0)
#		$ElevS2 = Round(($ElevS2*$conversion),0)
#		$ElevG1 = Round(($ElevG1*$conversion),0)
#		$ElevG2 = Round(($ElevG2*$conversion),0)
#		$ElevP1 = Round(($ElevP1*$conversion),0)
#		$ElevP2 = Round(($ElevP2*$conversion),0)
#		$ElevR1 = Round(($ElevR1*$conversion),0)
#		$ElevR2 = Round(($ElevR2*$conversion),0)
#		$ElevSa1 = Round(($ElevSa1*$conversion),0)
#		$ElevSa2 = Round(($ElevSa2*$conversion),0)
#		$ElevE1 = Round(($ElevE1*$conversion),0)
#		$ElevE2 = Round(($ElevE2*$conversion),0)
#		$ElevD = Round(($ElevD*$conversion),0)
#		$ElevLeft = Round(($ElevLeft*$conversion),0)
#		$Dist = Round(($Dist*$conversion2),0)
#		$DistB1 = Round(($DistB1*$conversion2),0)
#		$DistB2 = Round(($DistB2*$conversion2),0)
#		$DistS1 = Round(($DistS1*$conversion2),0)
#		$DistS2 = Round(($DistS2*$conversion2),0)
#		$DistG1 = Round(($DistG1*$conversion2),0)
#		$DistG2 = Round(($DistG2*$conversion2),0)
#		$DistP1 = Round(($DistP1*$conversion2),0)
#		$DistP2 = Round(($DistP2*$conversion2),0)
#		$DistR1 = Round(($DistR1*$conversion2),0)
#		$DistR2 = Round(($DistR2*$conversion2),0)
#		$DistSa1 = Round(($DistSa1*$conversion2),0)
#		$DistSa2 = Round(($DistSa2*$conversion2),0)
#		$DistE1 = Round(($DistE1*$conversion2),0)
#		$DistE2 = Round(($DistE2*$conversion2),0)
#		$DistD = Round(($DistD*$conversion2),0)
#		$DistLeft = Round(($DistLeft*$conversion2),0)
#	ENDIF
#ENDSUB #Convert





BEGINSUB name=SuggestUnde
	IF Not($_CurrentDatabase = $Editbox)
		SHOWSTATUS msg="Switching to $Editbox Database" top=10 Left=10
		DATABASE name=$editbox
	ENDIF
	$_sql="SELECT Count(*) FROM Caches WHERE Found AND (code in (select distinct acode from attributes where aid = 5))" #Thanks Kai Team
	$UndeString = Sqlite("sql",$_sql)
	MSGOK msg=" BadgeGen analysed your finds and thinks that you have found $UndeString caches underwater$_NewLine because $UndeString caches in your found database had a 'Scuba Gear Required' attribute. $_NewLine$_NewLine$_NewLine Press OK to return to the main form.  You may edit the number that BadgeGen suggested from there."
	GOSUB name=MainForm
ENDSUB

BEGINSUB name=CalculateElevation
	$data = Sqlite("sql","Select count(*) from caches where found and resolution=''")
	IF Not(Val($data)=0)
		GOSUB name=GetElevation
	ENDIF
	$Elev = Val(Sqlite("sql","Select Max(elevation) from caches where found"))
	$Lowe = Val(Sqlite("sql","Select Min(elevation) from caches where found"))
ENDSUB #name=CalculateElevation

BEGINSUB name=GetElevation
	$temp2=0
	WHILE Not($temp2=1)
		$FormExit = Form($elevationwarning,"")
		BEGINCASE
		CASE $FormExit = "DelayExit"
			$temp2=1
		CASE $FormExit = "UpdateElev"
			$mac = SlashAdd($_AppData) + "macros\elevation.gsk"
			IF FileExists($mac)
				MACRO file=$mac
			ELSE
				$msg="In order to update elevations, BadgeGen requires that you have the elevation macro installed." + $_NewLine + $_NewLine + "Press OK to go to the download thread for the elevation macro."
				MSGOK msg=$msg
				WEB url="http://gsak.net/board/index.php?showtopic=10289&view=findpost&p=121940"
				MSGOK msg="BadgeGen will now exit.  Install the elevation macro and then re-run BadgeGen."
				CANCEL
			ENDIF
			BREAK
		ENDCASE
	ENDWHILE
ENDSUB #GetElevation

BEGINSUB name=LogWordCount
	SHOWSTATUS msg="Counting Average Log Length" top=10 Left=10 
		$_sql="Select lText from LogsAll where g_foundlog(ltype) AND lIsowner"
		$Data=Sqlite("sql",$_sql)
		$Words=RegExCount(".\b",$Data)/2
		$_sql="select count(*) from logsall where lisowner and g_foundlog(ltype)"
		$Count=Val(Sqlite("sql",$_sql))
		$Writ=Round($Words/$Count,0)
ENDSUB #name=LogWordCount


BEGINSUB name=CalculateConsecutive
	$TEST = list("sql","create","$_NewLine")
	$_sql = "select distinct ldate from logs where g_foundlog(ltype) and lisowner order by ldate"
	$tmpS = Sqlite("sql",$_sql)
	$list = list("sql","replace",$tmpS)
	$count = $_sqlrows
	$tmpS = list("sql","item","$count")
	$firstdate = SqlToDate($tmpS)
	$tmpS = list("sql","item","$count")
	$MostRecentFind = SqlToDate($tmpS)
	# Initialize Variables
	$ThisRecord = 0
	$ConsecFinds = 0
	$ConsecNoFinds = 0
	$LastFindDate = $firstdate
	$counter = 0
	$MostInADay = 1
	$MostInADayDate = $firstdate
	$tmpMostInADay = 0
	$tmpStart =  $firstdate
	$FindStart = $firstdate
	$FindEnd = $firstdate
	$NoFindStart = $firstdate
	$NoFindEnd = $firstdate
	$tmpN = 2
	WHILE $tmpN <= $count
		#Step through the records
		IF Frac($tmpN/50)=0
		ENDIF
		#calculate how many days between this and the last find
		$tmpS = list("sql","item","$tmpN")
		$ThisFindDate = SqlToDate($tmpS)
		$diff = DateDiff($LastFindDate, $ThisFindDate) - 1
		IF $diff > $ConsecNoFinds
			$ConsecNoFinds = $diff
			$NoFindStart = $LastFindDate +1
			$NoFindEnd   = $ThisFindDate - 1
		ENDIF
		IF $diff = 0
			#Increment consecutive days counter
			$counter=$counter + 1
			IF $counter > $ConsecFinds
				#new Maximum consecutive days
				$ConsecFinds = $counter
				$FindStart = $tmpStart
				$FindEnd = $ThisFindDate
			ENDIF
		ENDIF
		IF $diff > 0
			#Reset consecutive days counter
			$counter = 0
			$tmpStart = $ThisFindDate
		ENDIF
		$LastFindDate = $ThisFindDate
		$tmpN = $tmpN + 1
	ENDWHILE
	$ConsecFinds=$ConsecFinds + 1
	$Cons = $ConsecFinds
	$TEST = list("sql","destroy","")
ENDSUB #name=Calculate Consecutive

BEGINSUB name=CountTrackables
	$FormExit = form($form1,"")
	BEGINCASE
	CASE $FormExit = "TrackOK"
		IF $AutoCountTrackables
			GOSUB name=AutoCountTrackables
		ENDIF
		GOSUB name=MainForm
	CASE $FormExit = "ProfileOpen"
		WEB url="www.geocaching.com/profile"
		DELAY ms=800
		GOSUB name=CountTrackables

	CASE $FormExit = "AutoCountTrackables"
		IF $AutoCountTrackables
			$form1 = EditForm($Form1,"ProfileOpen","Visible","No")
			$form1 = EditForm($Form1,"Label1","Visible","No")
			$form1 = EditForm($Form1,"Label2","Visible","No")
			$form1 = EditForm($Form1,"TravString","Visible","No")
			$form1 = EditForm($Form1,"CoinString","Visible","No")
			$CoinString = "Auto"
			$TravString = "Auto"
		ELSE
			$form1 = EditForm($Form1,"ProfileOpen","Visible","Yes")
			$form1 = EditForm($Form1,"Label1","Visible","Yes")
			$form1 = EditForm($Form1,"Label2","Visible","Yes")
			$form1 = EditForm($Form1,"TravString","Visible","Yes")
			$form1 = EditForm($Form1,"CoinString","Visible","Yes")
			$CoinString = "0"
			$TravString = "0"
		ENDIF
		GOSUB name=CountTrackables
	ENDCASE
	BEGINSUB name=AutoCountTrackables
		SHOWSTATUS msg="Switching To Trackables Database" top=10 Left=10
		IF DataBaseExists("My Trackables")
			DATABASE name="My Trackables"
			$_sql = "select count(code) from caches where found AND (UserData='Travel Bug Dog Tag' OR UserData='Unite For Diabetes')"
			$CountTemp = Sqlite("sql",$_sql)
			$Trav = Val($CountTemp)
			$_sql = "select count(code) from caches where found AND (UserData='Geocoin' OR UserData='White Jeep' OR UserData='Red Jeep' OR UserData='Green Jeep')"
			$CountTemp = Sqlite("sql",$_sql)
			$Coin = Val($CountTemp)
		ELSE
			$AutoCountTrackables=FALSE
			$CoinString = "0"
			$TravString = "0"
			MSGOK msg="You do not have a 'My Trackables' database in GSAK.  For BadgeGen to automatically determine the number of trackables that you have moved/discovered, the trackables must be added to GSAK using the AddTrackables.gsk macro. Visit http://gsak.net/board/MacroIndex.php to download the AddTrackables.gsk macro."
		ENDIF
	ENDSUB #AutoCountTrackables
ENDSUB #CountTrackables

BEGINSUB name=CalculateStateBadge
	$TotalStateBadges=0
	$NOSTATEBADGE=FALSE
	IF $ShowCoun
#		$CountryList = RegExReplace("[,]",RegExReplace("\r\n",RegExReplace("[0-9]*",$StateData,""),""),", ") + ", XXX"
		$CountryList = Replace(";",", ",$AvailableCountries) + ", XXX"
		$counter = 1
		WHILE Extract($CountryList,", ",$counter) <> "XXX"
			#Set $MaxCountry to the correct Country for this loop
			$Maxcountry = Extract($CountryList,", ",$counter)
			#Break out of WHILE loop if no more countries in list
			IF $MaxCountry="XXX"
				BREAK
			ENDIF
			SHOWSTATUS msg="Calculating States: $MaxCountry" top=10 Left=10
			#Count the number of completed states in $MaxCountry
			$status = Sqlite("sql","Select count(distinct state) from caches where country='$maxcountry' and State<>'Nil' and State<>'' and FOUND")
			$maxstates = Val($status)
			#Build Regex Query to read total states in country selected
			GOSUB name=InterpretStateData
			BEGINSUB name=InterpretStateData
				$separator = "]["
				$newdata = ""
				$len = Len($maxcountry) + 1
				$runthrough = $len - 1
				WHILE Not($runthrough=0)
					$get = $len-$runthrough
					$data = Left($maxcountry,$get)
					IF $runthrough = ($len - 1)
						$newdata = "[" + Right($data,1)
					ELSE
						$newdata = "$newdata" + "$separator" + Right($data,1)
					ENDIF
					$runthrough = $runthrough - 1
				ENDWHILE
				$newdata = "$newdata" + "][,][0-9]*"
				$query = $newdata
				#Pick out entry in state data table
				$entry = RegExData($query,$StateData,1)
				#Pick out total states
				$totalstates = RegExData("[0-9]*",$entry,1)
			ENDSUB #name=InterpretStateData
			#Skip Badge if TotalStates is zero
			IF Not(Val($TotalStates) = 0)
				$percentstate = Round(($maxstates / Val($totalstates)),2) * 100
			ELSE
				$percentstate = 0
			ENDIF
			#Set the value of $Stat
			$Stat = $percentstate
			#Determine which level of badge should be awarded and allocate image URL to $StatHTML
			BEGINCASE #Stat
			CASE $Stat>=$StatB1 AND $Stat<=$StatB2
				$StatLeft = $StatS1 - $Stat
				$StatLEVEL="B"
			CASE $Stat>=$StatS1 AND $Stat<=$StatS2
				$StatLeft = $StatG1 - $Stat
				$StatLEVEL="S"
			CASE $Stat>=$StatG1 AND $Stat<=$StatG2
				$StatLeft = $StatP1 - $Stat
				$StatLEVEL="G"
			CASE $Stat>=$StatP1 AND $Stat<=$StatP2
				$StatLeft = $StatR1 - $Stat
				$StatLEVEL="P"
			CASE $Stat>=$StatR1 AND $Stat<=$StatR2
				$StatLeft = $StatSa1 - $Stat
				$StatLEVEL="R"
			CASE $Stat>=$StatSa1 AND $Stat<=$StatSa2
				$StatLeft = $StatE1 - $Stat
				$StatLEVEL="Sa"
			CASE $Stat>=$StatE1 AND $Stat<=$StatE2
				$StatLeft = $StatD - $Stat
				$StatLEVEL="E"
			CASE $Stat>=$StatD
				$StatLeft = 0
				$StatLEVEL="D"
			OTHERWISE
				$NoStateBadge=TRUE
				$StatLeft = $StatB1
				$StatHTML=""
				$StatLevel="X"
			ENDCASE #Stat

			IF Not($StatLevel="X")
				$StatHTML=$HotlinkURL + "badgescripts/statebadge.php?level=" + "$StatLevel" + "&country=" + "$maxcountry&x=" + "$StatLevel" + ".png"
			ENDIF
			#IF $NOSTATEBADGE=FALSE
				#Initialize country specific variables
				$StatName = "The $maxcountry Cacher"
				$StatAlt="$StatName:  Awarded for finding caches in a percentage of states in $maxcountry  |  $Iyou $hh $stat"+"%"+" ($maxstates of $totalstates states) and $nn $StatLeft"+"%"+" more to go up a level"
				$StatCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"/badgescripts/statebadge.php?level=" + "$StatLevel" + "&country=$maxcountry&x=" + "$StatLevel" + ".png $2$5$20$2$StatAlt$2$5$28$2$StatAlt$2$23"
		#	ENDIF
			#IF $MaxStates <> 0
				#Open SQLite Database
				$database = "$_AppData\macros\BadgeGenData.db3"
				$data = Sqlite("open",$database)
				#Write to SQLite Database
				$data = Sqlite("sql","insert into chart values('','$StatName','$StatCodeAlt','$StatB1 %', '$StatS1 %', '$StatG1 %', '$StatP1 %', '$StatR1 %', '$StatSa1 %', '$StatE1 %', '$StatD %', '$Stat %',  '$Statleft %')")
				#Close SQLite Database
				$data = Sqlite("close","")
			#ENDIF
		#	IF $NOSTATEBADGE=FALSE
				#Build Badge HTML code if the badge should be awarded
				IF not($StatHTML="")
					$StatCode=" $1$2$3$2$5$6$2$StatHTML$2$5$10$2$Size$2$5$15$2$Size$2$5$20$2$StatAlt$2$5$28$2$20$StatAlt$2$5$23$_NewLine"
					$BADGENUMBER=$BADGENUMBER+1
				ENDIF
				#Append Badge HTML Code to $HTMLCode
				
				IF $NOSTATEBADGE=FALSE
					$HTMLCode = $HTMLCode + " $StatCode"
				ENDIF
			#ENDIF
			#Increment Counter
			$TotalStateBadges = $TotalStateBadges + 1
			$Counter = $Counter + 1
			$StatCode=""
			$MaxCountry=""
			$Level=""
			$StatName=""
			$StatCodeAlt=""
			$NOSTATEBADGE=FALSE
		ENDWHILE
	ENDIF
ENDSUB #name=CalculateStateBadge

BEGINSUB name=CalculateDistance
	GOTO position=top
	$Dist=0
	WHILE Not($_EOL)
		$_sql="Select latitude,longitude from caches where code=" + SqlQuote($d_Code) + " AND found"
		$CurrentCoords = Sqlite("sql","$_sql")
		$CurrentCoords = Replace(";"," ",$CurrentCoords)
		$data=$CurrentCoords + ";" + $HomeCoords
		#PAUSE msg=$data
		$CurrentDist = GCalc($data,"CalcDistance")
		IF Val($CurrentDist) > $Dist
			$Dist = Val($CurrentDist)
		ENDIF
		#PAUSE msg="Current Cache Distance: $CurrentDist $_NewLine $_NewLine Max Distance = $Dist"
		$num = Round($Dist,2)
		SHOWSTATUS msg="Calculating Maximum Distance...  |   Current Max: $num" width=350 Left=10 top=10
		GOTO position=next
	ENDWHILE
	IF SysInfo("Distance")="M"
		$Dist = $Dist*1.609344
	ENDIF
	$Dist = Round($Dist,0)
ENDSUB #CalculateDistance


BEGINSUB name=Belts
	$BeltHTML="$HotlinkURL"+"Belt_White.png"
	$BeltHSize = Val($Size) * 0.83
	$BeltWSize = Val($Size) * 1.75
	$BeltAlt ="Geocaching Belt"
	GOSUB name=CountContainerGolds
	GOSUB name=BrownConditions
	GOSUB name=BlackConditions

	IF ($Geoc >= 100) AND ($Hidd >= 5)
		$BeltHTML=$HotLinkURL +"Belt_Yellow.png"
	ENDIF
	IF ($Geoc >= 300) AND ($Hidd >= 10)
		$BeltHTML=$HotLinkURL +"Belt_Orange.png"
	ENDIF
	IF ($Geoc >= 500) AND ($Hidd >= 15) AND ($State >= 2) AND (($Even+$Mega+$Cito) >= 1)
		$BeltHTML=$HotLinkURL +"Belt_Green.png"
	ENDIF
	IF ($Geoc >= 1000) AND ($Hidd >= 20) AND ($State >= 4) AND (($Even+$Mega+$Cito) >= 3)
		$BeltHTML=$HotLinkURL +"Belt_Blue.png"
	ENDIF
	IF ($Geoc >= 2000) AND ($State >= 8) AND ($Hidd >= 50) AND ($Host >= 1) AND (($Even+$Mega+$Cito) >= 3) AND ($BrownConditions >= 5)
		$BeltHTML=$HotLinkURL +"Belt_Brown.png"
	ENDIF
	IF ($Geoc >= 3000) AND ($State >= 8) AND ($Hidd >= 50) AND ($Host >= 1) AND (($Even+$Mega+$Cito) >= 3) AND ($BlackConditions >= 8)
		$BeltHTML=$HotLinkURL +"Belt_Black.png"
	ENDIF



	$BeltCode = "$HoverExplaination$1$2$3$2$5$6$2$BeltHTML$2$5$10$2$BeltWSize$2$5$15$2$BeltHSize$2$5$20$2$BeltAlt$2$5$28$2$20$BeltAlt$2$5$23$_NewLine"
	#CLIP data=$BeltCode
	#MSGOK msg="BeltCode is copied to clipboard"

	BEGINSUB name=CountContainerGolds
		$NumContainerGolds = 0
		IF $Micr >= $MicrG1
			$NumContainerGolds = $NumContainerGolds + 1
		ENDIF
		IF $Smal >= $SmalG1
			$NumContainerGolds = $NumContainerGolds + 1
		ENDIF
		IF $Regu >= $ReguG1
			$NumContainerGolds = $NumContainerGolds + 1
		ENDIF
		IF $Larg >= $LargG1
			$NumContainerGolds = $NumContainerGolds + 1
		ENDIF
	ENDSUB


	BEGINSUB name=BrownConditions
		$BrownConditions = 0
		IF $FTF>=50
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $Coun>=4
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $Matr >= 72
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $Five >=1
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $Cons >= 30
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $Twen >= 50
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $Dist >= 500
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $NumContainerGolds >= 3
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $Elev >= 1000
			$BrownConditions = $BrownConditions + 1
		ENDIF
		IF $HiddTypes >= 3
			$BrownConditions = $BrownConditions + 1
		ENDIF
	ENDSUB #BrownConditions
	BEGINSUB name=BlackConditions
		$BlackConditions = 0
		IF $FTF >= 50
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $Coun >= 8
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $Matr = 81
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $Five >= 1
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $Cons >= 90
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $Twen >= 50
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $Dist >= 500
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $NumContainerGolds >= 3
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $Elev >= 1000
			$BlackConditions = $BlackConditions + 1
		ENDIF
		IF $HiddTypes >= 5
			$BlackConditions = $BlackConditions + 1
		ENDIF
	ENDSUB #BlackConditions
ENDSUB






BEGINSUB name=SortBadges
	SHOWSTATUS msg="Sorting Badges"  top=10 Left=10
	#	$HTMLCode="$GeocCode$TradCode$MultCode$MystCode$VirtCode$EartCode$WherCode$LettCode$WebcCode$EvenCode$CitoCode$MegaCode$BencCode$MicrCode$SmalCode$ReguCode$LargCode$FTFCode$CounCode$FiveCode$TwenCode$ConsCode$ElevCode$LoweCode$DistCode$MatrCode$UndeCode$HiddCode$HostCode"
	$DatalineB =""
	$DatalineS =""
	$DatalineG =""
	$DatalineP =""
	$DatalineR =""
	$DatalineA =""
	$DatalineE =""
	$DatalineD =""
	$DataLine7= ""
	$datanumber1 = 1
	WHILE $datanumber1 <= ($BadgeNumber + 1)
		$dataStart = Regexpos("<",$HTMLcode,1)
		$DataEnd = Regexpos(">",$HTMLcode,1)
		IF $datastart < $Dataend
			#			$Dataline1= SubStr($htmlCode,$dataStart,$dataend)
			#			$Dataline2= SubStr($htmlCode,$dataend+1,0)
			#			$Datanumber2=$DataEnD-$dataStart
			$Datanumber2=$DataEnD-$dataStart
			$Dataline1= SubStr($htmlCode,$dataStart,$datanumber2+1)
			$Dataline2= SubStr($htmlCode,$dataend+1,0)
			IF $Datanumber2 > 50
				IF RegExPos("D.png",$Dataline1,1) <>0
					$DatalineD = $DatalineD + $Dataline1
				ENDIF
				IF  Regexpos("E.png",$Dataline1,1) <>0
					$DatalineE = $DatalineE + $Dataline1
				ENDIF
				IF  Regexpos("Sa.png",$Dataline1,1) <>0
					$DatalineA = $DatalineA + $Dataline1
				ENDIF
				IF  Regexpos("R.png",$Dataline1,1) <>0
					$DatalineR = $DatalineR + $Dataline1
				ENDIF
				IF  Regexpos("P.png",$Dataline1,1) <>0
					$DatalineP = $DatalineP + $Dataline1
				ENDIF
				IF  Regexpos("G.png",$Dataline1,1) <>0
					$DatalineG = $DatalineG + $Dataline1
				ENDIF
				IF  Regexpos("S.png",$Dataline1,1) <>0
					$DatalineS = $DatalineS + $Dataline1
				ENDIF
				IF  Regexpos("B.png",$Dataline1,1) <>0
					$DatalineB = $DatalineB + $Dataline1
				ENDIF
			ENDIF
		ENDIF
		$HTMLCode= $Dataline2
		$datanumber1=$datanumber1+1
	ENDWHILE

	IF $MultipleLines
		IF  $DatalineD <>""
			$DatalineD = $DatalineD + "<br>"
		ELSE
			$DatalineD= ""
		ENDIF
		IF  $DatalineE <>""
			$DatalineE = $DatalineE + "<br>"
		ELSE
			$DatalineE= ""
		ENDIF
		IF  $DatalineA <>""
			$DatalineA = $DatalineA + "<br>"
		ELSE
			$DatalineA= ""
		ENDIF
		IF  $DatalineR <>""
			$DatalineR = $DatalineR + "<br>"
		ELSE
			$DatalineR= ""
		ENDIF
		IF  $DatalineP <>""
			$DatalineP = $DatalineP + "<br>"
		ELSE
			$DatalineP= ""
		ENDIF
		IF  $DatalineG <>""
			$DatalineG = $DatalineG + "<br>"
		ELSE
			$DatalineG= ""
		ENDIF
		IF  $DatalineS <>""
			$DatalineS = $DatalineS + "<br>"
		ELSE
			$DatalineS= ""
		ENDIF
		IF  $DatalineB <>""
			$DatalineB = $DatalineB + "<br>"
		ELSE
			$DatalineB= ""
		ENDIF
	ENDIF


	BEGINCASE
	CASE $TopDiamond
		$HTMLcode="<center> $DatalineD$DatalineE$DatalineA$DatalineR$DatalineP$DatalineG$DatalineS$DataLineB <br>$BeltCode<br>$_NewLine $Link $_NewLine</Center>"
	CASE $TopBronze
		$HTMLcode="<center> $DatalineB$DatalineS$DatalineG$DatalineP$DatalineR$DatalineA$DatalineE$DataLineD <br>$BeltCode<br>$_NewLine $Link $_NewLine</Center>"
	ENDCASE
ENDSUB #Sort Badges


BEGINSUB name=DetermineHomeCoords
	SHOWSTATUS msg="Determining Home Coordinates" top=10 Left=10
	$Temp1 = SysInfo("locations")
	$HomeCoords=""
	$Increment=1
	WHILE $HomeCoords="" AND $Increment < 1000
		$data = Extract($Temp1,";",$Increment)
		IF upper(Extract($data,",",1)) = "HOME"
			$HomeCoords=Extract($data,",",2)
			$HomeCoords=$HomeCoords + " " + Extract($data,",",3)
		ENDIF
		$Increment=$Increment+1
	ENDWHILE
	IF $HomeCoords=""
		MSGOK msg="BadgeGen could not determine your home coordinates.  Please enter them manually in the Home Coordinates field on the Options form that appears."
	ENDIF
	SHOWSTATUS display=off

ENDSUB #/DetermineHomeCoords




BEGINSUB name=VarDec
	SHOWSTATUS msg="Declaring Variables" top=10 Left=10
	Option Explicit=On

	DECLARE VAR=$01 TYPE=STRING
	DECLARE VAR=$02 TYPE=STRING
	DECLARE VAR=$03 TYPE=STRING
	DECLARE VAR=$04 TYPE=STRING
	DECLARE VAR=$05 TYPE=STRING
	DECLARE VAR=$06 TYPE=STRING
	DECLARE VAR=$07 TYPE=STRING
	DECLARE VAR=$1 TYPE=STRING
	DECLARE VAR=$10 TYPE=STRING
	DECLARE VAR=$15 TYPE=STRING
	DECLARE VAR=$2 TYPE=STRING
	DECLARE VAR=$20 TYPE=STRING
	DECLARE VAR=$23 TYPE=STRING
	DECLARE VAR=$24 TYPE=STRING
	DECLARE VAR=$26 TYPE=STRING
	DECLARE VAR=$28 TYPE=STRING
	DECLARE VAR=$3 TYPE=STRING
	DECLARE VAR=$5 TYPE=STRING
	DECLARE VAR=$6 TYPE=STRING
	DECLARE VAR=$ALLELEV TYPE=STRING
	DECLARE VAR=$ALT  TYPE=STRING
	DECLARE VAR=$APEC TYPE=NUMERIC
	DECLARE VAR=$APECALT TYPE=STRING
	DECLARE VAR=$APECB1 TYPE=NUMERIC
	DECLARE VAR=$APECB2 TYPE=NUMERIC
	DECLARE VAR=$APECCODE TYPE=STRING
	DECLARE VAR=$APECCODEALT TYPE=STRING
	DECLARE VAR=$APECD TYPE=NUMERIC
	DECLARE VAR=$APECE1 TYPE=NUMERIC
	DECLARE VAR=$APECE2 TYPE=NUMERIC
	DECLARE VAR=$APECG1 TYPE=NUMERIC
	DECLARE VAR=$APECG2 TYPE=NUMERIC
	DECLARE VAR=$APECHTML TYPE=STRING
	DECLARE VAR=$APECLEFT TYPE=NUMERIC
	DECLARE VAR=$APECLIMIT TYPE=NUMERIC
	DECLARE VAR=$APECNAME TYPE=STRING
	DECLARE VAR=$APECP1 TYPE=NUMERIC
	DECLARE VAR=$APECP2 TYPE=NUMERIC
	DECLARE VAR=$APECR1 TYPE=NUMERIC
	DECLARE VAR=$APECR2 TYPE=NUMERIC
	DECLARE VAR=$APECS1 TYPE=NUMERIC
	DECLARE VAR=$APECS2 TYPE=NUMERIC
	DECLARE VAR=$APECSA1 TYPE=NUMERIC
	DECLARE VAR=$APECSA2 TYPE=NUMERIC
	DECLARE VAR=$AUTOCOUNTTRACKABLES TYPE=BOOLEAN
	DECLARE VAR=$BADGENUMBER TYPE=NUMERIC
	DECLARE VAR=$BELTALT  TYPE=STRING
	DECLARE VAR=$BELTCODE  TYPE=STRING
	DECLARE VAR=$BELTHSIZE TYPE=NUMERIC
	DECLARE VAR=$BELTHTML TYPE=STRING
	DECLARE VAR=$BELTWSIZE TYPE=NUMERIC
	DECLARE VAR=$BENC TYPE=NUMERIC
	DECLARE VAR=$BENCALT TYPE=STRING
	DECLARE VAR=$BENCB1 TYPE=NUMERIC
	DECLARE VAR=$BENCB2 TYPE=NUMERIC
	DECLARE VAR=$BENCCODE TYPE=STRING
	DECLARE VAR=$BENCCODEALT TYPE=STRING
	DECLARE VAR=$BENCD TYPE=NUMERIC
	DECLARE VAR=$BENCE1 TYPE=NUMERIC
	DECLARE VAR=$BENCE2 TYPE=NUMERIC
	DECLARE VAR=$BENCG1 TYPE=NUMERIC
	DECLARE VAR=$BENCG2 TYPE=NUMERIC
	DECLARE VAR=$BENCHTML TYPE=STRING
	DECLARE VAR=$BENCLEFT TYPE=NUMERIC
	DECLARE VAR=$BENCLIMIT TYPE=NUMERIC
	DECLARE VAR=$BENCNAME TYPE=STRING
	DECLARE VAR=$BENCP1 TYPE=NUMERIC
	DECLARE VAR=$BENCP2 TYPE=NUMERIC
	DECLARE VAR=$BENCR1 TYPE=NUMERIC
	DECLARE VAR=$BENCR2 TYPE=NUMERIC
	DECLARE VAR=$BENCS1 TYPE=NUMERIC
	DECLARE VAR=$BENCS2 TYPE=NUMERIC
	DECLARE VAR=$BENCSA1 TYPE=NUMERIC
	DECLARE VAR=$BENCSA2 TYPE=NUMERIC
	DECLARE VAR=$BROWNCONDITIONS TYPE=NUMERIC
	DECLARE VAR=$CALE TYPE=NUMERIC
	DECLARE VAR=$CALEALT TYPE=STRING
	DECLARE VAR=$CALEB1 TYPE=NUMERIC
	DECLARE VAR=$CALEB2 TYPE=NUMERIC
	DECLARE VAR=$CALECODE TYPE=STRING
	DECLARE VAR=$CALECODEALT TYPE=STRING
	DECLARE VAR=$CALED TYPE=NUMERIC
	DECLARE VAR=$CALEE1 TYPE=NUMERIC
	DECLARE VAR=$CALEE2 TYPE=NUMERIC
	DECLARE VAR=$CALEG1 TYPE=NUMERIC
	DECLARE VAR=$CALEG2 TYPE=NUMERIC
	DECLARE VAR=$CALEHTML TYPE=STRING
	DECLARE VAR=$CALELEFT TYPE=NUMERIC
	DECLARE VAR=$CALELIMIT TYPE=NUMERIC
	DECLARE VAR=$CALENAME TYPE=STRING
	DECLARE VAR=$CALEP1 TYPE=NUMERIC
	DECLARE VAR=$CALEP2 TYPE=NUMERIC
	DECLARE VAR=$CALER1 TYPE=NUMERIC
	DECLARE VAR=$CALER2 TYPE=NUMERIC
	DECLARE VAR=$CALES1 TYPE=NUMERIC
	DECLARE VAR=$CALES2 TYPE=NUMERIC
	DECLARE VAR=$CALESA1 TYPE=NUMERIC
	DECLARE VAR=$CALESA2 TYPE=NUMERIC
	DECLARE VAR=$CENTRE TYPE=STRING
	DECLARE VAR=$CITO TYPE=NUMERIC
	DECLARE VAR=$CITOALT TYPE=STRING
	DECLARE VAR=$CITOB1 TYPE=NUMERIC
	DECLARE VAR=$CITOB2 TYPE=NUMERIC
	DECLARE VAR=$CITOCODE TYPE=STRING
	DECLARE VAR=$CITOCODEALT TYPE=STRING
	DECLARE VAR=$CITOD TYPE=NUMERIC
	DECLARE VAR=$CITOE1 TYPE=NUMERIC
	DECLARE VAR=$CITOE2 TYPE=NUMERIC
	DECLARE VAR=$CITOG1 TYPE=NUMERIC
	DECLARE VAR=$CITOG2 TYPE=NUMERIC
	DECLARE VAR=$CITOHTML TYPE=STRING
	DECLARE VAR=$CITOLEFT TYPE=NUMERIC
	DECLARE VAR=$CITOLIMIT TYPE=NUMERIC
	DECLARE VAR=$CITONAME TYPE=STRING
	DECLARE VAR=$CITOP1 TYPE=NUMERIC
	DECLARE VAR=$CITOP2 TYPE=NUMERIC
	DECLARE VAR=$CITOR1 TYPE=NUMERIC
	DECLARE VAR=$CITOR2 TYPE=NUMERIC
	DECLARE VAR=$CITOS1 TYPE=NUMERIC
	DECLARE VAR=$CITOS2 TYPE=NUMERIC
	DECLARE VAR=$CITOSA1 TYPE=NUMERIC
	DECLARE VAR=$CITOSA2 TYPE=NUMERIC
	DECLARE VAR=$COIN TYPE=NUMERIC
	DECLARE VAR=$COINALT TYPE=STRING
	DECLARE VAR=$COINB1 TYPE=NUMERIC
	DECLARE VAR=$COINB2 TYPE=NUMERIC
	DECLARE VAR=$COINCODE TYPE=STRING
	DECLARE VAR=$COINCODEALT TYPE=STRING
	DECLARE VAR=$COIND TYPE=NUMERIC
	DECLARE VAR=$COINE1 TYPE=NUMERIC
	DECLARE VAR=$COINE2 TYPE=NUMERIC
	DECLARE VAR=$COING1 TYPE=NUMERIC
	DECLARE VAR=$COING2 TYPE=NUMERIC
	DECLARE VAR=$COINHTML TYPE=STRING
	DECLARE VAR=$COINLEFT TYPE=NUMERIC
	DECLARE VAR=$COINLIMIT TYPE=NUMERIC
	DECLARE VAR=$COINNAME TYPE=STRING
	DECLARE VAR=$COINP1 TYPE=NUMERIC
	DECLARE VAR=$COINP2 TYPE=NUMERIC
	DECLARE VAR=$COINR1 TYPE=NUMERIC
	DECLARE VAR=$COINR2 TYPE=NUMERIC
	DECLARE VAR=$COINS1 TYPE=NUMERIC
	DECLARE VAR=$COINS2 TYPE=NUMERIC
	DECLARE VAR=$COINSA1 TYPE=NUMERIC
	DECLARE VAR=$COINSA2 TYPE=NUMERIC
	DECLARE VAR=$CONS TYPE=NUMERIC
	DECLARE VAR=$CONSALT TYPE=STRING
	DECLARE VAR=$CONSB1 TYPE=NUMERIC
	DECLARE VAR=$CONSB2 TYPE=NUMERIC
	DECLARE VAR=$CONSCODE TYPE=STRING
	DECLARE VAR=$CONSCODEALT TYPE=STRING
	DECLARE VAR=$CONSD TYPE=NUMERIC
	DECLARE VAR=$CONSE1 TYPE=NUMERIC
	DECLARE VAR=$CONSE2 TYPE=NUMERIC
	DECLARE VAR=$CONSECFINDS TYPE=NUMERIC
	DECLARE VAR=$CONSECNOFINDS TYPE=NUMERIC
	DECLARE VAR=$CONSG1 TYPE=NUMERIC
	DECLARE VAR=$CONSG2 TYPE=NUMERIC
	DECLARE VAR=$CONSHTML TYPE=STRING
	DECLARE VAR=$CONSLEFT TYPE=NUMERIC
	DECLARE VAR=$CONSLIMIT TYPE=NUMERIC
	DECLARE VAR=$CONSNAME TYPE=STRING
	DECLARE VAR=$CONSP1 TYPE=NUMERIC
	DECLARE VAR=$CONSP2 TYPE=NUMERIC
	DECLARE VAR=$CONSR1 TYPE=NUMERIC
	DECLARE VAR=$CONSR2 TYPE=NUMERIC
	DECLARE VAR=$CONSS1 TYPE=NUMERIC
	DECLARE VAR=$CONSS2 TYPE=NUMERIC
	DECLARE VAR=$CONSSA1 TYPE=NUMERIC
	DECLARE VAR=$CONSSA2 TYPE=NUMERIC
	DECLARE VAR=$COUN TYPE=NUMERIC
	DECLARE VAR=$COUNALT TYPE=STRING
	DECLARE VAR=$COUNB1 TYPE=NUMERIC
	DECLARE VAR=$COUNB2 TYPE=NUMERIC
	DECLARE VAR=$COUNCODE TYPE=STRING
	DECLARE VAR=$COUNCODEALT TYPE=STRING
	DECLARE VAR=$COUND TYPE=NUMERIC
	DECLARE VAR=$COUNE1 TYPE=NUMERIC
	DECLARE VAR=$COUNE2 TYPE=NUMERIC
	DECLARE VAR=$COUNG1 TYPE=NUMERIC
	DECLARE VAR=$COUNG2 TYPE=NUMERIC
	DECLARE VAR=$COUNHTML TYPE=STRING
	DECLARE VAR=$COUNLEFT TYPE=NUMERIC
	DECLARE VAR=$COUNLIMIT TYPE=NUMERIC
	DECLARE VAR=$COUNNAME TYPE=STRING
	DECLARE VAR=$COUNP1 TYPE=NUMERIC
	DECLARE VAR=$COUNP2 TYPE=NUMERIC
	DECLARE VAR=$COUNR1 TYPE=NUMERIC
	DECLARE VAR=$COUNR2 TYPE=NUMERIC
	DECLARE VAR=$COUNS1 TYPE=NUMERIC
	DECLARE VAR=$COUNS2 TYPE=NUMERIC
	DECLARE VAR=$COUNSA1 TYPE=NUMERIC
	DECLARE VAR=$COUNSA2 TYPE=NUMERIC
	DECLARE VAR=$COUNTER TYPE=NUMERIC
	DECLARE VAR=$COUNTRYLIST TYPE=STRING
	DECLARE VAR=$COUNTTEMP TYPE=STRING
	DECLARE VAR=$CURRENTDAY TYPE=NUMERIC
	DECLARE VAR=$CURRENTDAYSTR TYPE=STRING
	DECLARE VAR=$CURRENTDIFFICULTY TYPE=NUMERIC
	DECLARE VAR=$CURRENTMONTH TYPE=NUMERIC
	DECLARE VAR=$CURRENTMONTHSTR TYPE=STRING
	DECLARE VAR=$CURRENTTERRAIN TYPE=NUMERIC
	DECLARE VAR=$DATA TYPE=STRING
	DECLARE VAR=$DATAEND TYPE=NUMERIC
	DECLARE VAR=$DATAICON  TYPE=STRING
	DECLARE VAR=$DATAICONMAX TYPE=NUMERIC
	DECLARE VAR=$DATALENGTH TYPE=NUMERIC
	DECLARE VAR=$DATALINE1 TYPE=STRING
	DECLARE VAR=$DATALINE2 TYPE=STRING
	DECLARE VAR=$DATALINE3 TYPE=STRING
	DECLARE VAR=$DATALINEA  TYPE=STRING
	DECLARE VAR=$DATALINEB  TYPE=STRING
	DECLARE VAR=$DATALINED  TYPE=STRING
	DECLARE VAR=$DATALINEE  TYPE=STRING
	DECLARE VAR=$DATALINEG  TYPE=STRING
	DECLARE VAR=$DATALINEHAVE  TYPE=STRING
	DECLARE VAR=$DATALINEHEADER  TYPE=STRING
	DECLARE VAR=$DATALINEHTMLA  TYPE=STRING
	DECLARE VAR=$DATALINEHTMLB  TYPE=STRING
	DECLARE VAR=$DATALINEHTMLD  TYPE=STRING
	DECLARE VAR=$DATALINEHTMLE  TYPE=STRING
	DECLARE VAR=$DATALINEHTMLG  TYPE=STRING
	DECLARE VAR=$DATALINEHTMLP  TYPE=STRING
	DECLARE VAR=$DATALINEHTMLR  TYPE=STRING
	DECLARE VAR=$DATALINEHTMLS  TYPE=STRING
	DECLARE VAR=$DATALINEMAX  TYPE=NUMERIC
	DECLARE VAR=$DATALINENEED  TYPE=STRING
	DECLARE VAR=$DATALINEP  TYPE=STRING
	DECLARE VAR=$DATALINER  TYPE=STRING
	DECLARE VAR=$DATALINES  TYPE=STRING
	DECLARE VAR=$DATALINETEMP  TYPE=STRING
	DECLARE VAR=$DATANUMBER1 TYPE=NUMERIC
	DECLARE VAR=$DATASTART TYPE=NUMERIC
	DECLARE VAR=$DATASUBMITURL TYPE=STRING
	DECLARE VAR=$DAYCOUNT TYPE=NUMERIC
	DECLARE VAR=$DELAY TYPE=NUMERIC
	DECLARE VAR=$DELAYRUN TYPE=BOOLEAN
	DECLARE VAR=$DIST TYPE=NUMERIC
	DECLARE VAR=$DISTALT TYPE=STRING
	DECLARE VAR=$DISTB1 TYPE=NUMERIC
	DECLARE VAR=$DISTB2 TYPE=NUMERIC
	DECLARE VAR=$DISTCODE TYPE=STRING
	DECLARE VAR=$DISTCODEALT TYPE=STRING
	DECLARE VAR=$DISTD TYPE=NUMERIC
	DECLARE VAR=$DISTE1 TYPE=NUMERIC
	DECLARE VAR=$DISTE2 TYPE=NUMERIC
	DECLARE VAR=$DISTG1 TYPE=NUMERIC
	DECLARE VAR=$DISTG2 TYPE=NUMERIC
	DECLARE VAR=$DISTHTML TYPE=STRING
	DECLARE VAR=$DISTLIMIT TYPE=NUMERIC
	DECLARE VAR=$DISTNAME TYPE=STRING
	DECLARE VAR=$DISTP1 TYPE=NUMERIC
	DECLARE VAR=$DISTP2 TYPE=NUMERIC
	DECLARE VAR=$DISTR1 TYPE=NUMERIC
	DECLARE VAR=$DISTR2 TYPE=NUMERIC
	DECLARE VAR=$DISTS1 TYPE=NUMERIC
	DECLARE VAR=$DISTS2 TYPE=NUMERIC
	DECLARE VAR=$DISTSA1 TYPE=NUMERIC
	DECLARE VAR=$DISTSA2 TYPE=NUMERIC
	DECLARE VAR=$EART TYPE=NUMERIC
	DECLARE VAR=$EARTALT TYPE=STRING
	DECLARE VAR=$EARTB1 TYPE=NUMERIC
	DECLARE VAR=$EARTB2 TYPE=NUMERIC
	DECLARE VAR=$EARTCODE TYPE=STRING
	DECLARE VAR=$EARTCODEALT TYPE=STRING
	DECLARE VAR=$EARTD TYPE=NUMERIC
	DECLARE VAR=$EARTE1 TYPE=NUMERIC
	DECLARE VAR=$EARTE2 TYPE=NUMERIC
	DECLARE VAR=$EARTG1 TYPE=NUMERIC
	DECLARE VAR=$EARTG2 TYPE=NUMERIC
	DECLARE VAR=$EARTHTML TYPE=STRING
	DECLARE VAR=$EARTLEFT TYPE=NUMERIC
	DECLARE VAR=$EARTLIMIT TYPE=NUMERIC
	DECLARE VAR=$EARTNAME TYPE=STRING
	DECLARE VAR=$EARTP1 TYPE=NUMERIC
	DECLARE VAR=$EARTP2 TYPE=NUMERIC
	DECLARE VAR=$EARTR1 TYPE=NUMERIC
	DECLARE VAR=$EARTR2 TYPE=NUMERIC
	DECLARE VAR=$EARTS1 TYPE=NUMERIC
	DECLARE VAR=$EARTS2 TYPE=NUMERIC
	DECLARE VAR=$EARTSA1 TYPE=NUMERIC
	DECLARE VAR=$EARTSA2 TYPE=NUMERIC
	DECLARE VAR=$ELEV TYPE=NUMERIC
	DECLARE VAR=$ELEVALT TYPE=STRING
	DECLARE VAR=$ELEVB1 TYPE=NUMERIC
	DECLARE VAR=$ELEVB2 TYPE=NUMERIC
	DECLARE VAR=$ELEVCODE TYPE=STRING
	DECLARE VAR=$ELEVCODEALT TYPE=STRING
	DECLARE VAR=$ELEVD TYPE=NUMERIC
	DECLARE VAR=$ELEVE1 TYPE=NUMERIC
	DECLARE VAR=$ELEVE2 TYPE=NUMERIC
	DECLARE VAR=$ELEVG1 TYPE=NUMERIC
	DECLARE VAR=$ELEVG2 TYPE=NUMERIC
	DECLARE VAR=$ELEVHTML TYPE=STRING
	DECLARE VAR=$ELEVLEFT TYPE=NUMERIC
	DECLARE VAR=$ELEVLIMIT TYPE=NUMERIC
	DECLARE VAR=$ELEVNAME TYPE=STRING
	DECLARE VAR=$ELEVP1 TYPE=NUMERIC
	DECLARE VAR=$ELEVP2 TYPE=NUMERIC
	DECLARE VAR=$ELEVR1 TYPE=NUMERIC
	DECLARE VAR=$ELEVR2 TYPE=NUMERIC
	DECLARE VAR=$ELEVS1 TYPE=NUMERIC
	DECLARE VAR=$ELEVS2 TYPE=NUMERIC
	DECLARE VAR=$ELEVSA1 TYPE=NUMERIC
	DECLARE VAR=$ELEVSA2 TYPE=NUMERIC
	DECLARE VAR=$ENDCENTRE TYPE=STRING
	DECLARE VAR=$ENTRY TYPE=STRING
	DECLARE VAR=$ETEMP TYPE=NUMERIC
	DECLARE VAR=$EVEN TYPE=NUMERIC
	DECLARE VAR=$EVENALT TYPE=STRING
	DECLARE VAR=$EVENB1 TYPE=NUMERIC
	DECLARE VAR=$EVENB2 TYPE=NUMERIC
	DECLARE VAR=$EVENCODE TYPE=STRING
	DECLARE VAR=$EVENCODEALT TYPE=STRING
	DECLARE VAR=$EVEND TYPE=NUMERIC
	DECLARE VAR=$EVENE1 TYPE=NUMERIC
	DECLARE VAR=$EVENE2 TYPE=NUMERIC
	DECLARE VAR=$EVENG1 TYPE=NUMERIC
	DECLARE VAR=$EVENG2 TYPE=NUMERIC
	DECLARE VAR=$EVENHTML TYPE=STRING
	DECLARE VAR=$EVENLEFT TYPE=NUMERIC
	DECLARE VAR=$EVENLIMIT TYPE=NUMERIC
	DECLARE VAR=$EVENNAME TYPE=STRING
	DECLARE VAR=$EVENP1 TYPE=NUMERIC
	DECLARE VAR=$EVENP2 TYPE=NUMERIC
	DECLARE VAR=$EVENR1 TYPE=NUMERIC
	DECLARE VAR=$EVENR2 TYPE=NUMERIC
	DECLARE VAR=$EVENS1 TYPE=NUMERIC
	DECLARE VAR=$EVENS2 TYPE=NUMERIC
	DECLARE VAR=$EVENSA1 TYPE=NUMERIC
	DECLARE VAR=$EVENSA2 TYPE=NUMERIC
	DECLARE VAR=$FINDEND TYPE=DATE
	DECLARE VAR=$FINDSTART TYPE=DATE
	DECLARE VAR=$FIRSTDATE TYPE=DATE
	DECLARE VAR=$FIRSTLINE TYPE=STRING
	DECLARE VAR=$FIRSTLINE1 TYPE=STRING
	DECLARE VAR=$FIRSTLINE2 TYPE=STRING
	DECLARE VAR=$FIVE TYPE=NUMERIC
	DECLARE VAR=$FIVEALT TYPE=STRING
	DECLARE VAR=$FIVEB1 TYPE=NUMERIC
	DECLARE VAR=$FIVEB2 TYPE=NUMERIC
	DECLARE VAR=$FIVECODE TYPE=STRING
	DECLARE VAR=$FIVECODEALT TYPE=STRING
	DECLARE VAR=$FIVED TYPE=NUMERIC
	DECLARE VAR=$FIVEE1 TYPE=NUMERIC
	DECLARE VAR=$FIVEE2 TYPE=NUMERIC
	DECLARE VAR=$FIVEG1 TYPE=NUMERIC
	DECLARE VAR=$FIVEG2 TYPE=NUMERIC
	DECLARE VAR=$FIVEHTML TYPE=STRING
	DECLARE VAR=$FIVELEFT TYPE=NUMERIC
	DECLARE VAR=$FIVELIMIT TYPE=NUMERIC
	DECLARE VAR=$FIVENAME TYPE=STRING
	DECLARE VAR=$FIVEP1 TYPE=NUMERIC
	DECLARE VAR=$FIVEP2 TYPE=NUMERIC
	DECLARE VAR=$FIVER1 TYPE=NUMERIC
	DECLARE VAR=$FIVER2 TYPE=NUMERIC
	DECLARE VAR=$FIVES1 TYPE=NUMERIC
	DECLARE VAR=$FIVES2 TYPE=NUMERIC
	DECLARE VAR=$FIVESA1 TYPE=NUMERIC
	DECLARE VAR=$FIVESA2 TYPE=NUMERIC
	DECLARE VAR=$FTF TYPE=NUMERIC
	DECLARE VAR=$FTFALT TYPE=STRING
	DECLARE VAR=$FTFB1 TYPE=NUMERIC
	DECLARE VAR=$FTFB2 TYPE=NUMERIC
	DECLARE VAR=$FTFCODE TYPE=STRING
	DECLARE VAR=$FTFCODEALT TYPE=STRING
	DECLARE VAR=$FTFD TYPE=NUMERIC
	DECLARE VAR=$FTFE1 TYPE=NUMERIC
	DECLARE VAR=$FTFE2 TYPE=NUMERIC
	DECLARE VAR=$FTFG1 TYPE=NUMERIC
	DECLARE VAR=$FTFG2 TYPE=NUMERIC
	DECLARE VAR=$FTFHTML TYPE=STRING
	DECLARE VAR=$FTFLEFT TYPE=NUMERIC
	DECLARE VAR=$FTFLIMIT TYPE=NUMERIC
	DECLARE VAR=$FTFNAME TYPE=STRING
	DECLARE VAR=$FTFP1 TYPE=NUMERIC
	DECLARE VAR=$FTFP2 TYPE=NUMERIC
	DECLARE VAR=$FTFR1 TYPE=NUMERIC
	DECLARE VAR=$FTFR2 TYPE=NUMERIC
	DECLARE VAR=$FTFS1 TYPE=NUMERIC
	DECLARE VAR=$FTFS2 TYPE=NUMERIC
	DECLARE VAR=$FTFSA1 TYPE=NUMERIC
	DECLARE VAR=$FTFSA2 TYPE=NUMERIC
	DECLARE VAR=$GEOC TYPE=NUMERIC
	DECLARE VAR=$GEOCALT TYPE=STRING
	DECLARE VAR=$GEOCB1 TYPE=NUMERIC
	DECLARE VAR=$GEOCB2 TYPE=NUMERIC
	DECLARE VAR=$GEOCCODE TYPE=STRING
	DECLARE VAR=$GEOCCODEALT TYPE=STRING
	DECLARE VAR=$GEOCD TYPE=NUMERIC
	DECLARE VAR=$GEOCE1 TYPE=NUMERIC
	DECLARE VAR=$GEOCE2 TYPE=NUMERIC
	DECLARE VAR=$GEOCG1 TYPE=NUMERIC
	DECLARE VAR=$GEOCG2 TYPE=NUMERIC
	DECLARE VAR=$GEOCHTML TYPE=STRING
	DECLARE VAR=$GEOCLEFT TYPE=NUMERIC
	DECLARE VAR=$GEOCLIMIT TYPE=NUMERIC
	DECLARE VAR=$GEOCNAME TYPE=STRING
	DECLARE VAR=$GEOCP1 TYPE=NUMERIC
	DECLARE VAR=$GEOCP2 TYPE=NUMERIC
	DECLARE VAR=$GEOCR1 TYPE=NUMERIC
	DECLARE VAR=$GEOCR2 TYPE=NUMERIC
	DECLARE VAR=$GEOCS1 TYPE=NUMERIC
	DECLARE VAR=$GEOCS2 TYPE=NUMERIC
	DECLARE VAR=$GEOCSA1 TYPE=NUMERIC
	DECLARE VAR=$GEOCSA2 TYPE=NUMERIC
	DECLARE VAR=$GET TYPE=NUMERIC
	DECLARE VAR=$HASRUN TYPE=BOOLEAN
	DECLARE VAR=$HIDD TYPE=NUMERIC
	DECLARE VAR=$HIDD1 TYPE=STRING
	DECLARE VAR=$HIDDALT TYPE=STRING
	DECLARE VAR=$HIDDB1 TYPE=NUMERIC
	DECLARE VAR=$HIDDB2 TYPE=NUMERIC
	DECLARE VAR=$HIDDCODE TYPE=STRING
	DECLARE VAR=$HIDDCODEALT TYPE=STRING
	DECLARE VAR=$HIDDD TYPE=NUMERIC
	DECLARE VAR=$HIDDE1 TYPE=NUMERIC
	DECLARE VAR=$HIDDE2 TYPE=NUMERIC
	DECLARE VAR=$HIDDG1 TYPE=NUMERIC
	DECLARE VAR=$HIDDG2 TYPE=NUMERIC
	DECLARE VAR=$HIDDHTML TYPE=STRING
	DECLARE VAR=$HIDDLEFT TYPE=NUMERIC
	DECLARE VAR=$HIDDLIMIT TYPE=NUMERIC
	DECLARE VAR=$HIDDNAME TYPE=STRING
	DECLARE VAR=$HIDDP1 TYPE=NUMERIC
	DECLARE VAR=$HIDDP2 TYPE=NUMERIC
	DECLARE VAR=$HIDDR1 TYPE=NUMERIC
	DECLARE VAR=$HIDDR2 TYPE=NUMERIC
	DECLARE VAR=$HIDDS1 TYPE=NUMERIC
	DECLARE VAR=$HIDDS2 TYPE=NUMERIC
	DECLARE VAR=$HIDDSA1 TYPE=NUMERIC
	DECLARE VAR=$HIDDSA2 TYPE=NUMERIC
	DECLARE VAR=$HIDDTYPES  TYPE=NUMERIC
	DECLARE VAR=$HOMECOORDS TYPE=STRING
	DECLARE VAR=$HOST TYPE=NUMERIC
	DECLARE VAR=$HOSTALT TYPE=STRING
	DECLARE VAR=$HOSTB1 TYPE=NUMERIC
	DECLARE VAR=$HOSTB2 TYPE=NUMERIC
	DECLARE VAR=$HOSTCODE TYPE=STRING
	DECLARE VAR=$HOSTCODEALT TYPE=STRING
	DECLARE VAR=$HOSTD TYPE=NUMERIC
	DECLARE VAR=$HOSTE1 TYPE=NUMERIC
	DECLARE VAR=$HOSTE2 TYPE=NUMERIC
	DECLARE VAR=$HOSTG1 TYPE=NUMERIC
	DECLARE VAR=$HOSTG2 TYPE=NUMERIC
	DECLARE VAR=$HOSTHTML TYPE=STRING
	DECLARE VAR=$HOSTLEFT TYPE=NUMERIC
	DECLARE VAR=$HOSTLIMIT TYPE=NUMERIC
	DECLARE VAR=$HOSTNAME TYPE=STRING
	DECLARE VAR=$HOSTP1 TYPE=NUMERIC
	DECLARE VAR=$HOSTP2 TYPE=NUMERIC
	DECLARE VAR=$HOSTR1 TYPE=NUMERIC
	DECLARE VAR=$HOSTR2 TYPE=NUMERIC
	DECLARE VAR=$HOSTS1 TYPE=NUMERIC
	DECLARE VAR=$HOSTS2 TYPE=NUMERIC
	DECLARE VAR=$HOSTSA1 TYPE=NUMERIC
	DECLARE VAR=$HOSTSA2 TYPE=NUMERIC
	DECLARE VAR=$HOTLINKURL TYPE=STRING
	DECLARE VAR=$HOVEREXPLAINATION TYPE=STRING
	DECLARE VAR=$INCREMENT TYPE=NUMERIC
	DECLARE VAR=$KM TYPE=STRING
	DECLARE VAR=$LARG TYPE=NUMERIC
	DECLARE VAR=$LARGALT TYPE=STRING
	DECLARE VAR=$LARGB1 TYPE=NUMERIC
	DECLARE VAR=$LARGB2 TYPE=NUMERIC
	DECLARE VAR=$LARGCODE TYPE=STRING
	DECLARE VAR=$LARGCODEALT TYPE=STRING
	DECLARE VAR=$LARGD TYPE=NUMERIC
	DECLARE VAR=$LARGE1 TYPE=NUMERIC
	DECLARE VAR=$LARGE2 TYPE=NUMERIC
	DECLARE VAR=$LARGG1 TYPE=NUMERIC
	DECLARE VAR=$LARGG2 TYPE=NUMERIC
	DECLARE VAR=$LARGHTML TYPE=STRING
	DECLARE VAR=$LARGLEFT TYPE=NUMERIC
	DECLARE VAR=$LARGLIMIT TYPE=NUMERIC
	DECLARE VAR=$LARGNAME TYPE=STRING
	DECLARE VAR=$LARGP1 TYPE=NUMERIC
	DECLARE VAR=$LARGP2 TYPE=NUMERIC
	DECLARE VAR=$LARGR1 TYPE=NUMERIC
	DECLARE VAR=$LARGR2 TYPE=NUMERIC
	DECLARE VAR=$LARGS1 TYPE=NUMERIC
	DECLARE VAR=$LARGS2 TYPE=NUMERIC
	DECLARE VAR=$LARGSA1 TYPE=NUMERIC
	DECLARE VAR=$LARGSA2 TYPE=NUMERIC
	DECLARE VAR=$LASTFINDDATE TYPE=DATE
	DECLARE VAR=$LEN TYPE=NUMERIC
	DECLARE VAR=$LETT TYPE=NUMERIC
	DECLARE VAR=$LETTALT TYPE=STRING
	DECLARE VAR=$LETTB1 TYPE=NUMERIC
	DECLARE VAR=$LETTB2 TYPE=NUMERIC
	DECLARE VAR=$LETTCODE TYPE=STRING
	DECLARE VAR=$LETTCODEALT TYPE=STRING
	DECLARE VAR=$LETTD TYPE=NUMERIC
	DECLARE VAR=$LETTE1 TYPE=NUMERIC
	DECLARE VAR=$LETTE2 TYPE=NUMERIC
	DECLARE VAR=$LETTG1 TYPE=NUMERIC
	DECLARE VAR=$LETTG2 TYPE=NUMERIC
	DECLARE VAR=$LETTHTML TYPE=STRING
	DECLARE VAR=$LETTLEFT TYPE=NUMERIC
	DECLARE VAR=$LETTLIMIT TYPE=NUMERIC
	DECLARE VAR=$LETTNAME TYPE=STRING
	DECLARE VAR=$LETTP1 TYPE=NUMERIC
	DECLARE VAR=$LETTP2 TYPE=NUMERIC
	DECLARE VAR=$LETTR1 TYPE=NUMERIC
	DECLARE VAR=$LETTR2 TYPE=NUMERIC
	DECLARE VAR=$LETTS1 TYPE=NUMERIC
	DECLARE VAR=$LETTS2 TYPE=NUMERIC
	DECLARE VAR=$LETTSA1 TYPE=NUMERIC
	DECLARE VAR=$LETTSA2 TYPE=NUMERIC
	DECLARE VAR=$LIMITSUMMARY TYPE=STRING
	DECLARE VAR=$LINK TYPE=STRING
	DECLARE VAR=$LIST TYPE=STRING
	DECLARE VAR=$LOWE TYPE=NUMERIC
	DECLARE VAR=$LOWEALT TYPE=STRING
	DECLARE VAR=$LOWEB1 TYPE=NUMERIC
	DECLARE VAR=$LOWEB2 TYPE=NUMERIC
	DECLARE VAR=$LOWECODE TYPE=STRING
	DECLARE VAR=$LOWECODEALT TYPE=STRING
	DECLARE VAR=$LOWED TYPE=NUMERIC
	DECLARE VAR=$LOWEE1 TYPE=NUMERIC
	DECLARE VAR=$LOWEE2 TYPE=NUMERIC
	DECLARE VAR=$LOWEG1 TYPE=NUMERIC
	DECLARE VAR=$LOWEG2 TYPE=NUMERIC
	DECLARE VAR=$LOWEHTML TYPE=STRING
	DECLARE VAR=$LOWELEFT TYPE=NUMERIC
	DECLARE VAR=$LOWELIMIT TYPE=NUMERIC
	DECLARE VAR=$LOWENAME TYPE=STRING
	DECLARE VAR=$LOWEP1 TYPE=NUMERIC
	DECLARE VAR=$LOWEP2 TYPE=NUMERIC
	DECLARE VAR=$LOWER1 TYPE=NUMERIC
	DECLARE VAR=$LOWER2 TYPE=NUMERIC
	DECLARE VAR=$LOWES1 TYPE=NUMERIC
	DECLARE VAR=$LOWES2 TYPE=NUMERIC
	DECLARE VAR=$LOWESA1 TYPE=NUMERIC
	DECLARE VAR=$LOWESA2 TYPE=NUMERIC
	DECLARE VAR=$MACROPATH TYPE=STRING
	DECLARE VAR=$MACURL TYPE=STRING
	DECLARE VAR=$MATR TYPE=NUMERIC
	DECLARE VAR=$MATRALT TYPE=STRING
	DECLARE VAR=$MATRB1 TYPE=NUMERIC
	DECLARE VAR=$MATRB2 TYPE=NUMERIC
	DECLARE VAR=$MATRCODE TYPE=STRING
	DECLARE VAR=$MATRCODEALT TYPE=STRING
	DECLARE VAR=$MATRD TYPE=NUMERIC
	DECLARE VAR=$MATRE1 TYPE=NUMERIC
	DECLARE VAR=$MATRE2 TYPE=NUMERIC
	DECLARE VAR=$MATRG1 TYPE=NUMERIC
	DECLARE VAR=$MATRG2 TYPE=NUMERIC
	DECLARE VAR=$MATRHTML TYPE=STRING
	DECLARE VAR=$MATRIXCOUNT TYPE=NUMERIC
	DECLARE VAR=$MATRLEFT TYPE=NUMERIC
	DECLARE VAR=$MATRLIMIT TYPE=NUMERIC
	DECLARE VAR=$MATRNAME TYPE=STRING
	DECLARE VAR=$MATRP1 TYPE=NUMERIC
	DECLARE VAR=$MATRP2 TYPE=NUMERIC
	DECLARE VAR=$MATRR1 TYPE=NUMERIC
	DECLARE VAR=$MATRR2 TYPE=NUMERIC
	DECLARE VAR=$MATRS1 TYPE=NUMERIC
	DECLARE VAR=$MATRS2 TYPE=NUMERIC
	DECLARE VAR=$MATRSA1 TYPE=NUMERIC
	DECLARE VAR=$MATRSA2 TYPE=NUMERIC
	DECLARE VAR=$MAXCOUNTRY TYPE=STRING
	DECLARE VAR=$MAXELEVATIONCACHE TYPE=STRING
	DECLARE VAR=$MAXSTATES TYPE=NUMERIC
	DECLARE VAR=$MEGA TYPE=NUMERIC
	DECLARE VAR=$MEGAALT TYPE=STRING
	DECLARE VAR=$MEGAB1 TYPE=NUMERIC
	DECLARE VAR=$MEGAB2 TYPE=NUMERIC
	DECLARE VAR=$MEGACODE TYPE=STRING
	DECLARE VAR=$MEGACODEALT TYPE=STRING
	DECLARE VAR=$MEGAD TYPE=NUMERIC
	DECLARE VAR=$MEGAE1 TYPE=NUMERIC
	DECLARE VAR=$MEGAE2 TYPE=NUMERIC
	DECLARE VAR=$MEGAG1 TYPE=NUMERIC
	DECLARE VAR=$MEGAG2 TYPE=NUMERIC
	DECLARE VAR=$MEGAHTML TYPE=STRING
	DECLARE VAR=$MEGALEFT TYPE=NUMERIC
	DECLARE VAR=$MEGALIMIT TYPE=NUMERIC
	DECLARE VAR=$MEGANAME TYPE=STRING
	DECLARE VAR=$MEGAP1 TYPE=NUMERIC
	DECLARE VAR=$MEGAP2 TYPE=NUMERIC
	DECLARE VAR=$MEGAR1 TYPE=NUMERIC
	DECLARE VAR=$MEGAR2 TYPE=NUMERIC
	DECLARE VAR=$MEGAS1 TYPE=NUMERIC
	DECLARE VAR=$MEGAS2 TYPE=NUMERIC
	DECLARE VAR=$MEGASA1 TYPE=NUMERIC
	DECLARE VAR=$MEGASA2 TYPE=NUMERIC
	DECLARE VAR=$MICR TYPE=NUMERIC
	DECLARE VAR=$MICRALT TYPE=STRING
	DECLARE VAR=$MICRB1 TYPE=NUMERIC
	DECLARE VAR=$MICRB2 TYPE=NUMERIC
	DECLARE VAR=$MICRCODE TYPE=STRING
	DECLARE VAR=$MICRCODEALT TYPE=STRING
	DECLARE VAR=$MICRD TYPE=NUMERIC
	DECLARE VAR=$MICRE1 TYPE=NUMERIC
	DECLARE VAR=$MICRE2 TYPE=NUMERIC
	DECLARE VAR=$MICRG1 TYPE=NUMERIC
	DECLARE VAR=$MICRG2 TYPE=NUMERIC
	DECLARE VAR=$MICRHTML TYPE=STRING
	DECLARE VAR=$MICRLEFT TYPE=NUMERIC
	DECLARE VAR=$MICRLIMIT TYPE=NUMERIC
	DECLARE VAR=$MICRNAME TYPE=STRING
	DECLARE VAR=$MICRP1 TYPE=NUMERIC
	DECLARE VAR=$MICRP2 TYPE=NUMERIC
	DECLARE VAR=$MICRR1 TYPE=NUMERIC
	DECLARE VAR=$MICRR2 TYPE=NUMERIC
	DECLARE VAR=$MICRS1 TYPE=NUMERIC
	DECLARE VAR=$MICRS2 TYPE=NUMERIC
	DECLARE VAR=$MICRSA1 TYPE=NUMERIC
	DECLARE VAR=$MICRSA2 TYPE=NUMERIC
	DECLARE VAR=$MINELEVATIONCACHE TYPE=STRING
	DECLARE VAR=$MORESTATES TYPE=NUMERIC
	DECLARE VAR=$MOSTINADAY TYPE=NUMERIC
	DECLARE VAR=$MOSTINADAYDATE TYPE=DATE
	DECLARE VAR=$MOSTRECENTFIND TYPE=DATE
	DECLARE VAR=$MSG TYPE=STRING
	DECLARE VAR=$MULT TYPE=NUMERIC
	DECLARE VAR=$MULTALT TYPE=STRING
	DECLARE VAR=$MULTB1 TYPE=NUMERIC
	DECLARE VAR=$MULTB2 TYPE=NUMERIC
	DECLARE VAR=$MULTCODE TYPE=STRING
	DECLARE VAR=$MULTCODEALT TYPE=STRING
	DECLARE VAR=$MULTD TYPE=NUMERIC
	DECLARE VAR=$MULTE1 TYPE=NUMERIC
	DECLARE VAR=$MULTE2 TYPE=NUMERIC
	DECLARE VAR=$MULTG1 TYPE=NUMERIC
	DECLARE VAR=$MULTG2 TYPE=NUMERIC
	DECLARE VAR=$MULTHTML TYPE=STRING
	DECLARE VAR=$MULTLEFT TYPE=NUMERIC
	DECLARE VAR=$MULTLIMIT TYPE=NUMERIC
	DECLARE VAR=$MULTNAME TYPE=STRING
	DECLARE VAR=$MULTP1 TYPE=NUMERIC
	DECLARE VAR=$MULTP2 TYPE=NUMERIC
	DECLARE VAR=$MULTR1 TYPE=NUMERIC
	DECLARE VAR=$MULTR2 TYPE=NUMERIC
	DECLARE VAR=$MULTS1 TYPE=NUMERIC
	DECLARE VAR=$MULTS2 TYPE=NUMERIC
	DECLARE VAR=$MULTSA1 TYPE=NUMERIC
	DECLARE VAR=$MULTSA2 TYPE=NUMERIC
	DECLARE VAR=$MYST TYPE=NUMERIC
	DECLARE VAR=$MYSTALT TYPE=STRING
	DECLARE VAR=$MYSTB1 TYPE=NUMERIC
	DECLARE VAR=$MYSTB2 TYPE=NUMERIC
	DECLARE VAR=$MYSTCODE TYPE=STRING
	DECLARE VAR=$MYSTCODEALT TYPE=STRING
	DECLARE VAR=$MYSTD TYPE=NUMERIC
	DECLARE VAR=$MYSTE1 TYPE=NUMERIC
	DECLARE VAR=$MYSTE2 TYPE=NUMERIC
	DECLARE VAR=$MYSTG1 TYPE=NUMERIC
	DECLARE VAR=$MYSTG2 TYPE=NUMERIC
	DECLARE VAR=$MYSTHTML TYPE=STRING
	DECLARE VAR=$MYSTLEFT TYPE=NUMERIC
	DECLARE VAR=$MYSTLIMIT TYPE=NUMERIC
	DECLARE VAR=$MYSTNAME TYPE=STRING
	DECLARE VAR=$MYSTP1 TYPE=NUMERIC
	DECLARE VAR=$MYSTP2 TYPE=NUMERIC
	DECLARE VAR=$MYSTR1 TYPE=NUMERIC
	DECLARE VAR=$MYSTR2 TYPE=NUMERIC
	DECLARE VAR=$MYSTS1 TYPE=NUMERIC
	DECLARE VAR=$MYSTS2 TYPE=NUMERIC
	DECLARE VAR=$MYSTSA1 TYPE=NUMERIC
	DECLARE VAR=$MYSTSA2 TYPE=NUMERIC
	DECLARE VAR=$NEWDATA TYPE=STRING
	DECLARE VAR=$NEWLINE TYPE=STRING
	DECLARE VAR=$NEXTLEVEL TYPE=STRING
	DECLARE VAR=$NOFINDEND TYPE=DATE
	DECLARE VAR=$NOFINDSTART TYPE=DATE
	DECLARE VAR=$NOTESSECTION TYPE=STRING
	DECLARE VAR=$NOTESSETTINGS  TYPE=STRING
	DECLARE VAR=$NOSTATEBADGE TYPE=BOOLEAN
	DECLARE VAR=$NUM  TYPE=NUMERIC
	DECLARE VAR=$NUM TYPE=NUMERIC
	DECLARE VAR=$NUMBER TYPE=NUMERIC
	DECLARE VAR=$NUMBER1  TYPE=NUMERIC
	DECLARE VAR=$NUMBER2  TYPE=NUMERIC
	DECLARE VAR=$NUMCONTAINERGOLDS TYPE=NUMERIC
	DECLARE VAR=$NUMSTATES TYPE=NUMERIC
	DECLARE VAR=$PERCENT TYPE=NUMERIC
	DECLARE VAR=$PERCENTSTATE TYPE=NUMERIC
	DECLARE VAR=$POSITION TYPE=NUMERIC
	DECLARE VAR=$QUERY TYPE=STRING
	DECLARE VAR=$RANDOMVARR TYPE=NUMERIC
	DECLARE VAR=$RECORD TYPE=NUMERIC
	DECLARE VAR=$REGU TYPE=NUMERIC
	DECLARE VAR=$REGUALT TYPE=STRING
	DECLARE VAR=$REGUB1 TYPE=NUMERIC
	DECLARE VAR=$REGUB2 TYPE=NUMERIC
	DECLARE VAR=$REGUCODE TYPE=STRING
	DECLARE VAR=$REGUCODEALT TYPE=STRING
	DECLARE VAR=$REGUD TYPE=NUMERIC
	DECLARE VAR=$REGUE1 TYPE=NUMERIC
	DECLARE VAR=$REGUE2 TYPE=NUMERIC
	DECLARE VAR=$REGUG1 TYPE=NUMERIC
	DECLARE VAR=$REGUG2 TYPE=NUMERIC
	DECLARE VAR=$REGUHTML TYPE=STRING
	DECLARE VAR=$REGULEFT TYPE=NUMERIC
	DECLARE VAR=$REGULIMIT TYPE=NUMERIC
	DECLARE VAR=$REGUNAME TYPE=STRING
	DECLARE VAR=$REGUP1 TYPE=NUMERIC
	DECLARE VAR=$REGUP2 TYPE=NUMERIC
	DECLARE VAR=$REGUR1 TYPE=NUMERIC
	DECLARE VAR=$REGUR2 TYPE=NUMERIC
	DECLARE VAR=$REGUS1 TYPE=NUMERIC
	DECLARE VAR=$REGUS2 TYPE=NUMERIC
	DECLARE VAR=$REGUSA1 TYPE=NUMERIC
	DECLARE VAR=$REGUSA2 TYPE=NUMERIC
	DECLARE VAR=$REMOVEVARIABLES TYPE=BOOLEAN
	DECLARE VAR=$RUNTHROUGH TYPE=NUMERIC
	DECLARE VAR=$SAVELOCATION TYPE=STRING
	DECLARE VAR=$SEPARATOR TYPE=STRING
	DECLARE VAR=$SHOWOTHER  TYPE=BOOLEAN
	DECLARE VAR=$SKIPSTATEBADGE TYPE=BOOLEAN
	DECLARE VAR=$SMAL TYPE=NUMERIC
	DECLARE VAR=$SMALALT TYPE=STRING
	DECLARE VAR=$SMALB1 TYPE=NUMERIC
	DECLARE VAR=$SMALB2 TYPE=NUMERIC
	DECLARE VAR=$SMALCODE TYPE=STRING
	DECLARE VAR=$SMALCODEALT TYPE=STRING
	DECLARE VAR=$SMALD TYPE=NUMERIC
	DECLARE VAR=$SMALE1 TYPE=NUMERIC
	DECLARE VAR=$SMALE2 TYPE=NUMERIC
	DECLARE VAR=$SMALG1 TYPE=NUMERIC
	DECLARE VAR=$SMALG2 TYPE=NUMERIC
	DECLARE VAR=$SMALHTML TYPE=STRING
	DECLARE VAR=$SMALLEFT TYPE=NUMERIC
	DECLARE VAR=$SMALLIMIT TYPE=NUMERIC
	DECLARE VAR=$SMALNAME TYPE=STRING
	DECLARE VAR=$SMALP1 TYPE=NUMERIC
	DECLARE VAR=$SMALP2 TYPE=NUMERIC
	DECLARE VAR=$SMALR1 TYPE=NUMERIC
	DECLARE VAR=$SMALR2 TYPE=NUMERIC
	DECLARE VAR=$SMALS1 TYPE=NUMERIC
	DECLARE VAR=$SMALS2 TYPE=NUMERIC
	DECLARE VAR=$SMALSA1 TYPE=NUMERIC
	DECLARE VAR=$SMALSA2 TYPE=NUMERIC
	DECLARE VAR=$STAT  TYPE=NUMERIC
	DECLARE VAR=$STAT TYPE=NUMERIC
	DECLARE VAR=$STATALT TYPE=STRING
	DECLARE VAR=$STATB1 TYPE=NUMERIC
	DECLARE VAR=$STATB2 TYPE=NUMERIC
	DECLARE VAR=$STATCODE TYPE=STRING
	DECLARE VAR=$STATCODEALT TYPE=STRING
	DECLARE VAR=$STATD TYPE=NUMERIC
	DECLARE VAR=$STATE1 TYPE=NUMERIC
	DECLARE VAR=$STATE2 TYPE=NUMERIC
	DECLARE VAR=$STATG1 TYPE=NUMERIC
	DECLARE VAR=$STATG2 TYPE=NUMERIC
	DECLARE VAR=$STATHTML TYPE=STRING
	DECLARE VAR=$STATLEFT TYPE=NUMERIC
	DECLARE VAR=$STATLIMIT TYPE=NUMERIC
	DECLARE VAR=$STATNAME TYPE=STRING
	DECLARE VAR=$STATP1 TYPE=NUMERIC
	DECLARE VAR=$STATP2 TYPE=NUMERIC
	DECLARE VAR=$STATR1 TYPE=NUMERIC
	DECLARE VAR=$STATR2 TYPE=NUMERIC
	DECLARE VAR=$STATS1 TYPE=NUMERIC
	DECLARE VAR=$STATS2 TYPE=NUMERIC
	DECLARE VAR=$STATSA1 TYPE=NUMERIC
	DECLARE VAR=$STATSA2 TYPE=NUMERIC
	DECLARE VAR=$STATUS TYPE=STRING
	DECLARE VAR=$SUPPLEMENTARY  TYPE=STRING
	DECLARE VAR=$TEMP1 TYPE=STRING
	DECLARE VAR=$TEMP2 TYPE=NUMERIC
	DECLARE VAR=$TEMPSTR TYPE=STRING
	DECLARE VAR=$TEMPSTR2 TYPE=STRING
	DECLARE VAR=$TENY TYPE=NUMERIC
	DECLARE VAR=$TENYALT TYPE=STRING
	DECLARE VAR=$TENYB1 TYPE=NUMERIC
	DECLARE VAR=$TENYB2 TYPE=NUMERIC
	DECLARE VAR=$TENYCODE TYPE=STRING
	DECLARE VAR=$TENYCODEALT TYPE=STRING
	DECLARE VAR=$TENYD TYPE=NUMERIC
	DECLARE VAR=$TENYE1 TYPE=NUMERIC
	DECLARE VAR=$TENYE2 TYPE=NUMERIC
	DECLARE VAR=$TENYG1 TYPE=NUMERIC
	DECLARE VAR=$TENYG2 TYPE=NUMERIC
	DECLARE VAR=$TENYHTML TYPE=STRING
	DECLARE VAR=$TENYLEFT TYPE=NUMERIC
	DECLARE VAR=$TENYLIMIT TYPE=NUMERIC
	DECLARE VAR=$TENYNAME TYPE=STRING
	DECLARE VAR=$TENYP1 TYPE=NUMERIC
	DECLARE VAR=$TENYP2 TYPE=NUMERIC
	DECLARE VAR=$TENYR1 TYPE=NUMERIC
	DECLARE VAR=$TENYR2 TYPE=NUMERIC
	DECLARE VAR=$TENYS1 TYPE=NUMERIC
	DECLARE VAR=$TENYS2 TYPE=NUMERIC
	DECLARE VAR=$TENYSA1 TYPE=NUMERIC
	DECLARE VAR=$TENYSA2 TYPE=NUMERIC
	DECLARE VAR=$THISRECORD TYPE=NUMERIC
	DECLARE VAR=$TIMER  TYPE=NUMERIC
	DECLARE VAR=$TMPMOSTINADAY TYPE=NUMERIC
	DECLARE VAR=$TMPN TYPE=NUMERIC
	DECLARE VAR=$TMPS TYPE=STRING
	DECLARE VAR=$TMPSTART TYPE=DATE
	DECLARE VAR=$TOTALNUMBEROFBADGES TYPE=NUMERIC
	DECLARE VAR=$TOTALSTATEBADGES TYPE=NUMERIC
	DECLARE VAR=$TOTALSTATES TYPE=STRING
	DECLARE VAR=$TRAD TYPE=NUMERIC
	DECLARE VAR=$TRADALT TYPE=STRING
	DECLARE VAR=$TRADB1 TYPE=NUMERIC
	DECLARE VAR=$TRADB2 TYPE=NUMERIC
	DECLARE VAR=$TRADCODE TYPE=STRING
	DECLARE VAR=$TRADCODEALT TYPE=STRING
	DECLARE VAR=$TRADD TYPE=NUMERIC
	DECLARE VAR=$TRADE1 TYPE=NUMERIC
	DECLARE VAR=$TRADE2 TYPE=NUMERIC
	DECLARE VAR=$TRADG1 TYPE=NUMERIC
	DECLARE VAR=$TRADG2 TYPE=NUMERIC
	DECLARE VAR=$TRADHTML TYPE=STRING
	DECLARE VAR=$TRADLEFT TYPE=NUMERIC
	DECLARE VAR=$TRADLIMIT TYPE=NUMERIC
	DECLARE VAR=$TRADNAME TYPE=STRING
	DECLARE VAR=$TRADP1 TYPE=NUMERIC
	DECLARE VAR=$TRADP2 TYPE=NUMERIC
	DECLARE VAR=$TRADR1 TYPE=NUMERIC
	DECLARE VAR=$TRADR2 TYPE=NUMERIC
	DECLARE VAR=$TRADS1 TYPE=NUMERIC
	DECLARE VAR=$TRADS2 TYPE=NUMERIC
	DECLARE VAR=$TRADSA1 TYPE=NUMERIC
	DECLARE VAR=$TRADSA2 TYPE=NUMERIC
	DECLARE VAR=$TRAV TYPE=NUMERIC
	DECLARE VAR=$TRAVALT TYPE=STRING
	DECLARE VAR=$TRAVB1 TYPE=NUMERIC
	DECLARE VAR=$TRAVB2 TYPE=NUMERIC
	DECLARE VAR=$TRAVCODE TYPE=STRING
	DECLARE VAR=$TRAVCODEALT TYPE=STRING
	DECLARE VAR=$TRAVD TYPE=NUMERIC
	DECLARE VAR=$TRAVE1 TYPE=NUMERIC
	DECLARE VAR=$TRAVE2 TYPE=NUMERIC
	DECLARE VAR=$TRAVG1 TYPE=NUMERIC
	DECLARE VAR=$TRAVG2 TYPE=NUMERIC
	DECLARE VAR=$TRAVHTML TYPE=STRING
	DECLARE VAR=$TRAVLEFT TYPE=NUMERIC
	DECLARE VAR=$TRAVLIMIT TYPE=NUMERIC
	DECLARE VAR=$TRAVNAME TYPE=STRING
	DECLARE VAR=$TRAVP1 TYPE=NUMERIC
	DECLARE VAR=$TRAVP2 TYPE=NUMERIC
	DECLARE VAR=$TRAVR1 TYPE=NUMERIC
	DECLARE VAR=$TRAVR2 TYPE=NUMERIC
	DECLARE VAR=$TRAVS1 TYPE=NUMERIC
	DECLARE VAR=$TRAVS2 TYPE=NUMERIC
	DECLARE VAR=$TRAVSA1 TYPE=NUMERIC
	DECLARE VAR=$TRAVSA2 TYPE=NUMERIC
	DECLARE VAR=$TWEN TYPE=NUMERIC
	DECLARE VAR=$TWENALT TYPE=STRING
	DECLARE VAR=$TWENB1 TYPE=NUMERIC
	DECLARE VAR=$TWENB2 TYPE=NUMERIC
	DECLARE VAR=$TWENCODE TYPE=STRING
	DECLARE VAR=$TWENCODEALT TYPE=STRING
	DECLARE VAR=$TWEND TYPE=NUMERIC
	DECLARE VAR=$TWENE1 TYPE=NUMERIC
	DECLARE VAR=$TWENE2 TYPE=NUMERIC
	DECLARE VAR=$TWENG1 TYPE=NUMERIC
	DECLARE VAR=$TWENG2 TYPE=NUMERIC
	DECLARE VAR=$TWENHTML TYPE=STRING
	DECLARE VAR=$TWENLEFT TYPE=NUMERIC
	DECLARE VAR=$TWENLIMIT TYPE=NUMERIC
	DECLARE VAR=$TWENNAME TYPE=STRING
	DECLARE VAR=$TWENP1 TYPE=NUMERIC
	DECLARE VAR=$TWENP2 TYPE=NUMERIC
	DECLARE VAR=$TWENR1 TYPE=NUMERIC
	DECLARE VAR=$TWENR2 TYPE=NUMERIC
	DECLARE VAR=$TWENS1 TYPE=NUMERIC
	DECLARE VAR=$TWENS2 TYPE=NUMERIC
	DECLARE VAR=$TWENSA1 TYPE=NUMERIC
	DECLARE VAR=$TWENSA2 TYPE=NUMERIC
	DECLARE VAR=$UNDE TYPE=NUMERIC
	DECLARE VAR=$UNDEALT TYPE=STRING
	DECLARE VAR=$UNDEB1 TYPE=NUMERIC
	DECLARE VAR=$UNDEB2 TYPE=NUMERIC
	DECLARE VAR=$UNDECODE TYPE=STRING
	DECLARE VAR=$UNDECODEALT TYPE=STRING
	DECLARE VAR=$UNDED TYPE=NUMERIC
	DECLARE VAR=$UNDEE1 TYPE=NUMERIC
	DECLARE VAR=$UNDEE2 TYPE=NUMERIC
	DECLARE VAR=$UNDEG1 TYPE=NUMERIC
	DECLARE VAR=$UNDEG2 TYPE=NUMERIC
	DECLARE VAR=$UNDEHTML TYPE=STRING
	DECLARE VAR=$UNDELEFT TYPE=NUMERIC
	DECLARE VAR=$UNDELIMIT TYPE=NUMERIC
	DECLARE VAR=$UNDENAME TYPE=STRING
	DECLARE VAR=$UNDEP1 TYPE=NUMERIC
	DECLARE VAR=$UNDEP2 TYPE=NUMERIC
	DECLARE VAR=$UNDER1 TYPE=NUMERIC
	DECLARE VAR=$UNDER2 TYPE=NUMERIC
	DECLARE VAR=$UNDES1 TYPE=NUMERIC
	DECLARE VAR=$UNDES2 TYPE=NUMERIC
	DECLARE VAR=$UNDESA1 TYPE=NUMERIC
	DECLARE VAR=$UNDESA2 TYPE=NUMERIC
	DECLARE VAR=$UNDESTRING TYPE=STRING
	DECLARE VAR=$UNITS TYPE=STRING
	DECLARE VAR=$UNITSSHORT TYPE=STRING
	DECLARE VAR=$UNITSSHORTBIG TYPE=STRING
	DECLARE VAR=$URL TYPE=STRING
	DECLARE VAR=$USERID TYPE=STRING
	DECLARE VAR=$VIRT TYPE=NUMERIC
	DECLARE VAR=$VIRTALT TYPE=STRING
	DECLARE VAR=$VIRTB1 TYPE=NUMERIC
	DECLARE VAR=$VIRTB2 TYPE=NUMERIC
	DECLARE VAR=$VIRTCODE TYPE=STRING
	DECLARE VAR=$VIRTCODEALT TYPE=STRING
	DECLARE VAR=$VIRTD TYPE=NUMERIC
	DECLARE VAR=$VIRTE1 TYPE=NUMERIC
	DECLARE VAR=$VIRTE2 TYPE=NUMERIC
	DECLARE VAR=$VIRTG1 TYPE=NUMERIC
	DECLARE VAR=$VIRTG2 TYPE=NUMERIC
	DECLARE VAR=$VIRTHTML TYPE=STRING
	DECLARE VAR=$VIRTLEFT TYPE=NUMERIC
	DECLARE VAR=$VIRTLIMIT TYPE=NUMERIC
	DECLARE VAR=$VIRTNAME TYPE=STRING
	DECLARE VAR=$VIRTP1 TYPE=NUMERIC
	DECLARE VAR=$VIRTP2 TYPE=NUMERIC
	DECLARE VAR=$VIRTR1 TYPE=NUMERIC
	DECLARE VAR=$VIRTR2 TYPE=NUMERIC
	DECLARE VAR=$VIRTS1 TYPE=NUMERIC
	DECLARE VAR=$VIRTS2 TYPE=NUMERIC
	DECLARE VAR=$VIRTSA1 TYPE=NUMERIC
	DECLARE VAR=$VIRTSA2 TYPE=NUMERIC
	DECLARE VAR=$WAYM TYPE=NUMERIC
	DECLARE VAR=$WAYMALT TYPE=STRING
	DECLARE VAR=$WAYMB1 TYPE=NUMERIC
	DECLARE VAR=$WAYMB2 TYPE=NUMERIC
	DECLARE VAR=$WAYMCODE TYPE=STRING
	DECLARE VAR=$WAYMCODEALT TYPE=STRING
	DECLARE VAR=$WAYMD TYPE=NUMERIC
	DECLARE VAR=$WAYME1 TYPE=NUMERIC
	DECLARE VAR=$WAYME2 TYPE=NUMERIC
	DECLARE VAR=$WAYMG1 TYPE=NUMERIC
	DECLARE VAR=$WAYMG2 TYPE=NUMERIC
	DECLARE VAR=$WAYMHTML TYPE=STRING
	DECLARE VAR=$WAYMLEFT TYPE=NUMERIC
	DECLARE VAR=$WAYMLIMIT TYPE=NUMERIC
	DECLARE VAR=$WAYMNAME TYPE=STRING
	DECLARE VAR=$WAYMP1 TYPE=NUMERIC
	DECLARE VAR=$WAYMP2 TYPE=NUMERIC
	DECLARE VAR=$WAYMR1 TYPE=NUMERIC
	DECLARE VAR=$WAYMR2 TYPE=NUMERIC
	DECLARE VAR=$WAYMS1 TYPE=NUMERIC
	DECLARE VAR=$WAYMS2 TYPE=NUMERIC
	DECLARE VAR=$WAYMSA1 TYPE=NUMERIC
	DECLARE VAR=$WAYMSA2 TYPE=NUMERIC
	DECLARE VAR=$WEBC TYPE=NUMERIC
	DECLARE VAR=$WEBCALT TYPE=STRING
	DECLARE VAR=$WEBCB1 TYPE=NUMERIC
	DECLARE VAR=$WEBCB2 TYPE=NUMERIC
	DECLARE VAR=$WEBCCODE TYPE=STRING
	DECLARE VAR=$WEBCCODEALT TYPE=STRING
	DECLARE VAR=$WEBCD TYPE=NUMERIC
	DECLARE VAR=$WEBCE1 TYPE=NUMERIC
	DECLARE VAR=$WEBCE2 TYPE=NUMERIC
	DECLARE VAR=$WEBCG1 TYPE=NUMERIC
	DECLARE VAR=$WEBCG2 TYPE=NUMERIC
	DECLARE VAR=$WEBCHTML TYPE=STRING
	DECLARE VAR=$WEBCLEFT TYPE=NUMERIC
	DECLARE VAR=$WEBCLIMIT TYPE=NUMERIC
	DECLARE VAR=$WEBCNAME TYPE=STRING
	DECLARE VAR=$WEBCP1 TYPE=NUMERIC
	DECLARE VAR=$WEBCP2 TYPE=NUMERIC
	DECLARE VAR=$WEBCR1 TYPE=NUMERIC
	DECLARE VAR=$WEBCR2 TYPE=NUMERIC
	DECLARE VAR=$WEBCS1 TYPE=NUMERIC
	DECLARE VAR=$WEBCS2 TYPE=NUMERIC
	DECLARE VAR=$WEBCSA1 TYPE=NUMERIC
	DECLARE VAR=$WEBCSA2 TYPE=NUMERIC
	DECLARE VAR=$WHER TYPE=NUMERIC
	DECLARE VAR=$WHERALT TYPE=STRING
	DECLARE VAR=$WHERB1 TYPE=NUMERIC
	DECLARE VAR=$WHERB2 TYPE=NUMERIC
	DECLARE VAR=$WHERCODE TYPE=STRING
	DECLARE VAR=$WHERCODEALT TYPE=STRING
	DECLARE VAR=$WHERD TYPE=NUMERIC
	DECLARE VAR=$WHERE1 TYPE=NUMERIC
	DECLARE VAR=$WHERE2 TYPE=NUMERIC
	DECLARE VAR=$WHERG1 TYPE=NUMERIC
	DECLARE VAR=$WHERG2 TYPE=NUMERIC
	DECLARE VAR=$WHERHTML TYPE=STRING
	DECLARE VAR=$WHERLEFT TYPE=NUMERIC
	DECLARE VAR=$WHERLIMIT TYPE=NUMERIC
	DECLARE VAR=$WHERNAME TYPE=STRING
	DECLARE VAR=$WHERP1 TYPE=NUMERIC
	DECLARE VAR=$WHERP2 TYPE=NUMERIC
	DECLARE VAR=$WHERR1 TYPE=NUMERIC
	DECLARE VAR=$WHERR2 TYPE=NUMERIC
	DECLARE VAR=$WHERS1 TYPE=NUMERIC
	DECLARE VAR=$WHERS2 TYPE=NUMERIC
	DECLARE VAR=$WHERSA1 TYPE=NUMERIC
	DECLARE VAR=$WHERSA2 TYPE=NUMERIC
	DECLARE Var=$Writ Type=Numeric
	DECLARE Var=$WritHTML Type=String
	DECLARE Var=$WritNAME Type=String
	DECLARE Var=$WritCODE Type=String
	DECLARE Var=$WritCODEALT Type=String
	DECLARE Var=$WritLEFT Type=Numeric
	DECLARE Var=$WritLIMIT Type=Numeric
	DECLARE Var=$WritALT Type=String
	DECLARE Var=$WritB1 Type=Numeric
	DECLARE Var=$WritB2  Type=Numeric
	DECLARE Var=$WritS1 Type=Numeric
	DECLARE Var=$WritS2  Type=Numeric
	DECLARE Var=$WritG1  Type=Numeric
	DECLARE Var=$WritG2  Type=Numeric
	DECLARE Var=$WritP1  Type=Numeric
	DECLARE Var=$WritP2  Type=Numeric
	DECLARE Var=$WritR1  Type=Numeric
	DECLARE Var=$WritR2  Type=Numeric
	DECLARE Var=$WritSa1  Type=Numeric
	DECLARE Var=$WritSa2  Type=Numeric
	DECLARE Var=$WritE1  Type=Numeric
	DECLARE Var=$WritE2  Type=Numeric
	DECLARE Var=$WritD   Type=Numeric

	DECLARE VAR=$WRITETOFSG TYPE=BOOLEAN

	Option Explicit=Off

	SHOWSTATUS msg="Assigning Values to limits"  top=10 Left=10
##########	$TradLIMIT = (Val(chr(50)) ^ Val(chr(56))) - Val(chr(54))
##########	$MultLIMIT = Val(chr(51)+chr(48)) + Val(chr(53))
##########	$VirtLIMIT = Val(chr(51)+chr(48)) + Val(chr(53))
##########	$MystLIMIT = Val(chr(51)+chr(48)) + Val(chr(53))
##########	$EartLIMIT = (Val(chr(50)) ^ Val(chr(52))) + Val(chr(52))
##########	$LettLIMIT = (Val(chr(50)) ^ Val(chr(52))) + Val(chr(52)) + Val(chr(53))
##########	$WherLIMIT = (Val(chr(50)) ^ Val(chr(52))) + Val(chr(52))
##########	$ApecLIMIT = 0#Not Needed as limits are defined literally
##########	$MegaLIMIT = (Val(chr(57)+chr(57)) - Val(chr(57)+chr(56))) + Val(chr(49))
##########	$EvenLIMIT = ((Val(chr(54)) * Val(chr(54))) - Val(chr(51)+chr(48))) + Val(chr(52))
##########	$CitoLIMIT = (Val(chr(57)+chr(57)) - Val(chr(57)+chr(56))) + Val(chr(49))
##########	$BencLIMIT = ((Val(chr(54)) * Val(chr(54))) - Val(chr(51)+chr(48))) + Val(chr(52))
##########	$WaymLIMIT = 20#?????????????????????????????????????????????????????????????????????????????????????
##########	$MicrLIMIT = (((Val(chr(50)) ^ Val(chr(52))) + Val(chr(52)))) * Val(chr(49)+chr(48)) + Val(chr(53)+chr(48))
##########	$SmalLIMIT = (((Val(chr(50)) ^ Val(chr(52))) + Val(chr(52)))) * Val(chr(49)+chr(48))
##########	$ReguLIMIT = ((((Val(chr(50)) ^ Val(chr(52))) + Val(chr(52)))) * Val(chr(49)+chr(48)) + Val(chr(53)+chr(48))) - Val(chr(49)+chr(48)+chr(48))
##########	$LargLIMIT = Val(chr(53)) * (Val(chr(53)) + Val(chr(53)))
##########	$FiveLIMIT = Val(chr(57)+chr(57)) - Val(chr(57)+chr(56))
##########	$CounLIMIT = (Val(chr(57)+chr(57)) - Val(chr(57)+chr(56))) + Val(chr(49))
##########	$FTFLIMIT =  (Val(chr(50)) ^ Val(chr(52))) + Val(chr(52))
##########	$HiddLIMIT = ((Val(chr(54)) * Val(chr(54))) - Val(chr(51)+chr(48))) + Val(chr(52))
##########	$ElevLIMIT = 500
##########	$StatLIMIT = 0#Not Needed as limits are defined literally
##########	$TenyLIMIT = 0#Not Needed as limits are defined literally
##########	$WebcLIMIT = 2
##########	$TwenLIMIT = 10
##########	$UndeLIMIT = 1
##########	$LoweLIMIT = 0#Not Needed as limits are defined literally
##########	$HostLIMIT = 1
##########	$ConsLIMIT = 5
##########	$CaleLIMIT = 0#Not Needed as limits are defined literally
##########	$GeocLIMIT = 500
##########	$DistLIMIT = 300
##########	$MatrLIMIT = 0#Not Needed as limits are defined literally
##########	$TravLIMIT = 50
##########	$CoinLIMIT = 50
##########	$TradB1 = Round($TradLIMIT,0)
##########	$TradB2 = Round(($TradLIMIT * 1.5) - 1,0)
##########	$TradS1 = Round($TradLIMIT * 1.5, 0)
##########	$TradS2 = Round(($TradLIMIT * 3) - 1,0)
##########	$TradG1 = Round($TradLIMIT * 3,0)
##########	$TradG2 = Round(($TradLIMIT * 5) - 1,0)
##########	$TradP1 = Round($TradLIMIT * 5,0)
##########	$TradP2 = Round(($TradLIMIT * 10) - 1,0)
##########	$TradR1 = Round($TradLIMIT * 10,0)
##########	$TradR2 = Round(($TradR1 * 1.5) - 1,0)
##########	$TradSa1 = Round($TradR1 * 1.5,0)
##########	$TradSa2 = Round(($TradR1 * 3) - 1,0)
##########	$TradE1 = Round($TradR1 * 3,0)
##########	$TradE2 = Round(($TradR1 * 5) - 1,0)
##########	$TradD  = Round($TradR1 * 5,0)
##########	$MultB1 = Round($MultLIMIT,0)
##########	$MultB2 = Round(($MultLIMIT * 1.5) - 1,0)
##########	$MultS1 = Round($MultLIMIT * 1.5, 0)
##########	$MultS2 = Round(($MultLIMIT * 3) - 1,0)
##########	$MultG1 = Round($MultLIMIT * 3,0)
##########	$MultG2 = Round(($MultLIMIT * 5) - 1,0)
##########	$MultP1 = Round($MultLIMIT * 5,0)
##########	$MultP2 = Round(($MultLIMIT * 10) - 1,0)
##########	$MultR1 = Round($MultLIMIT * 10,0)
##########	$MultR2 = Round(($MultR1 * 1.5) - 1,0)
##########	$MultSa1 = Round($MultR1 * 1.5,0)
##########	$MultSa2 = Round(($MultR1 * 3) - 1,0)
##########	$MultE1 = Round($MultR1 * 3,0)
##########	$MultE2 = Round(($MultR1 * 5) - 1,0)
##########	$MultD  = Round($MultR1 * 5,0)
##########	$MystB1 = Round($MystLIMIT,0)
##########	$MystB2 = Round(($MystLIMIT * 1.5) - 1,0)
##########	$MystS1 = Round($MystLIMIT * 1.5, 0)
##########	$MystS2 = Round(($MystLIMIT * 3) - 1,0)
##########	$MystG1 = Round($MystLIMIT * 3,0)
##########	$MystG2 = Round(($MystLIMIT * 5) - 1,0)
##########	$MystP1 = Round($MystLIMIT * 5,0)
##########	$MystP2 = Round(($MystLIMIT * 10) - 1,0)
##########	$MystR1 = Round($MystLIMIT * 10,0)
##########	$MystR2 = Round(($MystR1 * 1.5) - 1,0)
##########	$MystSa1 = Round($MystR1 * 1.5,0)
##########	$MystSa2 = Round(($MystR1 * 3) - 1,0)
##########	$MystE1 = Round($MystR1 * 3,0)
##########	$MystE2 = Round(($MystR1 * 5) - 1,0)
##########	$MystD  = Round($MystR1 * 5,0)
##########	$VirtB1 = Round($VirtLIMIT,0)
##########	$VirtB2 = Round(($VirtLIMIT * 1.5) - 1,0)
##########	$VirtS1 = Round($VirtLIMIT * 1.5, 0)
##########	$VirtS2 = Round(($VirtLIMIT * 3) - 1,0)
##########	$VirtG1 = Round($VirtLIMIT * 3,0)
##########	$VirtG2 = Round(($VirtLIMIT * 5) - 1,0)
##########	$VirtP1 = Round($VirtLIMIT * 5,0)
##########	$VirtP2 = Round(($VirtLIMIT * 10) - 1,0)
##########	$VirtR1 = Round($VirtLIMIT * 10,0)
##########	$VirtR2 = Round(($VirtR1 * 1.5) - 1,0)
##########	$VirtSa1 = Round($VirtR1 * 1.5,0)
##########	$VirtSa2 = Round(($VirtR1 * 3) - 1,0)
##########	$VirtE1 = Round($VirtR1 * 3,0)
##########	$VirtE2 = Round(($VirtR1 * 5) - 1,0)
##########	$VirtD  = Round($VirtR1 * 5,0)
##########	$EartB1 = Round($EartLIMIT,0)
##########	$EartB2 = Round(($EartLIMIT * 1.5) - 1,0)
##########	$EartS1 = Round($EartLIMIT * 1.5, 0)
##########	$EartS2 = Round(($EartLIMIT * 3) - 1,0)
##########	$EartG1 = Round($EartLIMIT * 3,0)
##########	$EartG2 = Round(($EartLIMIT * 5) - 1,0)
##########	$EartP1 = Round($EartLIMIT * 5,0)
##########	$EartP2 = Round(($EartLIMIT * 10) - 1,0)
##########	$EartR1 = Round($EartLIMIT * 10,0)
##########	$EartR2 = Round(($EartR1 * 1.5) - 1,0)
##########	$EartSa1 = Round($EartR1 * 1.5,0)
##########	$EartSa2 = Round(($EartR1 * 3) - 1,0)
##########	$EartE1 = Round($EartR1 * 3,0)
##########	$EartE2 = Round(($EartR1 * 5) - 1,0)
##########	$EartD  = Round($EartR1 * 5,0)
##########	$LettB1 = Round($LettLIMIT,0)
##########	$LettB2 = Round(($LettLIMIT * 1.5) - 1,0)
##########	$LettS1 = Round($LettLIMIT * 1.5, 0)
##########	$LettS2 = Round(($LettLIMIT * 3) - 1,0)
##########	$LettG1 = Round($LettLIMIT * 3,0)
##########	$LettG2 = Round(($LettLIMIT * 5) - 1,0)
##########	$LettP1 = Round($LettLIMIT * 5,0)
##########	$LettP2 = Round(($LettLIMIT * 10) - 1,0)
##########	$LettR1 = Round($LettLIMIT * 10,0)
##########	$LettR2 = Round(($LettR1 * 1.5) - 1,0)
##########	$LettSa1 = Round($LettR1 * 1.5,0)
##########	$LettSa2 = Round(($LettR1 * 3) - 1,0)
##########	$LettE1 = Round($LettR1 * 3,0)
##########	$LettE2 = Round(($LettR1 * 5) - 1,0)
##########	$LettD  = Round($LettR1 * 5,0)
##########	$WherB1 = Round($WherLIMIT,0)
##########	$WherB2 = Round(($WherLIMIT * 1.5) - 1,0)
##########	$WherS1 = Round($WherLIMIT * 1.5, 0)
##########	$WherS2 = Round(($WherLIMIT * 3) - 1,0)
##########	$WherG1 = Round($WherLIMIT * 3,0)
##########	$WherG2 = Round(($WherLIMIT * 5) - 1,0)
##########	$WherP1 = Round($WherLIMIT * 5,0)
##########	$WherP2 = Round(($WherLIMIT * 10) - 1,0)
##########	$WherR1 = Round($WherLIMIT * 10,0)
##########	$WherR2 = Round(($WherR1 * 1.5) - 1,0)
##########	$WherSa1 = Round($WherR1 * 1.5,0)
##########	$WherSa2 = Round(($WherR1 * 3) - 1,0)
##########	$WherE1 = Round($WherR1 * 3,0)
##########	$WherE2 = Round(($WherR1 * 5) - 1,0)
##########	$WherD  = Round($WherR1 * 5,0)
##########	$MegaB1 = Round($MegaLIMIT,0)
##########	$MegaB2 = Round(($MegaLIMIT * 1.5) - 1,0)
##########	$MegaS1 = Round($MegaLIMIT * 1.5, 0)
##########	$MegaS2 = Round(($MegaLIMIT * 3) - 1,0)
##########	$MegaG1 = Round($MegaLIMIT * 3,0)
##########	$MegaG2 = Round(($MegaLIMIT * 5) - 1,0)
##########	$MegaP1 = Round($MegaLIMIT * 5,0)
##########	$MegaP2 = Round(($MegaLIMIT * 10) - 1,0)
##########	$MegaR1 = Round($MegaLIMIT * 10,0)
##########	$MegaR2 = Round(($MegaR1 * 1.5) - 1,0)
##########	$MegaSa1 = Round($MegaR1 * 1.5,0)
##########	$MegaSa2 = Round(($MegaR1 * 3) - 1,0)
##########	$MegaE1 = Round($MegaR1 * 3,0)
##########	$MegaE2 = Round(($MegaR1 * 5) - 1,0)
##########	$MegaD  = Round($MegaR1 * 5,0)
##########	$EvenB1 = Round($EvenLIMIT,0)
##########	$EvenB2 = Round(($EvenLIMIT * 1.5) - 1,0)
##########	$EvenS1 = Round($EvenLIMIT * 1.5, 0)
##########	$EvenS2 = Round(($EvenLIMIT * 3) - 1,0)
##########	$EvenG1 = Round($EvenLIMIT * 3,0)
##########	$EvenG2 = Round(($EvenLIMIT * 5) - 1,0)
##########	$EvenP1 = Round($EvenLIMIT * 5,0)
##########	$EvenP2 = Round(($EvenLIMIT * 10) - 1,0)
##########	$EvenR1 = Round($EvenLIMIT * 10,0)
##########	$EvenR2 = Round(($EvenR1 * 1.5) - 1,0)
##########	$EvenSa1 = Round($EvenR1 * 1.5,0)
##########	$EvenSa2 = Round(($EvenR1 * 3) - 1,0)
##########	$EvenE1 = Round($EvenR1 * 3,0)
##########	$EvenE2 = Round(($EvenR1 * 5) - 1,0)
##########	$EvenD  = Round($EvenR1 * 5,0)
##########	$CITOB1 = Round($CITOLIMIT,0)
##########	$CITOB2 = Round(($CITOLIMIT * 1.5) - 1,0)
##########	$CITOS1 = Round($CITOLIMIT * 1.5, 0)
##########	$CITOS2 = Round(($CITOLIMIT * 3) - 1,0)
##########	$CITOG1 = Round($CITOLIMIT * 3,0)
##########	$CITOG2 = Round(($CITOLIMIT * 5) - 1,0)
##########	$CITOP1 = Round($CITOLIMIT * 5,0)
##########	$CITOP2 = Round(($CITOLIMIT * 10) - 1,0)
##########	$CITOR1 = Round($CITOLIMIT * 10,0)
##########	$CITOR2 = Round(($CITOR1 * 1.5) - 1,0)
##########	$CITOSa1=Round($CITOR1 * 1.5,0)
##########	$CITOSa2=Round(($CITOR1 * 3) - 1,0)
##########	$CITOE1 =Round($CITOR1 * 3,0)
##########	$CITOE2 =Round(($CITOR1 * 5) - 1,0)
##########	$CITOD  =Round($CITOR1 * 5,0)
##########	$TenyB1 = 1
##########	$TenyB2 = 2
##########	$TenyS1 = 3
##########	$TenyS2 = 4
##########	$TenyG1 = 5
##########	$TenyG2 = 6
##########	$TenyP1 = 7
##########	$TenyP2 = 8
##########	$TenyR1 = 9
##########	$TenyR2 = 10
##########	$TenySa1 = 11
##########	$TenySa2 = 12
##########	$TenyE1 = 13
##########	$TenyE2 = 14
##########	$TenyD  = 15
##########	$BencB1 = Round($BencLIMIT,0)
##########	$BencB2 = Round(($BencLIMIT * 1.5) - 1,0)
##########	$BencS1 = Round($BencLIMIT * 1.5, 0)
##########	$BencS2 = Round(($BencLIMIT * 3) - 1,0)
##########	$BencG1 = Round($BencLIMIT * 3,0)
##########	$BencG2 = Round(($BencLIMIT * 5) - 1,0)
##########	$BencP1 = Round($BencLIMIT * 5,0)
##########	$BencP2 = Round(($BencLIMIT * 10) - 1,0)
##########	$BencR1 = Round($BencLIMIT * 10,0)
##########	$BencR2 = Round(($BencR1 * 1.5) - 1,0)
##########	$BencSa1= Round($BencR1 * 1.5,0)
##########	$BencSa2= Round(($BencR1 * 3) - 1,0)
##########	$BencE1 = Round($BencR1 * 3,0)
##########	$BencE2 = Round(($BencR1 * 5) - 1,0)
##########	$BencD  = Round($BencR1 * 5,0)
##########	$WaymB1 = Round($WaymLIMIT,0)
##########	$WaymB2 = Round(($WaymLIMIT * 1.5) - 1,0)
##########	$WaymS1 = Round($WaymLIMIT * 1.5, 0)
##########	$WaymS2 = Round(($WaymLIMIT * 3) - 1,0)
##########	$WaymG1 = Round($WaymLIMIT * 3,0)
##########	$WaymG2 = Round(($WaymLIMIT * 5) - 1,0)
##########	$WaymP1 = Round($WaymLIMIT * 5,0)
##########	$WaymP2 = Round(($WaymLIMIT * 10) - 1,0)
##########	$WaymR1 = Round($WaymLIMIT * 10,0)
##########	$WaymR2 = Round(($WaymR1 * 1.5) - 1,0)
##########	$WaymSa1 = Round($WaymR1 * 1.5,0)
##########	$WaymSa2 = Round(($WaymR1 * 3) - 1,0)
##########	$WaymE1 = Round($WaymR1 * 3,0)
##########	$WaymE2 = Round(($WaymR1 * 5) - 1,0)
##########	$WaymD  = Round($WaymR1 * 5,0)
##########	$MicrB1 = Round($MicrLIMIT,0)
##########	$MicrB2 = Round(($MicrLIMIT * 1.5) - 1,0)
##########	$MicrS1 = Round($MicrLIMIT * 1.5, 0)
##########	$MicrS2 = Round(($MicrLIMIT * 3) - 1,0)
##########	$MicrG1 = Round($MicrLIMIT * 3,0)
##########	$MicrG2 = Round(($MicrLIMIT * 5) - 1,0)
##########	$MicrP1 = Round($MicrLIMIT * 5,0)
##########	$MicrP2 = Round(($MicrLIMIT * 10) - 1,0)
##########	$MicrR1 = Round($MicrLIMIT * 10,0)
##########	$MicrR2 = Round(($MicrR1 * 1.5) - 1,0)
##########	$MicrSa1 = Round($MicrR1 * 1.5,0)
##########	$MicrSa2 = Round(($MicrR1 * 3) - 1,0)
##########	$MicrE1 = Round($MicrR1 * 3,0)
##########	$MicrE2 = Round(($MicrR1 * 5) - 1,0)
##########	$MicrD = Round($MicrR1 * 5,0)
##########	$SmalB1 = Round($SmalLIMIT,0)
##########	$SmalB2 = Round(($SmalLIMIT * 1.5) - 1,0)
##########	$SmalS1 = Round($SmalLIMIT * 1.5, 0)
##########	$SmalS2 = Round(($SmalLIMIT * 3) - 1,0)
##########	$SmalG1 = Round($SmalLIMIT * 3,0)
##########	$SmalG2 = Round(($SmalLIMIT * 5) - 1,0)
##########	$SmalP1 = Round($SmalLIMIT * 5,0)
##########	$SmalP2 = Round(($SmalLIMIT * 10) - 1,0)
##########	$SmalR1 = Round($SmalLIMIT * 10,0)
##########	$SmalR2 = Round(($SmalR1 * 1.5) - 1,0)
##########	$SmalSa1 = Round($SmalR1 * 1.5,0)
##########	$SmalSa2 = Round(($SmalR1 * 3) - 1,0)
##########	$SmalE1  = Round($SmalR1 * 3,0)
##########	$SmalE2 = Round(($SmalR1 * 5) - 1,0)
##########	$SmalD  = Round($SmalR1 * 5,0)
##########	$ReguB1 = Round($ReguLIMIT,0)
##########	$ReguB2 = Round(($ReguLIMIT * 1.5) - 1,0)
##########	$ReguS1 = Round($ReguLIMIT * 1.5, 0)
##########	$ReguS2 = Round(($ReguLIMIT * 3) - 1,0)
##########	$ReguG1 = Round($ReguLIMIT * 3,0)
##########	$ReguG2 = Round(($ReguLIMIT * 5) - 1,0)
##########	$ReguP1 = Round($ReguLIMIT * 5,0)
##########	$ReguP2 = Round(($ReguLIMIT * 10) - 1,0)
##########	$ReguR1 = Round($ReguLIMIT * 10,0)
##########	$ReguR2 = Round(($ReguR1 * 1.5) - 1,0)
##########	$ReguSa1= Round($ReguR1 * 1.5,0)
##########	$ReguSa2= Round(($ReguR1 * 3) - 1,0)
##########	$ReguE1 = Round($ReguR1 * 3,0)
##########	$ReguE2 = Round(($ReguR1 * 5) - 1,0)
##########	$ReguD  = Round($ReguR1 * 5,0)
##########	$LargB1 = Round($LargLIMIT,0)
##########	$LargB2 = Round(($LargLIMIT * 1.5) - 1,0)
##########	$LargS1 = Round($LargLIMIT * 1.5, 0)
##########	$LargS2 = Round(($LargLIMIT * 3) - 1,0)
##########	$LargG1 = Round($LargLIMIT * 3,0)
##########	$LargG2 = Round(($LargLIMIT * 5) - 1,0)
##########	$LargP1 =Round($LargLIMIT * 5,0)
##########	$LargP2 =Round(($LargLIMIT * 10) - 1,0)
##########	$LargR1 =Round($LargLIMIT * 10,0)
##########	$LargR2 =Round(($LargR1 * 1.5) - 1,0)
##########	$LargSa1=Round($LargR1 * 1.5,0)
##########	$LargSa2=Round(($LargR1 * 3) - 1,0)
##########	$LargE1 =Round($LargR1 * 3,0)
##########	$LargE2 =Round(($LargR1 * 5) - 1,0)
##########	$LargD  =Round($LargR1 * 5,0)
##########	$FiveB1 =Round($FiveLIMIT,0)
##########	$FiveB2 =Round(($FiveLIMIT * 1.5) - 1,0)
##########	$FiveS1 =Round($FiveLIMIT * 1.5, 0)
##########	$FiveS2 =Round(($FiveLIMIT * 3) - 1,0)
##########	$FiveG1 =Round($FiveLIMIT * 3,0)
##########	$FiveG2 =Round(($FiveLIMIT * 5) - 1,0)
##########	$FiveP1 =Round($FiveLIMIT * 5,0)
##########	$FiveP2 =Round(($FiveLIMIT * 10) - 1,0)
##########	$FiveR1 =Round($FiveLIMIT * 10,0)
##########	$FiveR2 =Round(($FiveR1 * 1.5) - 1,0)
##########	$FiveSa1=Round($FiveR1 * 1.5,0)
##########	$FiveSa2=Round(($FiveR1 * 3) - 1,0)
##########	$FiveE1 =Round($FiveR1 * 3,0)
##########	$FiveE2 =Round(($FiveR1 * 5) - 1,0)
##########	$FiveD  =Round($FiveR1 * 5,0)
##########	$CounB1 =Round($CounLIMIT,0)
##########	$CounB2 =Round(($CounLIMIT * 1.5) - 1,0)
##########	$CounS1 =Round($CounLIMIT * 1.5, 0)
##########	$CounS2 =Round(($CounLIMIT * 3) - 1,0)
##########	$CounG1 =Round($CounLIMIT * 3,0)
##########	$CounG2 =Round(($CounLIMIT * 5) - 1,0)
##########	$CounP1 =Round($CounLIMIT * 5,0)
##########	$CounP2 =Round(($CounLIMIT * 10) - 1,0)
##########	$CounR1 =Round($CounLIMIT * 10,0)
##########	$CounR2 =Round(($CounR1 * 1.5) - 1,0)
##########	$CounSa1=Round($CounR1 * 1.5,0)
##########	$CounSa2=Round(($CounR1 * 3) - 1,0)
##########	$CounE1 =Round($CounR1 * 3,0)
##########	$CounE2 =Round(($CounR1 * 5) - 1,0)
##########	$CounD  =Round($CounR1 * 5,0)
##########	$FTFB1 = Round($FTFLIMIT,0)
##########	$FTFB2 = Round(($FTFLIMIT * 1.5) - 1,0)
##########	$FTFS1 = Round($FTFLIMIT * 1.5, 0)
##########	$FTFS2 = Round(($FTFLIMIT * 3) - 1,0)
##########	$FTFG1 = Round($FTFLIMIT * 3,0)
##########	$FTFG2 = Round(($FTFLIMIT * 5) - 1,0)
##########	$FTFP1 = Round($FTFLIMIT * 5,0)
##########	$FTFP2 = Round(($FTFLIMIT * 10) - 1,0)
##########	$FTFR1 = Round($FTFLIMIT * 10,0)
##########	$FTFR2 = Round(($FTFR1 * 1.5) - 1,0)
##########	$FTFSa1 =Round($FTFR1 * 1.5,0)
##########	$FTFSa2 =Round(($FTFR1 * 3) - 1,0)
##########	$FTFE1 = Round($FTFR1 * 3,0)
##########	$FTFE2 = Round(($FTFR1 * 5) - 1,0)
##########	$FTFD  = Round($FTFR1 * 5,0)
##########	$HiddB1= Round($HiddLIMIT,0)
##########	$HiddB2= Round(($HiddLIMIT*1.5)-1,0)
##########	$HiddS1= Round($HiddLIMIT*1.5,0)
##########	$HiddS2= Round(($HiddLIMIT*3)-1,0)
##########	$HiddG1= Round($HiddLIMIT*3,0)
##########	$HiddG2= Round(($HiddLIMIT*5)-1,0)
##########	$HiddP1= Round($HiddLIMIT*5,0)
##########	$HiddP2= Round(($HiddLIMIT*10)-1,0)
##########	$HiddR1= Round($HiddLIMIT*10,0)
##########	$HiddR2= Round(($HiddR1*1.5)-1,0)
##########	$HiddSa1=Round($HiddR1*1.5,0)
##########	$HiddSa2=Round(($HiddR1*3)-1,0)
##########	$HiddE1= Round($HiddR1*3,0)
##########	$HiddE2= Round(($HiddR1*5)-1,0)
##########	$HiddD  = Round($HiddR1 * 5,0)
##########	$ElevB1 = Round($ElevLIMIT,0)
##########	$WebcB1 = Round($WebcLIMIT,0)
##########	$WebcB2 = Round(($WebcLIMIT * 1.5) - 1,0)
##########	$WebcS1 = Round($WebcLIMIT * 1.5, 0)
##########	$WebcS2 = Round(($WebcLIMIT * 3) - 1,0)
##########	$WebcG1 = Round($WebcLIMIT * 3,0)
##########	$WebcG2 = Round(($WebcLIMIT * 5) - 1,0)
##########	$WebcP1 = Round($WebcLIMIT * 5,0)
##########	$WebcP2 = Round(($WebcLIMIT * 10) - 1,0)
##########	$WebcR1 = Round($WebcLIMIT * 10,0)
##########	$WebcR2 = Round(($WebcR1 * 1.5) - 1,0)
##########	$WebcSa1 = Round($WebcR1 * 1.5,0)
##########	$WebcSa2 = Round(($WebcR1 * 3) - 1,0)
##########	$WebcE1 = Round($WebcR1 * 3,0)
##########	$WebcE2 = Round(($WebcR1 * 5) - 1,0)
##########	$WebcD  = Round($WebcR1 * 5,0)
##########	$ApecB1 = 1
##########	$ApecB2 = 1
##########	$ApecS1 = 2
##########	$ApecS2 = 2
##########	$ApecG1 = 3
##########	$ApecG2 = 3
##########	$ApecP1 = 4
##########	$ApecP2 = 4
##########	$ApecR1 = 5
##########	$ApecR2 = 5
##########	$ApecSa1 = 6
##########	$ApecSa2 = 6
##########	$ApecE1 = 7
##########	$ApecE2 = 7
##########	$ApecD  = 8
##########	$ElevB2 = Round($ElevLIMIT + 499,0)
##########	$ElevS1 = Round($ElevLIMIT + 500,0)
##########	$ElevS2 = Round($ElevLIMIT + 999,0)
##########	$ElevG1 = Round($ElevLIMIT + 1000,0)
##########	$ElevG2 = Round($ElevLIMIT + 1499,0)
##########	$ElevP1 = Round($ElevLIMIT + 1500,0)
##########	$ElevP2 = Round($ElevLIMIT + 1999,0)
##########	$ElevR1 = Round($ElevLIMIT + 2000,0)
##########	$ElevR2 = Round($ElevLIMIT + 2499,0)
##########	$ElevSa1 = Round($ElevLIMIT + 2500,0)
##########	$ElevSa2 = Round($ElevLIMIT + 2999,0)
##########	$ElevE1 = Round($ElevLIMIT + 3000,0)
##########	$ElevE2 = Round($ElevLIMIT + 3999,0)
##########	$ElevD  = Round($ElevLIMIT + 4000,0)
##########	$TwenB1 = Round($TwenLIMIT,0)
##########	$TwenB2 = Round(($TwenLIMIT * 1.5) - 1,0)
##########	$TwenS1 = Round($TwenLIMIT * 1.5, 0)
##########	$TwenS2 = Round(($TwenLIMIT * 3) - 1,0)
##########	$TwenG1 = Round($TwenLIMIT * 3,0)
##########	$TwenG2 = Round(($TwenLIMIT * 5) - 1,0)
##########	$TwenP1 = Round($TwenLIMIT * 5,0)
##########	$TwenP2 = Round(($TwenLIMIT * 10) - 1,0)
##########	$TwenR1 = 100
##########	$TwenR2 = 149
##########	$TwenSa1 = 150
##########	$TwenSa2 = 299
##########	$TwenE1 = 300
##########	$TwenE2 = 349
##########	$TwenD  = 350
##########	$UndeB1 = Round($UndeLIMIT,0)
##########	$UndeB2 = Round(($UndeLIMIT * 1.5) - 1,0)
##########	$UndeS1 = Round($UndeLIMIT * 1.5, 0)
##########	$UndeS2 = Round(($UndeLIMIT * 3) - 1,0)
##########	$UndeG1 = Round($UndeLIMIT * 3,0)
##########	$UndeG2 = Round(($UndeLIMIT * 5) - 1,0)
##########	$UndeP1 = Round($UndeLIMIT * 5,0)
##########	$UndeP2 = Round(($UndeLIMIT * 10) - 1,0)
##########	$UndeR1 = Round($UndeLIMIT * 10,0)
##########	$UndeR2 = Round(($UndeR1 * 1.5) - 1,0)
##########	$UndeSa1 = Round($UndeR1 * 1.5,0)
##########	$UndeSa2 = Round(($UndeR1 * 3) - 1,0)
##########	$UndeE1 = Round($UndeR1 * 3,0)
##########	$UndeE2 = Round(($UndeR1 * 5) - 1,0)
##########	$UndeD  = Round($UndeR1 * 5,0)
##########	$LoweB1 = -1
##########	$LoweB2 = -49
##########	$LoweS1 = -50
##########	$LoweS2 = -99
##########	$LoweG1 = -100
##########	$LoweG2 = -149
##########	$LoweP1 = -150
##########	$LoweP2 = -199
##########	$LoweR1 = -200
##########	$LoweR2 = -249
##########	$LoweSa1 = -250
##########	$LoweSa2 = -299
##########	$LoweE1 = -300
##########	$LoweE2 = -399
##########	$LoweD  = -400
##########	$HostB1 = Round($HostLIMIT,0)
##########	$HostB2 = Round(($HostLIMIT * 1.5) - 1,0)
##########	$HostS1 = Round($HostLIMIT * 1.5, 0)
##########	$HostS2 = Round(($HostLIMIT * 3) - 1,0)
##########	$HostG1 = Round($HostLIMIT * 3,0)
##########	$HostG2 = Round(($HostLIMIT * 5) - 1,0)
##########	$HostP1 = Round($HostLIMIT * 5,0)
##########	$HostP2 = Round(($HostLIMIT * 10) - 1,0)
##########	$HostR1 = Round($HostLIMIT * 10,0)
##########	$HostR2 = Round(($HostR1 * 1.5) - 1,0)
##########	$HostSa1 = Round($HostR1 * 1.5,0)
##########	$HostSa2 = Round(($HostR1 * 3) - 1,0)
##########	$HostE1 = Round($HostR1 * 3,0)
##########	$HostE2 = Round(($HostR1 * 5) - 1,0)
##########	$HostD  = Round($HostR1 * 5,0)
##########	$ConsB1 = Round($ConsLIMIT,0)
##########	$ConsB2 = Round(($ConsLIMIT * 1.5) - 1,0)
##########	$ConsS1 = Round($ConsLIMIT * 1.5, 0)
##########	$ConsS2 = Round(($ConsLIMIT * 3) - 1,0)
##########	$ConsG1 = Round($ConsLIMIT * 3,0)
##########	$ConsG2 = Round(($ConsLIMIT * 5) - 1,0)
##########	$ConsP1 = Round($ConsLIMIT * 5,0)
##########	$ConsP2 = Round(($ConsLIMIT * 10) - 1,0)
##########	$ConsR1 = Round($ConsLIMIT * 10,0)
##########	$ConsR2 = Round(($ConsR1 * 1.5) - 1,0)
##########	$ConsSa1 = Round($ConsR1 * 1.5,0)
##########	$ConsSa2 = Round(($ConsR1 * 3) - 1,0)
##########	$ConsE1 = Round($ConsR1 * 3,0)
##########	$ConsE2 = Round(($ConsR1 * 5) - 1,0)
##########	$ConsD  = Round($ConsR1 * 5,0)
##########	$CaleB1 = 100
##########	$CaleB2 = 149
##########	$CaleS1 = 150
##########	$CaleS2 = 199
##########	$CaleG1 = 200
##########	$CaleG2 = 249
##########	$CaleP1 = 250
##########	$CaleP2 = 299
##########	$CaleR1 = 300
##########	$CaleR2 = 349
##########	$CaleSa1 = 350
##########	$CaleSa2 = 364
##########	$CaleE1 = 365
##########	$CaleE2 = 365
##########	$CaleD  = 366
##########	$GeocB1 = Round($GeocLIMIT,0)
##########	$GeocB2 = Round(($GeocLIMIT * 1.5) - 1,0)
##########	$GeocS1 = Round($GeocLIMIT * 1.5, 0)
##########	$GeocS2 = Round(($GeocLIMIT * 3) - 1,0)
##########	$GeocG1 = Round($GeocLIMIT * 3,0)
##########	$GeocG2 = Round(($GeocLIMIT * 5) - 1,0)
##########	$GeocP1 = Round($GeocLIMIT * 5,0)
##########	$GeocP2 = Round(($GeocLIMIT * 10) - 1,0)
##########	$GeocR1 = Round($GeocLIMIT * 10,0)
##########	$GeocR2 = Round(($GeocR1 * 1.5) - 1,0)
##########	$GeocSa1 = Round($GeocR1 * 1.5,0)
##########	$GeocSa2 = Round(($GeocR1 * 3) - 1,0)
##########	$GeocE1 = Round($GeocR1 * 3,0)
##########	$GeocE2 = Round(($GeocR1 * 5) - 1,0)
##########	$GeocD  = Round($GeocR1 * 5,0)
##########	$DistB1 = Round($DistLIMIT,0)
##########	$DistB2 = Round(($DistLIMIT * 1.5) - 1,0)
##########	$DistS1 = Round($DistLIMIT * 1.5, 0)
##########	$DistS2 = Round(($DistLIMIT * 3) - 1,0)
##########	$DistG1 = Round($DistLIMIT * 3,0)
##########	$DistG2 = Round(($DistLIMIT * 5) - 1,0)
##########	$DistP1 = Round($DistLIMIT * 5,0)
##########	$DistP2 = Round(($DistLIMIT * 10) - 1,0)
##########	$DistR1 = Round($DistLIMIT * 10,0)
##########	$DistR2 = Round(($DistR1 * 1.5) - 1,0)
##########	$DistSa1 = Round($DistR1 * 1.5,0)
##########	$DistSa2 = Round(($DistR1 * 3) - 1,0)
##########	$DistE1 = Round($DistR1 * 3,0)
##########	$DistE2 = Round(($DistR1 * 5) - 1,0)
##########	$DistD  = Round($DistR1 * 5,0)
##########	$MatrB1 = 20
##########	$MatrB2 = 29
##########	$MatrS1 = 30
##########	$MatrS2 = 39
##########	$MatrG1 = 40
##########	$MatrG2 = 49
##########	$MatrP1 = 50
##########	$MatrP2 = 59
##########	$MatrR1 = 60
##########	$MatrR2 = 69
##########	$MatrSa1 = 70
##########	$MatrSa2 = 79
##########	$MatrE1 = 80
##########	$MatrE2 = 80
##########	$MatrD  = 81
##########	$TravB1 = Round($TravLIMIT,0)
##########	$TravB2 = Round(($TravLIMIT * 1.5) - 1,0)
##########	$TravS1 = Round($TravLIMIT * 1.5, 0)
##########	$TravS2 = Round(($TravLIMIT * 3) - 1,0)
##########	$TravG1 = Round($TravLIMIT * 3,0)
##########	$TravG2 = Round(($TravLIMIT * 5) - 1,0)
##########	$TravP1 = Round($TravLIMIT * 5,0)
##########	$TravP2 = Round(($TravLIMIT * 10) - 1,0)
##########	$TravR1 = Round($TravLIMIT * 10,0)
##########	$TravR2 = Round(($TravR1 * 1.5) - 1,0)
##########	$TravSa1 = Round($TravR1 * 1.5,0)
##########	$TravSa2 = Round(($TravR1 * 3) - 1,0)
##########	$TravE1 = Round($TravR1 * 3,0)
##########	$TravE2 = Round(($TravR1 * 5) - 1,0)
##########	$TravD  = Round($TravR1 * 5,0)
##########	$CoinB1 = Round($CoinLIMIT,0)
##########	$CoinB2 = Round(($CoinLIMIT * 1.5) - 1,0)
##########	$CoinS1 = Round($CoinLIMIT * 1.5, 0)
##########	$CoinS2 = Round(($CoinLIMIT * 3) - 1,0)
##########	$CoinG1 = Round($CoinLIMIT * 3,0)
##########	$CoinG2 = Round(($CoinLIMIT * 5) - 1,0)
##########	$CoinP1 = Round($CoinLIMIT * 5,0)
##########	$CoinP2 = Round(($CoinLIMIT * 10) - 1,0)
##########	$CoinR1 = Round($CoinLIMIT * 10,0)
##########	$CoinR2 = Round(($CoinR1 * 1.5) - 1,0)
##########	$CoinSa1 = Round($CoinR1 * 1.5,0)
##########	$CoinSa2 = Round(($CoinR1 * 3) - 1,0)
##########	$CoinE1 = Round($CoinR1 * 3,0)
##########	$CoinE2 = Round(($CoinR1 * 5) - 1,0)
##########	$CoinD  = Round($CoinR1 * 5,0)
##########	$StatB1 = 10
##########	$StatB2 = 14.99999
##########	$StatS1 = 15
##########	$StatS2 = 19.99999
##########	$StatG1 = 20
##########	$StatG2 = 29.99999
##########	$StatP1 = 30
##########	$StatP2 = 39.99999
##########	$StatR1 = 40
##########	$StatR2 = 49.99999
##########	$StatSa1 = 50
##########	$StatSa2 = 74.99999
##########	$StatE1 = 75
##########	$StatE2 = 99.99999
##########	$StatD  = 100
##########	$WritB1 = 30
##########	$WritB2 = 39
##########	$WritS1 = 40
##########	$WritS2 = 49
##########	$WritG1 = 50
##########	$WritG2 = 59
##########	$WritP1 = 60
##########	$WritP2 = 69
##########	$WritR1 = 70
##########	$WritR2 = 79
##########	$WritSa1 = 80
##########	$WritSa2 = 89
##########	$WritE1 = 90
##########	$WritE2 = 99
##########	$WritD  = 100



#NewLimits
$GeocB1 = 500
$GeocB2 = 999
$GeocS1 = 1000
$GeocS2 = 1999
$GeocG1 = 2000
$GeocG2 = 2999
$GeocP1 = 3000
$GeocP2 = 4999
$GeocR1 = 5000
$GeocR2 = 7999
$GeocSa1 = 8000
$GeocSa2 = 11999
$GeocE1 = 12000
$GeocE2 = 17999
$GeocD = 18000
$TradB1  = 400
$TradB2  = 999
$TradS1  = 1000
$TradS2  = 1999
$TradG1  = 2000
$TradG2  = 2999
$TradP1  = 3000
$TradP2  = 4999
$TradR1  = 5000
$TradR2  = 6999
$TradSa1 = 7000
$TradSa2 = 9999
$TradE1  = 10000
$TradE2  = 14999
$TradD   = 15000
$MultB1  = 50
$MultB2  = 99
$MultS1  = 100
$MultS2  = 199
$MultG1  = 200
$MultG2  = 299
$MultP1  = 300
$MultP2  = 499
$MultR1  = 500
$MultR2  = 799
$MultSa1 = 800
$MultSa2 = 1199
$MultE1  = 1200
$MultE2  = 1799
$MultD   = 1800
$MystB1  = 50
$MystB2  = 99
$MystS1  = 100
$MystS2  = 199
$MystG1  = 200
$MystG2  = 299
$MystP1  = 300
$MystP2  = 499
$MystR1  = 500
$MystR2  = 799
$MystSa1 = 800
$MystSa2 = 1199
$MystE1  = 1200
$MystE2  = 1799
$MystD   = 1800
$VirtB1  = 5
$VirtB2  = 9
$VirtS1  = 10
$VirtS2  = 19
$VirtG1  = 20
$VirtG2  = 29
$VirtP1  = 30
$VirtP2  = 49
$VirtR1  = 50
$VirtR2  = 79
$VirtSa1 = 80
$VirtSa2 = 119
$VirtE1  = 120
$VirtE2  = 179
$VirtD   = 180
$EartB1  = 5
$EartB2  = 9
$EartS1  = 10
$EartS2  = 19
$EartG1  = 20
$EartG2  = 29
$EartP1  = 30
$EartP2  = 49
$EartR1  = 50
$EartR2  = 79
$EartSa1 = 80
$EartSa2 = 119
$EartE1  = 120
$EartE2  = 179
$EartD   = 180
$LettB1  = 5
$LettB2  = 5
$LettS1  = 6
$LettS2  = 6
$LettG1  = 7
$LettG2  = 7
$LettP1  = 8
$LettP2  = 9
$LettR1  = 10
$LettR2  = 14
$LettSa1 = 15
$LettSa2 = 24
$LettE1  = 25
$LettE2  = 49
$LettD   = 50
$WherB1  = 2
$WherB2  = 2
$WherS1  = 3
$WherS2  = 4
$WherG1  = 5
$WherG2  = 9
$WherP1  = 10
$WherP2  = 14
$WherR1  = 15
$WherR2  = 24
$WherSa1 = 25
$WherSa2 = 29
$WherE1  = 30
$WherE2  = 49
$WherD   = 50
$MegaB1  = 1
$MegaB2  = 1
$MegaS1  = 2
$MegaS2  = 2
$MegaG1  = 3
$MegaG2  = 3
$MegaP1  = 4
$MegaP2  = 4
$MegaR1  = 5
$MegaR2  = 5
$MegaSa1 = 6
$MegaSa2 = 6
$MegaE1  = 7
$MegaE2  = 7
$MegaD   = 8
$EvenB1  = 5
$EvenB2  = 9
$EvenS1  = 10
$EvenS2  = 19
$EvenG1  = 20
$EvenG2  = 29
$EvenP1  = 30
$EvenP2  = 49
$EvenR1  = 50
$EvenR2  = 79
$EvenSa1 = 80
$EvenSa2 = 119
$EvenE1  = 120
$EvenE2  = 179
$EvenD   = 180
$CITOB1  = 2
$CITOB2  = 2
$CITOS1  = 3
$CITOS2  = 3
$CITOG1  = 4
$CITOG2  = 4
$CITOP1  = 5
$CITOP2  = 5
$CITOR1  = 6
$CITOR2  = 7
$CITOSa1 = 8
$CITOSa2 = 9
$CITOE1  = 10
$CITOE2  = 11
$CITOD   = 12
$BencB1  = 15
$BencB2  = 19
$BencS1  = 20
$BencS2  = 29
$BencG1  = 30
$BencG2  = 49
$BencP1  = 50
$BencP2  = 79
$BencR1  = 80
$BencR2  = 119
$BencSa1 = 120
$BencSa2 = 179
$BencE1  = 180
$BencE2  = 249
$BencD   = 250
$WaymB1  = 20
$WaymB2  = 29
$WaymS1  = 30
$WaymS2  = 49
$WaymG1  = 50
$WaymG2  = 79
$WaymP1  = 80
$WaymP2  = 119
$WaymR1  = 120
$WaymR2  = 179
$WaymSa1 = 180
$WaymSa2 = 249
$WaymE1  = 250
$WaymE2  = 349
$WaymD   = 350
$WebcB1  = 2
$WebcB2  = 2
$WebcS1  = 3
$WebcS2  = 4
$WebcG1  = 5
$WebcG2  = 7
$WebcP1  = 8
$WebcP2  = 11
$WebcR1  = 12
$WebcR2  = 17
$WebcSa1 = 18
$WebcSa2 = 24
$WebcE1  = 25
$WebcE2  = 39
$WebcD   = 40
$ApecB1  = 1
$ApecB2  = 0
$ApecS1  = 1
$ApecS2  = 0
$ApecG1  = 1
$ApecG2  = 1
$ApecP1  = 2
$ApecP2  = 1
$ApecR1  = 2
$ApecR2  = 1
$ApecSa1 = 2
$ApecSa2 = 1
$ApecE1  = 2
$ApecE2  = 2
$ApecD   = 3
$TenyB1  = 1
$TenyB2  = 1
$TenyS1  = 2
$TenyS2  = 2
$TenyG1  = 3
$TenyG2  = 3
$TenyP1  = 4
$TenyP2  = 4
$TenyR1  = 5
$TenyR2  = 5
$TenySa1 = 6
$TenySa2 = 6
$TenyE1  = 7
$TenyE2  = 7
$TenyD   = 8
$MicrB1  = 200
$MicrB2  = 299
$MicrS1  = 300
$MicrS2  = 499
$MicrG1  = 500
$MicrG2  = 799
$MicrP1  = 800
$MicrP2  = 1199
$MicrR1  = 1200
$MicrR2  = 1799
$MicrSa1 = 1800
$MicrSa2 = 2999
$MicrE1  = 3000
$MicrE2  = 4499
$MicrD   = 4500
$SmalB1  = 150
$SmalB2  = 199
$SmalS1  = 200
$SmalS2  = 299
$SmalG1  = 300
$SmalG2  = 499
$SmalP1  = 500
$SmalP2  = 799
$SmalR1  = 800
$SmalR2  = 1199
$SmalSa1 = 1200
$SmalSa2 = 1799
$SmalE1  = 1800
$SmalE2  = 2999
$SmalD   = 3000
$ReguB1  = 100
$ReguB2  = 149
$ReguS1  = 150
$ReguS2  = 199
$ReguG1  = 200
$ReguG2  = 299
$ReguP1  = 300
$ReguP2  = 499
$ReguR1  = 500
$ReguR2  = 799
$ReguSa1 = 800
$ReguSa2 = 1199
$ReguE1  = 1200
$ReguE2  = 1999
$ReguD   = 2000
$LargB1  = 3
$LargB2  = 9
$LargS1  = 10
$LargS2  = 19
$LargG1  = 20
$LargG2  = 29
$LargP1  = 30
$LargP2  = 49
$LargR1  = 50
$LargR2  = 79
$LargSa1 = 80
$LargSa2 = 119
$LargE1  = 120
$LargE2  = 179
$LargD   = 180
$FiveB1  = 1
$FiveB2  = 1
$FiveS1  = 2
$FiveS2  = 2
$FiveG1  = 3
$FiveG2  = 4
$FiveP1  = 5
$FiveP2  = 7
$FiveR1  = 8
$FiveR2  = 11
$FiveSa1 = 12
$FiveSa2 = 17
$FiveE1  = 18
$FiveE2  = 29
$FiveD   = 30
$FTFB1  = 15
$FTFB2  = 19
$FTFS1  = 20
$FTFS2  = 29
$FTFG1  = 30
$FTFG2  = 49
$FTFP1  = 50
$FTFP2  = 79
$FTFR1  = 80
$FTFR2  = 119
$FTFSa1 = 120
$FTFSa2 = 179
$FTFE1  = 180
$FTFE2  = 299
$FTFD   = 300
$CounB1  = 2
$CounB2  = 2
$CounS1  = 3
$CounS2  = 4
$CounG1  = 5
$CounG2  = 7
$CounP1  = 8
$CounP2  = 11
$CounR1  = 12
$CounR2  = 17
$CounSa1 = 18
$CounSa2 = 24
$CounE1  = 25
$CounE2  = 34
$CounD   = 35
$HiddB1  = 10
$HiddB2  = 14
$HiddS1  = 15
$HiddS2  = 19
$HiddG1  = 20
$HiddG2  = 29
$HiddP1  = 30
$HiddP2  = 49
$HiddR1  = 50
$HiddR2  = 79
$HiddSa1 = 80
$HiddSa2 = 119
$HiddE1  = 120
$HiddE2  = 199
$HiddD   = 200
$TwenB1  = 20
$TwenB2  = 29
$TwenS1  = 30
$TwenS2  = 49
$TwenG1  = 50
$TwenG2  = 79
$TwenP1  = 80
$TwenP2  = 119
$TwenR1  = 120
$TwenR2  = 179
$TwenSa1 = 180
$TwenSa2 = 269
$TwenE1  = 270
$TwenE2  = 399
$TwenD   = 400
$ConsB1  = 7
$ConsB2  = 13
$ConsS1  = 14
$ConsS2  = 29
$ConsG1  = 30
$ConsG2  = 59
$ConsP1  = 60
$ConsP2  = 121
$ConsR1  = 122
$ConsR2  = 182
$ConsSa1 = 183
$ConsSa2 = 273
$ConsE1  = 274
$ConsE2  = 364
$ConsD   = 365
$DistB1 = 1000
$DistB2 = 1199
$DistS1 = 1200
$DistS2 = 1499
$DistG1 = 1500
$DistG2 = 1999
$DistP1 = 2000
$DistP2 = 2899
$DistR1 = 2900
$DistR2 = 4199
$DistSa1 = 4200
$DistSa2 = 6399
$DistE1 = 6400
$DistE2 = 9999
$DistD = 10000
$UndeB1 = 1
$UndeB2 = 1
$UndeS1 = 2
$UndeS2 = 2
$UndeG1 = 3
$UndeG2 = 3
$UndeP1 = 4
$UndeP2 = 4
$UndeR1 = 5
$UndeR2 = 5
$UndeSa1 = 6
$UndeSa2 = 6
$UndeE1 = 7
$UndeE2 = 8
$UndeD = 10
$HostB1  = 1
$HostB2  = 1
$HostS1  = 2
$HostS2  = 2
$HostG1  = 3
$HostG2  = 4
$HostP1  = 5
$HostP2  = 7
$HostR1  = 8
$HostR2  = 11
$HostSa1 = 12
$HostSa2 = 17
$HostE1  = 18
$HostE2  = 29
$HostD   = 30
$MatrB1  = 20
$MatrB2  = 24
$MatrS1  = 25
$MatrS2  = 29
$MatrG1  = 30
$MatrG2  = 39
$MatrP1  = 40
$MatrP2  = 49
$MatrR1  = 50
$MatrR2  = 59
$MatrSa1 = 60
$MatrSa2 = 79
$MatrE1  = 80
$MatrE2  = 80
$MatrD   = 81
$TravB1  = 50
$TravB2  = 99
$TravS1  = 100
$TravS2  = 199
$TravG1  = 200
$TravG2  = 299
$TravP1  = 300
$TravP2  = 499
$TravR1  = 500
$TravR2  = 799
$TravSa1 = 800
$TravSa2 = 1199
$TravE1  = 1200
$TravE2  = 1799
$TravD   = 1800
$CoinB1  = 75
$CoinB2  = 99
$CoinS1  = 100
$CoinS2  = 199
$CoinG1  = 200
$CoinG2  = 299
$CoinP1  = 300
$CoinP2  = 499
$CoinR1  = 500
$CoinR2  = 799
$CoinSa1 = 800
$CoinSa2 = 1199
$CoinE1  = 1200
$CoinE2  = 1799
$CoinD   = 1800
$ElevB1  = 500
$ElevB2  = 999
$ElevS1  = 1000
$ElevS2  = 1499
$ElevG1  = 1500
$ElevG2  = 1999
$ElevP1  = 2000
$ElevP2  = 2499
$ElevR1  = 2500
$ElevR2  = 2999
$ElevSa1 = 3000
$ElevSa2 = 3499
$ElevE1  = 3500
$ElevE2  = 4499
$ElevD   = 4500
$LoweB1  = -1
$LoweB2  = -49
$LoweS1  = -50
$LoweS2  = -99
$LoweG1  = -100
$LoweG2  = -149
$LoweP1  = -150
$LoweP2  = -199
$LoweR1  = -200
$LoweR2  = -249
$LoweSa1 = -250
$LoweSa2 = -299
$LoweE1  = -300
$LoweE2  = -399
$LoweD   = -400
$CaleB1 = 100
$CaleB2 = 149
$CaleS1 = 150
$CaleS2 = 199
$CaleG1 = 200
$CaleG2 = 249
$CaleP1 = 250
$CaleP2 = 299
$CaleR1 = 300
$CaleR2 = 349
$CaleSa1 = 350
$CaleSa2 = 364
$CaleE1 = 365
$CaleE2 = 365
$CaleD  = 366
$WritB1 = 30
$WritB2 = 39
$WritS1 = 40
$WritS2 = 49
$WritG1 = 50
$WritG2 = 59
$WritP1 = 60
$WritP2 = 69
$WritR1 = 70
$WritR2 = 79
$WritSa1 = 80
$WritSa2 = 89
$WritE1 = 90
$WritE2 = 99
$WritD  = 100
$StatB1 = 10
$StatB2 = 14.99999
$StatS1 = 15
$StatS2 = 19.99999
$StatG1 = 20
$StatG2 = 29.99999
$StatP1 = 30
$StatP2 = 39.99999
$StatR1 = 40
$StatR2 = 49.99999
$StatSa1 = 50
$StatSa2 = 74.99999
$StatE1 = 75
$StatE2 = 99.99999
$StatD  = 100



	SHOWSTATUS msg="Assigning Values to Declared Variables" top=10 Left=10
	$01="<font face="
	$02="Verdana"
	$03=" size="
	$04="1"
	$05="Badges generated by <a href="
	$06="http://kylemills.net/Geocaching/BadgeGen/index.html"
	$07=">BadgeGen</a> $Version.<br><br>The Groundspeak Geocaching Logo is a registered trademark of <a href='http://www.groundspeak.com'>Groundspeak, Inc.</a> Used with permission. <br>The logo and geocaching.com icons are used with Permission.</font>"
	$10="width="
	$15="height="
	$1="<img border="
	$20="title="
	$23=">"
	$24="<p align="
	$26="center"
	$28="alt="
	$2="$_Quote"
	$3="0"
	$5=" "
	$6="src="
	$HoverExplaination="<b><font face=verdana size=1><i>Hover cursor over a badge to view a description.</i></font></b><br><br>"
	$BADGENUMBER=0
	$FirstLine1="<fsgtitle>Achievement Badges</fsgtitle>"
	$FirstLine2=">"
	$FirstLine="$FirstLine1$24$2$26$2$FirstLine2"
	$HTMLCode=""
	$HomeCoords =  "N56 33.292  W94 2.319"
	$HotLinkURL="http://www.gsak.net/bg/"
	$Link="$01$2$02$2$03$2$04$2$23$05$2$06$2$07"
	$MacUrl = "http://gsak.net/board/index.php?act=ST&f=39&t=14497"
	$MacroPath = SysInfo("MacroPath")
	$NextLevel="more to go up a level"
	$RANDOMVARR=0
	$RemoveVariables=FALSE
	$SaveLocation=$_AppData + "\Macros\BadgeTemp.htm"
	$Supplementary = "$MacroPath"+"\BadgeGenSupplementaryNotes.txt"
	$datasubmiturl = "http://www.kylemills.net/Geocaching/BadgeGen/data_collection/submit.php?"
	$timer = 0
	$TotalStateBadges=0
	$UndeString="0"
	$Units = SysInfo("Distance")
	$centre="$24$2$26$2$23"
	$distunits="m"
	$endcentre="</p>"
	$km="km"
	$newline="<br>"
	$TradName = "The Traditional Cacher"
	$MultName = "The Multi Cacher"
	$MystName = "The Mysterious Cacher"
	$VirtName = "The Virtual Cacher"
	$EartName = "The Earth Cacher"
	$LettName = "The Letterboxer"
	$WherName = "The Wherigo Cacher"
	$MegaName = "The Mega Social Cacher"
	$EvenName = "The Social Cacher"
	$CITOName = "The Environmental Cacher"
	$TenyName = "The Lost & Found Cacher"
	$BencName = "The Benchmarker"
	$WaymName = "The Waymarker"
	$MicrName = "The Micro Cacher"
	$SmalName = "The Small Cacher"
	$ReguName = "The Regular Cacher"
	$LargName = "The Large Cacher"
	$FiveName = "The Adventurous Cacher"
	$FTFName = "The FTF Addict"
	$CounName = "The Travelling Cacher"
	$HiddName = "The Cache Owner"
	$ElevName = "The Head-In-The-Clouds Award"
	$WebcName = "The Photogenic Cacher"
	$ApecName = "The Ape Cacher"
	$TwenName = "The Busy Cacher"
	$UndeName = "The Scuba-Cacher"
	$LoweName = "The Head-In-The-Ground Award"
	$HostName = "The Event Host"
	$ConsName = "The Daily Cacher"
	$CaleName = "The Calendar Cacher"
	$GeocName = "The Geocacher"
	$DistName = "The Long-Distance Cacher"
	$MatrName = "The Matrix Cacher"
	$TravName = "The Travel Bug"
	$CoinName = "The Coin Collector"
	$WritName = "The Author"
	$TradAlt="$TradName:  Awarded for finding $TradB1 or more Traditional type caches"
	$MultAlt="$MultName:  Awarded for finding $MultB1 or more Multi-cache type caches"
	$MystAlt="$MystName:  Awarded for finding $MystB1 or more Mystery/Puzzle type caches"
	$VirtAlt="$VirtName:  Awarded for finding $VirtB1 or more Virtual type caches"
	$EartAlt="$EartName:  Awarded for finding $EartB1 or more Earthcache type caches"
	$LettAlt="$LettName:  Awarded for finding $LettB1 or more Letterbox type caches"
	$WherAlt="$WherName:  Awarded for finding $WherB1 or more Wherigo type caches"
	$MegaAlt="$MegaName:  Awarded for attending $MegaB1 or more Mega Event caches"
	$EvenAlt="$EvenName:  Awarded for attending $EvenB1 or more Event caches"
	$CITOAlt="$CITOName:  Awarded for attending $CITOB1 or more Cache-In-Trash-Out (CITO) event caches"
	$TenyAlt="$TenyName:  Awarded for attending $TenyB1 or more Ten Years! event caches"
	$BencAlt="$BencName:  Awarded for finding $BencB1  or more Benchmarks"
	$WaymAlt="$WaymName:  Awarded for logging $WaymB1 or more Waymarks"
	$WebcAlt="$WebcName:  Awarded for taking pictures at $WebcB1 or more Webcam type caches"
	$ApecAlt="$ApecName:  Awarded for finding $ApecB1 or more Project: A.P.E. type caches"
	$MicrAlt="$MicrName:  Awarded for finding $MicrB1 or more micro sized cache containers"
	$SmalAlt="$SmalName:  Awarded for finding $SmalB1 or more small sized cache containers"
	$ReguAlt="$ReguName:  Awarded for finding $ReguB1 or more regular sized cache containers"
	$LargAlt="$LargName:  Awarded for finding $LargB1 or more large sized cache containers"
	$FiveAlt="$FiveName:  Awarded for finding $FiveB1 or more caches with a Difficulty/Terrain rating of 5/5"
	$FTFAlt="$FTFName:  Awarded for being the first cacher to find $FTFB1 or more caches"
	$CounAlt="$CounName:  Awarded for finding a cache in $CounB1 or more countries"
	$HiddAlt="$HiddName:  Awarded for hiding/hosting $HiddB1 or more geocaches/event caches"
	$ElevAlt="$ElevName:  Awarded for finding a cache above $ElevB1 metres in elevation"
	$LoweAlt="$LoweName:  Awarded for finding a cache below sea level"
	$TwenAlt="$TwenName:  Awarded for finding $TwenB1 or more caches in a single day"
	$ConsAlt="$ConsName:  Awarded for having $ConsB1 or more consecutive days with finds"
	$UndeAlt="$UndeName:  Awarded for finding $UndeB1 or more caches underwater"
	$HostAlt="$HostName:  Awarded for hosting $HostB1 or more event caches"
	$GeocAlt="$GeocName:  Awarded for finding $GeocB1 or more geocaches (any type)"
	$DistAlt="$DistName:  Awarded for finding a cache at least $DistB1 kilometres from home"
	$MatrAlt="$MatrName:  Awarded for finding $MatrB1 caches with unique Difficulty/Terrain ratings"
	$TradCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"TradP.png $2$5$20$2$TradAlt$2$5$28$2$TradAlt$2$23"
	$MultCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"MultP.png $2$5$20$2$MultAlt$2$5$28$2$MultAlt$2$23"
	$VirtCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"VirtP.png $2$5$20$2$VirtAlt$2$5$28$2$VirtAlt$2$23"
	$MystCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"MystP.png $2$5$20$2$MystAlt$2$5$28$2$MystAlt$2$23"
	$EartCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"EartP.png $2$5$20$2$EartAlt$2$5$28$2$EartAlt$2$23"
	$LettCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"LettP.png $2$5$20$2$LettAlt$2$5$28$2$LettAlt$2$23"
	$WherCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"WherP.png $2$5$20$2$WherAlt$2$5$28$2$WherAlt$2$23"
	$MegaCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"MegaP.png $2$5$20$2$MegaAlt$2$5$28$2$MegaAlt$2$23"
	$EvenCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"EvenP.png $2$5$20$2$EvenAlt$2$5$28$2$EvenAlt$2$23"
	$CitoCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"CITOP.png $2$5$20$2$CitoAlt$2$5$28$2$CitoAlt$2$23"
	$TenyCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"TenyP.png $2$5$20$2$TenyAlt$2$5$28$2$TenyAlt$2$23"
	$BencCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"BencP.png $2$5$20$2$BencAlt$2$5$28$2$BencAlt$2$23"
	$WaymCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"WaymP.png $2$5$20$2$WaymAlt$2$5$28$2$WaymAlt$2$23"
	$ApecCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"ApecP.png $2$5$20$2$ApecAlt$2$5$28$2$ApecAlt$2$23"
	$MicrCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"MicrP.png $2$5$20$2$MicrAlt$2$5$28$2$MicrAlt$2$23"
	$SmalCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"SmalP.png $2$5$20$2$SmalAlt$2$5$28$2$SmalAlt$2$23"
	$ReguCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"ReguP.png $2$5$20$2$ReguAlt$2$5$28$2$ReguAlt$2$23"
	$LargCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"LargP.png $2$5$20$2$LargAlt$2$5$28$2$LargAlt$2$23"
	$FiveCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"FiveP.png $2$5$20$2$FiveAlt$2$5$28$2$FiveAlt$2$23"
	$CounCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"CounP.png $2$5$20$2$CounAlt$2$5$28$2$CounAlt$2$23"
	$FTFCODEALT = "$1$2$3$2$5$6$2 $HotlinkURL"+"FTFP.png $2$5$20$2$FTFAlt$2$5$28$2$FTFAlt$2$23"
	$HiddCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"HiddP.png $2$5$20$2$HiddAlt$2$5$28$2$HiddAlt$2$23"
	$ElevCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"ElevP.png $2$5$20$2$ElevAlt$2$5$28$2$ElevAlt$2$23"
	$WebcCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"WebcP.png $2$5$20$2$WebcAlt$2$5$28$2$WebcAlt$2$23"
	$TwenCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"TwenP.png $2$5$20$2$TwenAlt$2$5$28$2$TwenAlt$2$23"
	$UndeCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"UndeP.png $2$5$20$2$UndeAlt$2$5$28$2$UndeAlt$2$23"
	$LoweCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"LoweP.png $2$5$20$2$LoweAlt$2$5$28$2$LoweAlt$2$23"
	$HostCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"HostP.png $2$5$20$2$HostAlt$2$5$28$2$HostAlt$2$23"
	$ConsCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"ConsP.png $2$5$20$2$ConsAlt$2$5$28$2$ConsAlt$2$23"
	$CaleCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"CaleP.png $2$5$20$2$CaleAlt$2$5$28$2$CaleAlt$2$23"
	$GeocCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"GGeocP.png $2$5$20$2$GeocAlt$2$5$28$2$GeocAlt$2$23"
	$DistCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"DistP.png $2$5$20$2$DistAlt$2$5$28$2$DistAlt$2$23"
	$MatrCodeAlt ="$1$2$3$2$5$6$2 $HotlinkURL"+"MatrP.png $2$5$20$2$MatrAlt$2$5$28$2$MatrAlt$2$23"
	$TravCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"TravP.png $2$5$20$2$TravAlt$2$5$28$2$TravAlt$2$23"
	$CoinCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"CoinP.png $2$5$20$2$CoinAlt$2$5$28$2$CoinAlt$2$23"
	$WritCODEALT ="$1$2$3$2$5$6$2 $HotlinkURL"+"WritP.png $2$5$20$2$WritAlt$2$5$28$2$WritAlt$2$23"
	GOSUB name=DeclareTotalBadges


	SHOWSTATUS msg=""  top=10 Left=10
ENDSUB #name=VarDec




BEGINSUB Name=MoreInfo
	SHOWSTATUS msg="Generating 'More Information' table: Converting units" top=10 Left=10 width=500
	#GOSUB name=convert

	$Datalinemax = $TotalNumberofBadges + $TotalStateBadges      # max number of badges  add easy to change
	$DatalineHave =""
	$DatalineNeed =""
	$DataLine7= ""


	#IF not(FileExists($database))
	SHOWSTATUS msg="Generating 'More Information' table: Creating SQLite report" top=10 Left=10 width=500
	GOSUB name=report                     # test database
	#ENDIF
	$data = Sqlite("open",$database)
	$datanumber1=2
	$Datalineheader="<tr>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + "> Icons &nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">Bronze&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">Silver&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">Gold&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">Platinum&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">Ruby&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">Sapphire&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">Emerald&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">Diamond&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">You Have&nbsp;</td>" + $_NewLine + "<td style=" + $_Quote + "background: #B3B3B3; align=center" + $_Quote + ">You Need&nbsp;</td>" + $_NewLine + "</tr>" + $_NewLine + "<tr>"

	$HTMLcode=$HTMLcode + $_NewLine + "<br>" + $_NewLine + "<Center>" + $_NewLine
	$HTMLcode=$HTMLcode + "<div id='tglbuton' style='display:none'>" + $_NewLine + "</div>" + $_NewLine
	$HTMLcode=$HTMLcode + "<span style='cursor:pointer; border: 1px solid #000000' onmousedown=  $_Quote  document.getElementById('genbutton').style.display = (getElementById('genbutton').style.display != 'none' ? 'none' : ''); $_Quote  >" + $_NewLine + " <b><font face=Verdana>&nbsp; More Information about the Badges &nbsp;</font></b></span> " + $_NewLine + " <span style='cursor:pointer; border: 1px solid #000000' onmousedown= $_Quote var s=(getElementById('tglbuton').style.display != 'none' ? 'none' : ''); document.getElementById('genbutton').style.display=s; $_Quote >" + $_NewLine + "</span> " + $_NewLine
	#$HTMLcode=$HTMLcode + "<br /><br />" + $_NewLine
	$HTMLcode=$HTMLcode + "<div id='genbutton' style='display:none'>" + $_NewLine
	$HTMLcode=$HTMLcode + "<div style='width:750px; background: #c8ddc8; font-weight: bold; line-height: 20px; font-size: 13px; color: navy; border: 1px solid #000000; text-align: center;;'>" + $_NewLine
	$HTMLcode=$HTMLcode + "</a>Generated on $_Today with BadgeGen $Version </div>" + $_NewLine
	$HTMLcode=$HTMLcode + "<table border=4 bordercolor=#000000 summary=" + $_Quote + $_Quote + ">"
	$HTMLcode=$HTMLcode + $Datalineheader


	WHILE $datanumber1 <=$Datalinemax                      # max number of bagdes
		SHOWSTATUS msg="Generating 'More Information' table: Building Row $datanumber1" top=10 Left=10 width=500
		$record = $datanumber1                                  # get each record field
		$Dataline3 = Sqlite("sql","Select Name From Chart where rowid =$record order by name" ,"" )
		$DataICON  = Sqlite("sql","Select HTML From Chart where rowid =$record order by name" ,"" )
		$DatalineB = Sqlite("sql","Select Bronze From Chart where rowid = $record order by name" ,"" )
		$DatalineS = Sqlite("sql","Select Silver From Chart  where rowid = $record order by name" ,"" )
		$DatalineG = Sqlite("sql","Select Gold From Chart where rowid = $record order by name" ,"" )
		$DatalineP = Sqlite("sql","Select Platinum From Chart where rowid = $record order by name" ,"" )
		$DatalineR = Sqlite("sql","Select Ruby From Chart where rowid = $record order by name" ,"" )
		$DatalineA = Sqlite("sql","Select Sapphire From Chart where rowid = $record order by name" ,"" )
		$DatalineE = Sqlite("sql","Select Emerald From Chart where rowid = $record order by name" ,"" )
		$DatalineD = Sqlite("sql","Select Diamond From Chart where rowid = $record order by name" ,"" )
		$DatalineHave = Sqlite("sql","Select CurrentCount From Chart where rowid = $record order by name" ,"" )
		$DatalineNeed = Sqlite("sql","Select Left From Chart where rowid = $record order by name" ,"" )

		IF  $DataIcon <> ""
			$dataStart = RegExPos("$_Quote",$DataICON,4) #missing lines
			$DataIcon = Substr($DataIcon,0 ,$dataStart-7) #missing lines
			$alt = Substr($DataIcon,$dataStart-10 ,$dataStart-7) #missing lines
			BEGINCASE
				$DatalineHTML  = "<td align=" + $_Quote + "center" + $_Quote + ">"
				$DatalineHTMLB = "<td align=" + $_Quote + "center" + $_Quote + ">"
				$DatalineHTMLS = "<td align=" + $_Quote + "center" + $_Quote + ">"
				$DatalineHTMLG = "<td align=" + $_Quote + "center" + $_Quote + ">"
				$DatalineHTMLP = "<td align=" + $_Quote + "center" + $_Quote + ">"
				$DatalineHTMLR = "<td align=" + $_Quote + "center" + $_Quote + ">"
				$DatalineHTMLA = "<td align=" + $_Quote + "center" + $_Quote + ">"
				$DatalineHTMLE = "<td align=" + $_Quote + "center" + $_Quote + ">"
				$DatalineHTMLD = "<td align=" + $_Quote + "center" + $_Quote + ">"


			CASE Abs(val($datalinehave)) <  Abs(val($datalineB))
				$DatalineTemp=$DataIcon +"X.png"
				$DatalineHTMLD ="<td align=" + $_Quote + "center" + $_Quote + ">"

			CASE Abs(val($datalinehave)) >= Abs(val($datalineB)) and Abs(val($datalinehave)) < Abs(val($datalineS))
				$DatalineTemp=$DataIcon + "B.png"                         #B
				$DatalineHTMLB="<td style=" + $_Quote + "background: #$DARK; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine

			CASE Abs(val($datalinehave )) >= Abs(val($datalineS)) and Abs(val($datalinehave)) < Abs(val($datalineG))
				$DatalineTemp=$DataIcon + "S.png"                        #S
				$DatalineHTMLB="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLS="<td style=" + $_Quote + "background: #$DARK; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine

			CASE Abs(val($datalinehave)) >= Abs(val($datalineG)) and Abs(val($datalinehave)) < Abs(val($datalineP))
				$DatalineTemp=$DataIcon + "G.png"                        #G
				$DatalineHTMLB="<td style=" + $_Quote + "background: #$LIGHT; " + $_Quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLS="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLG="<td style=" + $_Quote + "background: #$DARK; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine

			CASE Abs(val($datalinehave)) >= Abs(val($datalineP)) and Abs(val($datalinehave)) < Abs(val($datalineR))  #P
				$DatalineTemp=$DataIcon + "P.png"
				$DatalineHTMLB="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLS="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLG="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLP="<td style=" + $_Quote + "background: #$DARK; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine

			CASE Abs(val($datalinehave)) >= Abs(val($datalineR))  and Abs(val($datalinehave)) < Abs(val($datalineA))
				$DatalineTemp=$DataIcon + "R.png"                        #R
				$DatalineHTMLB="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLS="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLG="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLP="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLR="<td style=" + $_Quote + "background: #$DARK; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine

			CASE Abs(val($datalinehave)) >= Abs(val($datalineA)) and Abs(val($datalinehave)) < Abs(val($datalineE))
				$DatalineTemp=$DataIcon + "Sa.png"                        #Sa
				$DatalineHTMLB="<td style=" + $_Quote + "background: #$LIGHT; " + $_Quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLS="<td style=" + $_Quote + "background: #$LIGHT; " + $_Quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLG="<td style=" + $_Quote + "background: #$LIGHT; " + $_Quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLP="<td style=" + $_Quote + "background: #$LIGHT; " + $_Quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLR="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLA="<td style=" + $_Quote + "background: #$DARK; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine

			CASE Abs(val($datalinehave)) >= Abs(val($datalineE)) and Abs(val($datalinehave)) < Abs(val($datalineD))
				$DatalineTemp=$DataIcon + "E.png"                        #E
				$DatalineHTMLB="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLS="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLG="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLP="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLR="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLA="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLE="<td style=" + $_Quote + "background: #$DARK; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine

			CASE Abs(val($datalinehave)) >= Abs(val($datalineD))
				$DatalineTemp=$DataIcon + "D.png"                        #D
				$DatalineHTMLB="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLS="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLG="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLP="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLR="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLA="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLE="<td style=" + $_Quote + "background: #$LIGHT; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
				$DatalineHTMLD="<td style=" + $_Quote + "background: #$DARK; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+$_NewLine
			ENDCASE

			$dataicon = $datalinetemp
			#			IF $datanumber1=8 or $datanumber1=16 or $datanumber1=24 or $datanumber1=30 or $datanumber1=38 or $datanumber1=46 or $datanumber1=54
			#				$HTMLcode=$HTMLcode +$Datalineheader
			#			ENDIF

			$DataIcon=replace(">"," ",$DataIcon)               # ste up to and Size to the icons
			$DataIcon=Replace(" http://","http://",$DataIcon)
			$Size="60"                      # size of icon
			$HTMLcode=$HTMLcode + "<td rowspan=2  align=" + $_Quote + " center" + $_Quote + ">" + $DataIcon +"$2$5$10$2$Size$2$5$15$2$Size$2$5"+">" + $_NewLine
			$HTMLcode=$HTMLcode + "</td><td colspan=10 style=" + $_Quote + "background: #F2F2F2; " + $_quote + "align=" + $_Quote + "center" + $_Quote + ">"+ $Dataline3  +"</td></tr><tr>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTMLB + $datalineB +"</td>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTMLS + $datalineS +"</td>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTMLG + $datalineG +"</td>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTMLP + $datalineP +"</td>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTMLR + $datalineR +"</td>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTMLA + $datalineA +"</td>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTMLE + $datalineE +"</td>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTMLD + $datalineD +"</td>"+$_NewLine
			$HTMLcode=$HTMLcode + "<td  style=" + $_Quote + "background: #$DARK;" + $_quote + "align=" + $_quote + "center" + $_Quote + " >"  + $datalineHave +"</center></td>"+$_NewLine
			$HTMLcode=$HTMLcode + $DatalineHTML + $datalineNeed +"</td></tr>"+$_NewLine + $_NewLine
		ENDIF
		$Datanumber1=$datanumber1+1                                   # next step
	ENDWHILE
	SHOWSTATUS msg="Generating 'More Information' table: " top=10 Left=10 width=500
	$HTMLcode=$HTMLcode + "</table></div>"
	IF $ShowBelt
		#$HTMLcode=$HTMLcode + MimeDecode($BeltExplanationHTML)
		GOSUB name="BeltHTMLMod"
	ENDIF
	#$HTMLcode=$HTMLcode + "</Table></div>"

ENDSUB #name=MoreInfo


BEGINSUB name=BeltHTMLMOD
	SHOWSTATUS msg="Generating 'More Information' table: Building Belt Information" top=10 Left=10 width=500
	DECLARE Var= $DataTemp Type=String
	# Temp files of icons
	$HTMLCodeyes="<img src=" + $_Quote + "http://www.geocaching.com/images/icons/icon_enabled.gif" +  $_Quote + " width=" + $_Quote + "14" + $_Quote + ">"
	$HTMLCodeNo= "<img src=" + $_Quote + "http://www.geocaching.com/images/icons/icon_disabled.gif" +  $_Quote + " width=" + $_Quote + "14" + $_Quote + ">"
	$Spaces2="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
	#Size of icon
	$FontSIZE = "</font> <Font colour="+$_Quote + "Black" + $_Quote + "Point-size= " + $_quote + "8" + $_Quote + ">"

	$HTMLcode=$HTMLcode + "<div id='tglbuton' style='display:none'>" + $_NewLine + "</div>" + $_NewLine
	$HTMLcode=$HTMLcode + "<span style='cursor:pointer; border: 1px solid #000000' onmousedown=  " + $_Quote + "  document.getElementById('Belt').style.display = (getElementById('Belt').style.display != 'none' ? 'none' : ''); " + $_Quote + "  >" + $_NewLine + " <b><font face=Verdana>&nbsp; More Information about the Belt &nbsp;</font></b></span> " + $_NewLine + " <span style='cursor:pointer; border: 1px solid #000000' onmousedown= " + $_Quote + " var s=(getElementById('tglbuton').style.display != 'none' ? 'none' : ''); document.getElementById('Belt').style.display=s; " + $_Quote + " >" + $_NewLine + "</span> " + $_NewLine
	$HTMLcode=$HTMLcode + "<br /><br />" + $_NewLine
	$HTMLcode=$HTMLcode + "<div id='Belt' style='display:none'><br>" + $_NewLine

	$HTMLCode=$HTMLcode +"<table border=" + $_Quote + "2" + $_Quote + " cellspacing=" + $_Quote +  "7"  + $_Quote  + " cellpadding="  + $_Quote  + "7"  + $_Quote  + " width=" + $_Quote + "750" + $_Quote + " frame=" + $_Quote + "box" + $_Quote + " align=" + $_Quote + "" + $_Quote + " bordercolor=" + $_Quote + "white" + $_Quote + " bordercolordark=" + $_Quote + "White" + $_Quote + " bordercolorlight=" + $_Quote + "White" + $_Quote + " style= " + $_Quote + "border-collapse: separate;" + $_Quote + ">"
	$HTMLCode=$HTMLCode + "<tr><td align=" + $_Quote + " center" + $_Quote + " colspan=" + $_Quote + "78" + $_Quote + " bgcolor=" + $_Quote + "silver" + $_Quote + "><b>"
	$HTMLCode=$HTMLCode + "<span ><Center>Geocaching Belts</center></span></b></font></td></tr><tr><td align=" + $_Quote + "left" + $_Quote + " valign=" + $_Quote + "top" + $_Quote + ">"
	#white
	$HTMLCode=$HTMLCode + "<img src=" + $_Quote + "$HotlinkURL"+"Belt_White.png" + $_Quote + " align=" + $_Quote + "right" + $_Quote + " width=" + $_Quote + "140" + $_Quote + " border=" + $_Quote + "0" + $_Quote + " style=" + $_Quote + "border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial;" + $_Quote + " /><b style=" + $_Quote + "font-weight: bold;" + $_Quote + ">WHITE:</b><b>"
	$HTMLCode=$HTMLCode + "This is awarded if a cacher doesn't qualify for another colour belt</font>"
	$HTMLCODE= $Htmlcode + "<center>" + $HTMLCodeyes + "</center>"
	$HTMLCODE= $Htmlcode + "</td></tr><tr><td align=" + $_Quote + "left" + $_Quote + " valign=" + $_Quote + "top" + $_Quote + "><font face=" + $_Quote + "Verdana" + $_Quote + ">"

	#YELLOW
	$HTMLCode=$HTMLCode + "<img src=" + $_Quote + "$HotlinkURL"+"Belt_Yellow.png" + $_Quote + " align=" + $_Quote + "right" + $_Quote + " width=" + $_Quote + "140" + $_Quote + " border=" + $_Quote + "0" + $_Quote + " style=" + $_Quote + "border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial;" + $_Quote + " /><b style=" + $_Quote + "font-weight: bold;" + $_Quote + ">YELLOW:</b>"
	$HTMLCode=$HTMLCode + "This is awarded if the following conditions are met:<br />"
	IF  $Geoc>=100
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Geoc)</Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Geoc)</Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  100 cache finds (any type)"+ $DataTemp +" AND<br />"
	IF  $Hidd >= 5
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Hidd)</Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Hidd) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeNo
	ENDIF
	$HTMLCode=$HTMLCode + "  5 cache hides  $DataTemp"
	$HTMLCode=$HTMLCode + "</td></tr><tr>"
	#ORANGE
	$HTMLCode=$HTMLCode + "<td align=" + $_Quote + "left" + $_Quote + " valign=" + $_Quote + "top" + $_Quote + "><font face=" + $_Quote + "Verdana" + $_Quote + ">"
	$HTMLCode=$HTMLCode + "<img border=" + $_Quote + "0" + $_Quote + " src=" + $_Quote + "$HotlinkURL"+"Belt_Orange.png" + $_Quote + " align=" + $_Quote + "right" + $_Quote + " width=" + $_Quote + "140" + $_Quote + " style=" + $_Quote + "border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial;" + $_Quote + " /><b style=" + $_Quote + "font-weight: bold;" + $_Quote + ">ORANGE:</b>"
	$HTMLCode=$HTMLCode + "This is awarded if the following conditions are met:<br />"
	IF  $Geoc>=300
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Geoc) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$HTMLCODE= $Htmlcode +$HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Geoc) </Font>"
	ENDIF
	$HTMLCode=$HTMLCode + "  300 cache finds (any type) $Datatemp AND<br />"
	IF  $Hidd >= 10
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Hidd) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Hidd) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  10 cache hides $DataTemp"
	$HTMLCode=$HTMLCode + "</td></tr><tr>"
	#Green
	$HTMLCode=$HTMLCode + "<td align=" + $_Quote + "left" + $_Quote + " valign=" + $_Quote + "top" + $_Quote + "><font face=" + $_Quote + "Verdana" + $_Quote + ">"
	$HTMLCode=$HTMLCode + "<img border=" + $_Quote + "0" + $_Quote + " src=" + $_Quote + "$HotlinkURL"+"Belt_Green.png" + $_Quote + " align=" + $_Quote + "right" + $_Quote + " width=" + $_Quote + "140" + $_Quote + " style=" + $_Quote + "border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial;" + $_Quote + " /><b style=" + $_Quote + "font-weight: bold;" + $_Quote + ">GREEN:</b>"
	$HTMLCode=$HTMLCode + "This is awarded if the following conditions are met:<br />"
	IF  $Geoc>=500
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Geoc) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Geoc) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  500 cache finds (any type) $Datatemp AND<br />"
	IF  $Hidd >= 15
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Hidd) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$HTMLCODE= $Htmlcode +$HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Hidd) </Font>"
	ENDIF
	$HTMLCode=$HTMLCode + "  15 cache hides $datatemp AND<br />"
	$datanumber1=$Even + $Mega+ $Cito + $Teny
	IF  $datanumber1 >= 1
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($datanumber1) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($datanumber1) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  1 event (any type) $DataTemp attended AND <br/>"
	IF  $State >= 2
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($State) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($State) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least one cache find in 2 distinct states $datatemp"
	$HTMLCode=$HTMLCode + "</td></tr><tr>"
	#Blue
	$HTMLCode=$HTMLCode + "<td align=" + $_Quote + "left" + $_Quote + " valign=" + $_Quote + "top" + $_Quote + "><font face=" + $_Quote + "Verdana" + $_Quote + ">"
	$HTMLCode=$HTMLCode + "<img border=" + $_Quote + "0" + $_Quote + " src=" + $_Quote + "$HotlinkURL"+"Belt_Blue.png" + $_Quote + " align=" + $_Quote + "right" + $_Quote + " width=" + $_Quote + "140" + $_Quote + " style=" + $_Quote + "border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial;" + $_Quote + " /><b style=" + $_Quote + "font-weight: bold;" + $_Quote + ">BLUE:</b>"
	$HTMLCode=$HTMLCode + "This is awarded if the following conditions are met:<br />"

	IF  $Geoc>=1000
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Geoc) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Geoc) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  1000 cache finds (any type) $DataTemp AND<br />"
	IF  $Hidd >= 20
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Hidd) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Hidd) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  20 cache hides $DataTemp AND<br />"
	$datanumber1=$Even + $Mega+ $Cito + $Teny
	IF   $datanumber1 >= 3
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($datanumber1) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($datanumber1) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  3 events (any type) $dataTemp attended<br />"
	IF  $State >= 4
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($State) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$HTMLCODE= $Htmlcode +$HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Stat) </Font>"
	ENDIF
	$HTMLCode=$HTMLCode + "  at least one cache find in 4 distinct states $datatemp</td></tr>"
	$HTMLCode=$HTMLCode + "<tr><td align=" + $_Quote + "left" + $_Quote + " valign=" + $_Quote + "top" + $_Quote + "><font face=" + $_Quote + "Verdana" + $_Quote + ">"

	#Brown

	$HTMLCode=$HTMLCode + "<img border=" + $_Quote + "0" + $_Quote + " src=" + $_Quote + "$HotlinkURL"+"Belt_Brown.png" + $_Quote + "align=" + $_Quote + "right" + $_Quote + " width=" + $_Quote + "140" + $_Quote + " style=" + $_Quote + "border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial;" + $_Quote + " /><b style=" + $_Quote + "font-weight: bold;" + $_Quote + ">BROWN:</b>This is awarded if the following conditions are met:<br />"
	IF  $Geoc >= 2000
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Geoc) </Font>"
	ELSE
		$HTMLCODE= $Htmlcode +$HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Geoc) </Font>"
	ENDIF
	$HTMLCode=$HTMLCode + "  2000 cache finds (any type) $DataTemp AND<br />"
	IF  $Hidd >= 50
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Hidd) </Font>"
	ELSE
		$HTMLCODE= $Htmlcode +$HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Hidd) </Font>"
	ENDIF
	$HTMLCode=$HTMLCode + "  50 cache hides $Datatemp AND<br />"
	$datanumber1=$Even + $Mega+ $Cito + $Teny
	IF  $datanumber1 >= 3
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($datanumber1) </Font >"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$HTMLCODE= $Htmlcode +$HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($datanumber1) </Font>"
	ENDIF
	$HTMLCode=$HTMLCode + "  3 events (any type) $dataTemp attended AND<br />"
	IF  $State >= 8
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($State) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($State) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least one cache find in 8 distinct states $Datatemp AND<br />"
	IF  $Host >= 1
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Host) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Host) </Font>"
		$HTMLCODE= $Htmlcode +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  hosted one event (any type) $Datatemp AND<br/> "
	$HTMLCode=$HTMLCode + "  any 5 of the following conditions are met:<br/>$FontSIZE "
	IF  $FTF >= 50
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($FTF)$FontSIZE  "
		$HTMLCODE= $Htmlcode + $Spaces2 +$HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($FTF)$FontSIZE  "
		$HTMLCODE= $Htmlcode + $Spaces2 +$HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least 50 FTFs  $datatemp $FontSIZE<br>"
	IF  $Coun >= 4
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Coun) $Fontsize "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Coun) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least one find in 4 distinct countries $datatemp <br>"
	IF  $Matr >= 72
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Matr) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Matr) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least 72 out of the 81 D/T $datatemp combinations completed <br>"
	IF  $Five >= 1
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Five)$FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Five) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  one 5/5 D/T rated cache $datatemp<br>"
	IF   $Cons >= 30
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Cons)$FontSIZE  "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Cons) $FontSIZE "
	ENDIF
	$HTMLCode=$HTMLCode + "  30 consecutive days with a cache find $Datatemp <br>"
	IF  $Twen >= 50
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Twen) $FontSIZE"
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Twen) $FontSIZE "
	ENDIF
	$HTMLCode=$HTMLCode + "  50 caches found on a single day $datatemp <br>"
	IF  $Dist >= 500
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Dist)$FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Dist) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  Furthest cache found 500km or more away from home $datatemp $FontSIZE<br>"
	$NumContainerGolds = 0
	IF $Micr >= $MicrG1
		$NumContainerGolds = $NumContainerGolds + 1
	ENDIF
	IF $Smal >= $SmalG1
		$NumContainerGolds = $NumContainerGolds + 1
	ENDIF
	IF $Regu >= $ReguG1
		$NumContainerGolds = $NumContainerGolds + 1
	ENDIF
	IF $Larg >= $LargG1
		$NumContainerGolds = $NumContainerGolds + 1
	ENDIF
	IF  $NumContainerGolds >= 3
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($NumContainerGolds) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($NumContainerGolds) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  3 gold badges for container size $datatemp <br>"
	IF  $Elev >= 1000
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Elev) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Elev) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least one cache found above 1000m elevation $Datatemp <br>"
	IF  $HiddTypes >= 3
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($HiddTypes) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($HiddTypes) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  3 distinct types of caches hidden(any types incl. events) $datatemp </font> "
	$HTMLCode=$HTMLCode + "</td></tr><tr><td align=" + $_Quote + "left" + $_Quote + " valign=" + $_Quote + "top" + $_Quote + "><font face=" + $_Quote + "Verdana" + $_Quote + ">"
	#BLACK

	$HTMLCode=$HTMLCode + "<img border=" + $_Quote + "0" + $_Quote + " src=" + $_Quote + "$HotlinkURL"+"Belt_Black.png" + $_Quote + " align=" + $_Quote + "right" + $_Quote + " width=" + $_Quote + "140" + $_Quote + " style=" + $_Quote + "border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial;" + $_Quote + " /><b style=" + $_Quote + "font-weight: bold;" + $_Quote + ">BLACK:</b>This is awarded if the following conditions are met:<br />"
	IF  $Geoc >= 3000
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Geoc) </Font>"
		$HTMLCODE= $Htmlcode + $HTMLCodeyes
	ELSE
		$HTMLCODE= $Htmlcode + $HTMLCodeno
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Geoc) </Font>"
	ENDIF
	$HTMLCode=$HTMLCode + "  3000 cache finds (any type) $datatemp <i>AND</i><br />"
	IF  $Hidd >= 50
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Hidd) </Font>"
		$HTMLCODE= $Htmlcode +  $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Hidd) </Font>"
		$HTMLCODE= $Htmlcode +  $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  50 cache hides $Datatemp <i>AND</i><br />"
	$datanumber1=$Even + $Mega+ $Cito + $Teny
	IF  $datanumber1 >= 3
		$HTMLCODE= $Htmlcode +  $HTMLCodeyes
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($datanumber1) </Font>"
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($datanumber1) </Font>"

		$HTMLCODE= $Htmlcode +  $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  3 events (any type) attended $DataTemp <i>AND</i><br />"
	IF  $State >= 8
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($State) </Font>"
		$HTMLCODE= $Htmlcode +  $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($State) </Font>"
		$HTMLCODE= $Htmlcode +  $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least one cache find in 8 distinct states $Datatemp <i>AND</i><br />"
	IF  $Host >= 1
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Host) </Font>"
		$HTMLCODE= $Htmlcode +   $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Host) </Font>"
		$HTMLCODE= $Htmlcode +  $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  hosted one event (any type)$datatemp <i>AND</i><br />"
	$HTMLCode=$HTMLCode + "  any 8 of the following conditions are met: <br></font> $FontSIZE"
	IF  $FTF >= 50
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($FTF) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($FTF) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least 50 FTFs $datatemp <i>OR</i><br>"
	IF  $Coun >= 8
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Coun) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Coun) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least one find in 8 distinct countries $datatemp <br>"
	IF  $Matr >= 81
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Matr) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Matr) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  81 D/T combinations completed $datatemp (100%) <i>OR</i><br>"
	IF  $Five >= 1
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Five) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Five) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  one 5/5 D/T rated cache $datatemp <i>OR</i><br>"
	IF  $Cons >= 90
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Cons) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Cons) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  90 consecutive days with a cache find $datatemp <i>OR</i><br>"
	IF  $Twen >= 50
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Twen) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Twen) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeNO
	ENDIF
	$HTMLCode=$HTMLCode + "  50 caches found on a single day $datatemp <i>OR</i><br>"
	IF  $Dist >= 500
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Dist) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Dist)$FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  Furthest cache found 500km or more away from home $Datatemp <i>OR</i><br>"
	$BlackConditions = 0
	IF $FTF >= 50
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $Coun >= 8
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $Matr = 81
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $Five >= 1
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $Cons >= 90
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $Twen >= 50
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $Dist >= 500
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $NumContainerGolds >= 3
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $Elev >= 1000
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $HiddTypes >= 5
		$BlackConditions = $BlackConditions + 1
	ENDIF
	IF $NumContainerGolds >= 3
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($NumContainerGolds) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($NumContainerGolds) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  3 gold badges for container size $Datatemp <i>OR</i><br>"
	IF  $Elev >= 1000
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($Elev) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($Elev) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  at least one cache found above 1000m elevation $datatemp <i>OR</i><br>"
	IF $HiddTypes>= 5
		$DataTemp="<Font color=" + $_Quote +"GREEN" +$_Quote +"> ($HiddTypes) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeyes
	ELSE
		$DataTemp="<Font color=" + $_Quote +"RED" +$_Quote +"> ($HiddTypes) $FontSIZE "
		$HTMLCODE= $Htmlcode + $Spaces2 + $HTMLCodeno
	ENDIF
	$HTMLCode=$HTMLCode + "  5 distinct types of caches hidden $datatemp(any types incl. events)</font> "
	$HTMLCode=$HTMLCode + "</td></tr></table></div></center></span>"
ENDSUB



BEGINSUB name=Report
	BEGINSUB name=InitializeSQLiteDatabase
		SHOWSTATUS msg="Initializing SQLite Database" top=10 Left=10
		$database = "$_AppData\macros\BadgeGenData.db3"
		IF not(FileExists($database))
			$data = Sqlite("create",$database)
		ENDIF
		$data = Sqlite("open",$database)
		$data = Sqlite("sql","Drop table if exists chart")
		$data = Sqlite("sql","Create table if not exists Chart ('order' 'number'(1),'Name' 'Text' , 'HTML' 'text', 'Bronze' 'number(7)', 'Silver' 'number(7)', 'Gold' 'number(7)', 'Platinum' 'number(7)', 'Ruby' 'number(7)', 'Sapphire' 'number(7)', 'Emerald' 'number(7)', 'Diamond' 'number(7)', 'CurrentCount' 'number(7)', 'Left' 'number(7)')")
		$data = Sqlite("sql","insert into chart values('1','CacheName','Code','Bronze','Silver','Gold','Platinum','Ruby','Sapphire','Emerald','Diamond','$hh','$nn')")
		$data = Sqlite("close","")
		SHOWSTATUS msg="" display=off
	ENDSUB #InitializeSQLiteDatabase
	$unitsshort = "m"
	$unitsshortbig = "km"
	$database = "$_AppData\macros\BadgeGenData.db3"
	$data = Sqlite("open",$database)
	$data = Sqlite("sql","insert into chart values('','$GeocName','$GeocCodeAlt','$GeocB1', '$GeocS1', '$GeocG1', '$GeocP1', '$GeocR1', '$GeocSa1', '$GeocE1', '$GeocD', '$Geoc',  '$Geocleft')")
	$data = Sqlite("sql","insert into chart values('','$tradName','$TradCodeAlt','$TradB1', '$TradS1', '$TradG1', '$TradP1', '$TradR1', '$TradSa1', '$TradE1', '$TradD', '$Trad',  '$tradleft')")
	$data = Sqlite("sql","insert into chart values('','$MultName','$MultCodeAlt','$MultB1', '$MultS1', '$MultG1', '$MultP1', '$MultR1', '$MultSa1', '$MultE1', '$MultD', '$Mult',  '$Multleft')")
	$data = Sqlite("sql","insert into chart values('','$MystName','$MystCodeAlt','$MystB1', '$MystS1', '$MystG1', '$MystP1', '$MystR1', '$MystSa1', '$MystE1', '$MystD', '$Myst',  '$Mystleft')")
	$data = Sqlite("sql","insert into chart values('','$VirtName','$VirtCodeAlt','$VirtB1', '$VirtS1', '$VirtG1', '$VirtP1', '$VirtR1', '$VirtSa1', '$VirtE1', '$VirtD', '$Virt',  '$Virtleft')")
	$data = Sqlite("sql","insert into chart values('','$EartName','$EartCodeAlt','$EartB1', '$EartS1', '$EartG1', '$EartP1', '$EartR1', '$EartSa1', '$EartE1', '$EartD', '$Eart',  '$Eartleft')")
	$data = Sqlite("sql","insert into chart values('','$LettName','$LettCodeAlt','$LettB1', '$LettS1', '$LettG1', '$LettP1', '$LettR1', '$LettSa1', '$LettE1', '$LettD', '$Lett',  '$Lettleft')")
	$data = Sqlite("sql","insert into chart values('','$WherName','$WherCodeAlt','$WherB1', '$WherS1', '$WherG1', '$WherP1', '$WherR1', '$WherSa1', '$WherE1', '$WherD', '$Wher',  '$Wherleft')")
	$data = Sqlite("sql","insert into chart values('','$MegaName','$MegaCodeAlt','$MegaB1', '$MegaS1', '$MegaG1', '$MegaP1', '$MegaR1', '$MegaSa1', '$MegaE1', '$MegaD', '$Mega',  '$Megaleft')")
	$data = Sqlite("sql","insert into chart values('','$EvenName','$EvenCodeAlt','$EvenB1', '$EvenS1', '$EvenG1', '$EvenP1', '$EvenR1', '$EvenSa1', '$EvenE1', '$EvenD', '$Even',  '$Evenleft')")
	$data = Sqlite("sql","insert into chart values('','$CitoName','$CitoCodeAlt','$CitoB1', '$CitoS1', '$CitoG1', '$CitoP1', '$CitoR1', '$CitoSa1', '$CitoE1', '$CitoD', '$Cito',  '$Citoleft')")
	$data = Sqlite("sql","insert into chart values('','$TenyName','$TenyCodeAlt','$TenyB1', '$TenyS1', '$TenyG1', '$TenyP1', '$TenyR1', '$TenySa1', '$TenyE1', '$TenyD', '$Teny',  '$Tenyleft')")
	$data = Sqlite("sql","insert into chart values('','$BencName','$BencCodeAlt','$BencB1', '$BencS1', '$BencG1', '$BencP1', '$BencR1', '$BencSa1', '$BencE1', '$BencD', '$Benc',  '$Bencleft')")
	$data = Sqlite("sql","insert into chart values('','$WaymName','$WaymCodeAlt','$WaymB1', '$WaymS1', '$WaymG1', '$WaymP1', '$WaymR1', '$WaymSa1', '$WaymE1', '$WaymD', '$Waym',  '$Waymleft')")
	$data = Sqlite("sql","insert into chart values('','$WebcName','$WebcCodeAlt','$WebcB1', '$WebcS1', '$WebcG1', '$WebcP1', '$WebcR1', '$WebcSa1', '$WebcE1', '$WebcD', '$Webc',  '$Webcleft')")
	$data = Sqlite("sql","insert into chart values('','$ApecName','$ApecCodeAlt','$ApecB1', '$ApecS1', '$ApecG1', '$ApecP1', '$ApecR1', '$ApecSa1', '$ApecE1', '$ApecD', '$Apec',  '$Apecleft')")
	$data = Sqlite("sql","insert into chart values('','$MicrName','$MicrCodeAlt','$MicrB1', '$MicrS1', '$MicrG1', '$MicrP1', '$MicrR1', '$MicrSa1', '$MicrE1', '$MicrD', '$Micr',  '$Micrleft')")
	$data = Sqlite("sql","insert into chart values('','$SmalName','$SmalCodeAlt','$SmalB1', '$SmalS1', '$SmalG1', '$SmalP1', '$SmalR1', '$SmalSa1', '$SmalE1', '$SmalD', '$Smal',  '$Smalleft')")
	$data = Sqlite("sql","insert into chart values('','$ReguName','$ReguCodeAlt','$ReguB1', '$ReguS1', '$ReguG1', '$ReguP1', '$ReguR1', '$ReguSa1', '$ReguE1', '$ReguD', '$Regu',  '$Reguleft')")
	$data = Sqlite("sql","insert into chart values('','$LargName','$LargCodeAlt','$LargB1', '$LargS1', '$LargG1', '$LargP1', '$LargR1', '$LargSa1', '$LargE1', '$LargD', '$Larg',  '$Largleft')")
	$data = Sqlite("sql","insert into chart values('','$FiveName','$FiveCodeAlt','$FiveB1', '$FiveS1', '$FiveG1', '$FiveP1', '$FiveR1', '$FiveSa1', '$FiveE1', '$FiveD', '$Five',  '$Fiveleft')")
	$data = Sqlite("sql","insert into chart values('','$FTFName','$FTFCodeAlt','$FTFB1', '$FTFS1', '$FTFG1', '$FTFP1', '$FTFR1', '$FTFSa1', '$FTFE1', '$FTFD', '$FTF',  '$FTFleft')")
	$data = Sqlite("sql","insert into chart values('','$CounName','$CounCodeAlt','$CounB1', '$CounS1', '$CounG1', '$CounP1', '$CounR1', '$CounSa1', '$CounE1', '$CounD', '$Coun',  '$Counleft')")
	$data = Sqlite("sql","insert into chart values('','$HiddName','$HiddCodeAlt','$HiddB1', '$HiddS1', '$HiddG1', '$HiddP1', '$HiddR1', '$HiddSa1', '$HiddE1', '$HiddD', '$Hidd',  '$Hiddleft')")
	$data = Sqlite("sql","insert into chart values('','$ElevName','$ElevCodeAlt','$ElevB1$unitsshort', '$ElevS1$unitsshort', '$ElevG1$unitsshort', '$ElevP1$unitsshort', '$ElevR1$unitsshort', '$ElevSa1$unitsshort', '$ElevE1$unitsshort', '$ElevD$unitsshort', '$Elev$unitsshort',  '$Elevleft$unitsshort')")
	$data = Sqlite("sql","insert into chart values('','$LoweName','$LoweCodeAlt','$LoweB1$unitsshort', '$LoweS1$unitsshort', '$LoweG1$unitsshort', '$LoweP1$unitsshort', '$LoweR1$unitsshort', '$LoweSa1$unitsshort', '$LoweE1$unitsshort', '$LoweD$unitsshort', '$Lowe$unitsshort',  '$Loweleft$unitsshort')")
	$data = Sqlite("sql","insert into chart values('','$TwenName','$TwenCodeAlt','$TwenB1', '$TwenS1', '$TwenG1', '$TwenP1', '$TwenR1', '$TwenSa1', '$TwenE1', '$TwenD', '$Twen',  '$Twenleft')")
	$data = Sqlite("sql","insert into chart values('','$ConsName','$ConsCodeAlt','$ConsB1', '$ConsS1', '$ConsG1', '$ConsP1', '$ConsR1', '$ConsSa1', '$ConsE1', '$ConsD', '$Cons',  '$Consleft')")
	$data = Sqlite("sql","insert into chart values('','$CaleName','$CaleCodeAlt','$CaleB1', '$CaleS1', '$CaleG1', '$CaleP1', '$CaleR1', '$CaleSa1', '$CaleE1', '$CaleD', '$Cale',  '$Caleleft')")
	$data = Sqlite("sql","insert into chart values('','$UndeName','$UndeCodeAlt','$UndeB1', '$UndeS1', '$UndeG1', '$UndeP1', '$UndeR1', '$UndeSa1', '$UndeE1', '$UndeD', '$Unde',  '$Undeleft')")
	$data = Sqlite("sql","insert into chart values('','$HostName','$HostCodeAlt','$HostB1', '$HostS1', '$HostG1', '$HostP1', '$HostR1', '$HostSa1', '$HostE1', '$HostD', '$Host',  '$Hostleft')")
	
	$data = Sqlite("sql","insert into chart values('','$WritName','$WritCodeAlt','$WritB1', '$WritS1', '$WritG1', '$WritP1', '$WritR1', '$WritSa1', '$WritE1', '$WritD', '$Writ',  '$Writleft')")
	$data = Sqlite("sql","insert into chart values('','$DistName','$DistCodeAlt','$DistB1$unitsshortbig', '$DistS1$unitsshortbig', '$DistG1$unitsshortbig', '$DistP1$unitsshortbig', '$DistR1$unitsshortbig', '$DistSa1$unitsshortbig', '$DistE1$unitsshortbig', '$DistD$unitsshortbig', '$Dist$unitsshortbig',  '$Distleft$unitsshortbig')")
	$data = Sqlite("sql","insert into chart values('','$MatrName','$MatrCodeAlt','$MatrB1', '$MatrS1', '$MatrG1', '$MatrP1', '$MatrR1', '$MatrSa1', '$MatrE1', '$MatrD', '$Matr',  '$Matrleft')")
	$data = Sqlite("sql","insert into chart values('','$TravName','$TravCodeAlt','$TravB1', '$TravS1', '$TravG1', '$TravP1', '$TravR1', '$TravSa1', '$TravE1', '$TravD', '$Trav',  '$Travleft')")
	$data = Sqlite("sql","insert into chart values('','$CoinName','$CoinCodeAlt','$CoinB1', '$CoinS1', '$CoinG1', '$CoinP1', '$CoinR1', '$CoinSa1', '$CoinE1', '$CoinD', '$Coin',  '$Coinleft')")

	$data = Sqlite("sql","select html,bronze,silver,gold,platinum,ruby,sapphire,emerald,diamond,currentcount,left from chart order by 'order'")
	$test = SqlToHtml("$data","Summary","n")



ENDSUB #Report


#####_#_#_#_#_#_#_###_#_#__#
#   FUNCTION SUBROUTINES   #
###_#_#__#_###_#_#_#_#_#___#


BEGINSUB name=RoundUp
	#Rounds $number1 up to the nearest whole number and returns as $number2
	$number1 = 4.5
	IF Frac($number1)<>0
		$number2 = Int($number1) + 1
	ELSE
		$number2=$number1
	ENDIF
ENDSUB #name=RoundUp




#!!!!!!!!!!!!!!!!!!!!



<data> VarName=$NewVersionAvailable
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
AAAAAgJMAQA7
<enddata>






<data> VarName=$NoNewVersion
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBaRXhpZgAATU0AKgAAAAgABQMBAAUAAAABAAAASgMDAAEAAAAB
AAAAAFEQAAEAAAABAQAAAFERAAQAAAABAAAOw1ESAAQAAAABAAAOwwAAAAAAAYagAACxj//bAEMAAgEB
AgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4PDQwOCwwM
DP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAwMDP/AABEIADgBfAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJ
Cgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKC
CQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImK
kpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T1
9vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncA
AQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RF
RkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP3Aoooo
AKKKKACiivLv2wP2stL/AGK/g/F451rwv4t8V6Uur2OkTW/h6KzkubZ7uYQQSyfa7m3iERuHhhJ8zIee
P5SMkKUlFOUnZIqMXJqMVds3fi3+0b4B+Aep+GbPxz4w0HwhL4yvm0zRX1e5Fpb390qb/JEz4iRyMBVd
lLsQq7mIWvknxz/wWgfW9JutH+HXw51LVPiC3iu8sdHstYlaHRPEegWF5Otxq0GoRjZF9ogthDFHMBJB
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
<enddata>

<data> VarName=$GeocoinBadge
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
<enddata>

<data> VarName=$TravelBugBadge
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
<enddata>



################BEGINSUB name=FindsByDay
################	SHOWSTATUS msg="Calculating Finds By Day"
################	$CurrentDay = 1
################	$CurrentMonth = 1
################	$DayCount = 0
################	WHILE Not($CurrentMonth=13)
################		WHILE Not($CurrentDay=32)
################
################			GOSUB name=AddZerostoDigits
################			$tempx = $DayCount + 1
################			SHOWSTATUS msg="Looking for finds on $Currentmonthstr/$Currentdaystr   |   $DayCount days" top=10 Left=10
################			$Data = Sqlite("sql","select count(distinct foundbymedate) from caches where foundbymedate like '%%%%-$currentmonthstr-$currentdaystr'")
################			IF Val($Data) > 0
################				$DayCount = $DayCount + 1
################			ENDIF
################			$CurrentDay = $CurrentDay + 1
################		ENDWHILE
################		$CurrentMonth = $CurrentMonth + 1
################		$CurrentDay = 1
################	ENDWHILE
################	$Cale = $DayCount
################	BEGINSUB name=AddZerostoDigits
################		BEGINCASE
################		CASE $CurrentDay = 1
################			$CurrentDaystr="01"
################		CASE $CurrentDay = 2
################			$CurrentDaystr="02"
################		CASE $CurrentDay = 3
################			$CurrentDaystr="03"
################		CASE $CurrentDay = 4
################			$CurrentDaystr="04"
################		CASE $CurrentDay = 5
################			$CurrentDaystr="05"
################		CASE $CurrentDay = 6
################			$CurrentDaystr="06"
################		CASE $CurrentDay = 7
################			$CurrentDaystr="07"
################		CASE $CurrentDay = 8
################			$CurrentDaystr="08"
################		CASE $CurrentDay = 9
################			$CurrentDaystr="09"
################		OTHERWISE
################			$CurrentDayStr = NumToStr($CurrentDay)
################		ENDCASE
################		BEGINCASE
################		CASE $CurrentMonth = 1
################			$CurrentMonthstr = "01"
################		CASE $CurrentMonth = 2
################			$CurrentMonthstr = "02"
################		CASE $CurrentMonth = 3
################			$CurrentMonthstr = "03"
################		CASE $CurrentMonth = 4
################			$CurrentMonthstr = "04"
################		CASE $CurrentMonth = 5
################			$CurrentMonthstr = "05"
################		CASE $CurrentMonth = 6
################			$CurrentMonthstr = "06"
################		CASE $CurrentMonth = 7
################			$CurrentMonthstr = "07"
################		CASE $CurrentMonth = 8
################			$CurrentMonthstr = "08"
################		CASE $CurrentMonth = 9
################			$CurrentMonthstr = "09"
################		OTHERWISE
################			$CurrentMonthStr = NumToStr($CurrentMonth)
################		ENDCASE
################	ENDSUB
################	#MSGOK msg=$Cale
################ENDSUB #name=FindsByDay




#------------------------------
#. . . . FORMS . . . . . .


<Data> VarName=$form
#********************************************************************
# Form generated by GSAK form designer on Thu 30-Dec-2010 11:35:02
#********************************************************************

Name = Form1
  Type = Form
  Color = 15790320
  Height = 609
  Width = 642

Name = Groupbox1
  Type = Groupbox
  Caption = Hover Text
  Height = 41
  Left = 16
  Top = 232
  Width = 289
  Taborder = 3

Name = Groupbox2
  Type = Groupbox
  Caption = Other Options
  Height = 113
  Left = 320
  Top = 368
  Width = 289
  Taborder = 4

Name = Groupbox3
  Type = Groupbox
  Caption = Display...
  Height = 71
  Left = 16
  Top = 280
  Width = 289
  Taborder = 5

Name = Groupbox4
  Type = Groupbox
  Caption = Input numbers manually for "Other" badges
  Height = 49
  Left = 16
  Top = 352
  Visible = Yes
  Width = 289
  Taborder = 8

Name = Groupbox5
  Type = Groupbox
  Caption = Layout
  Height = 129
  Left = 320
  Top = 232
  Width = 289
  Taborder = 10

Name = Groupbox6
  Type = Groupbox
  Caption = Trackables
  Height = 73
  Left = 16
  Top = 408
  Width = 289
  Taborder = 14

Name = Label1
  Type = Label
  Color = 85502
  Font = Arial Black
  Height = 38
  Left = 240
  Size = 20
  Top = 4
  Width = 151
  Caption = BadgeGen

Name = Label2
  Type = Label
  Font = Verdana
  Height = 16
  Left = 136
  Size = 10
  Top = 132
  Width = 113
  Caption = Found Database:

Name = EditBox
  Type = Combobox
  Color = 12713983
  Height = 21
  Left = 253
  Top = 132
  Width = 212
  Taborder = 0

Name = Button1
  Type = Button
  Enter = Yes
  Height = 41
  Left = 254
  Top = 520
  Width = 121
  Taborder = 1
  Caption = OK

Name = Forum
  Type = Button
  Height = 21
  Left = 4
  Top = 548
  Width = 99
  Taborder = 2
  Caption = Support Website

Name = Label3
  Type = Label
  Height = 13
  Left = 278
  Top = 44
  Width = 56
  Caption = by ky.m.guy

Name = FirstPerson
  Type = Radiobutton
  Container = Groupbox1
  Height = 17
  Left = 32
  Top = 16
  Width = 73
  Taborder = 0
  Caption = First Person

Name = ThirdPerson
  Type = Radiobutton
  Container = Groupbox1
  Height = 17
  Left = 120
  Top = 16
  Width = 81
  Taborder = 1
  Caption = Third Person

Name = Username
  Type = Edit
  Height = 21
  Left = 253
  Top = 180
  Width = 212
  Taborder = 7

Name = Label4
  Type = Label
  Font = Verdana
  Height = 16
  Left = 180
  Size = 10
  Top = 182
  Width = 70
  Caption = Username:

Name = Label5
  Type = Label
  Container = Groupbox5
  Height = 13
  Left = 8
  Top = 18
  Width = 70
  Caption = Size:             %

Name = Size
  Type = Edit
  Container = Groupbox5
  Height = 21
  Left = 35
  Top = 16
  Width = 33
  Taborder = 0

Name = ShowType
  Type = Checkbox
  Container = Groupbox3
  Height = 17
  Left = 8
  Top = 16
  Width = 81
  Taborder = 0
  Caption = Cache Type

Name = ShowSize
  Type = Checkbox
  Container = Groupbox3
  Height = 17
  Left = 112
  Top = 16
  Width = 97
  Taborder = 1
  Caption = Cache Size

Name = ShowDiff
  Type = Checkbox
  Container = Groupbox3
  Height = 17
  Left = 8
  Top = 32
  Width = 73
  Taborder = 2
  Caption = Diff/Terr

Name = ShowFTF
  Type = Checkbox
  Container = Groupbox3
  Height = 17
  Left = 112
  Top = 32
  Width = 97
  Taborder = 3
  Caption = First to Find

Name = ShowCoun
  Type = Checkbox
  Container = Groupbox3
  Height = 17
  Left = 8
  Top = 48
  Width = 97
  Taborder = 4
  Caption = Countries/States

Name = Label6
  Type = Label
  Font = Verdana
  Height = 16
  Left = 133
  Size = 10
  Top = 158
  Width = 116
  Caption = Placed Database:

Name = ShowHidd
  Type = Checkbox
  Container = Groupbox3
  Height = 17
  Left = 112
  Top = 48
  Width = 85
  Taborder = 5
  Caption = Placed

Name = EditBox2
  Type = Combobox
  Color = 14155735
  Height = 21
  Left = 253
  Top = 156
  Width = 212
  Taborder = 6

Name = Suppress
  Type = Checkbox
  Container = Groupbox2
  Height = 17
  Left = 8
  Top = 56
  Width = 233
  Taborder = 0
  Caption = Suppress preview and "Complete" message

Name = ShowElev
  Type = Checkbox
  Container = Groupbox3
  Height = 17
  Left = 208
  Top = 16
  Width = 73
  Taborder = 6
  Caption = Elevation

Name = PostMacroFile
  Type = File
  Container = Groupbox2
  Height = 21
  Left = 88
  Top = 32
  Width = 185
  Taborder = 1

Name = ShowOther
  Type = Checkbox
  Container = Groupbox3
  Exitonchange = Yes
  Height = 17
  Left = 208
  Top = 32
  Width = 73
  Taborder = 7
  Caption = Other

Name = RunPostMacro
  Type = Checkbox
  Container = Groupbox2
  Height = 17
  Left = 8
  Top = 16
  Width = 249
  Taborder = 2
  Caption = Run another macro after badges are generated

Name = Label7
  Type = Label
  Container = Groupbox2
  Height = 13
  Left = 27
  Top = 36
  Width = 52
  Caption = Macro File:

Name = Label8
  Type = Label
  Container = Groupbox4
  Height = 13
  Left = 8
  Top = 24
  Width = 126
  Caption = Underwater caches found:

Name = UndeString
  Type = Edit
  Container = Groupbox4
  Height = 21
  Left = 144
  Top = 20
  Width = 57
  Taborder = 0

Name = WritetoFSG
  Type = Checkbox
  Container = Groupbox2
  Exitonchange = Yes
  Height = 17
  Left = 8
  Top = 72
  Width = 257
  Taborder = 3
  Caption = Automatically add badges to FindStatGen Notes

Name = NotesSettings
  Type = Combobox
  Container = Groupbox2
  Height = 21
  Left = 104
  Top = 88
  Values = 1;2;3;4
  Visible = No
  Width = 41
  Taborder = 4

Name = NotesSection
  Type = Combobox
  Container = Groupbox2
  Height = 21
  Left = 208
  Top = 88
  Values = A;B
  Visible = No
  Width = 41
  Taborder = 5

Name = LabelSettings
  Type = Label
  Container = Groupbox2
  Height = 13
  Left = 24
  Top = 91
  Visible = No
  Width = 178
  Caption = Settings Group:                      Section:

Name = SuggestUnde
  Type = Button
  Container = Groupbox4
  Height = 25
  Left = 208
  Top = 19
  Width = 65
  Taborder = 1
  Caption = Suggest

Name = ShowBelt
  Type = Checkbox
  Container = Groupbox3
  Height = 17
  Left = 208
  Top = 48
  Width = 47
  Taborder = 8
  Caption = Belt

Name = HomeCoords
  Type = Edit
  Enabled = No
  Height = 21
  Left = 253
  Top = 204
  Width = 139
  Taborder = 9

Name = Label10
  Type = Label
  Font = Verdana
  Height = 16
  Left = 128
  Size = 10
  Top = 204
  Width = 125
  Caption = Home Coordinates:

Name = SortBadges
  Type = Checkbox
  Container = Groupbox5
  Height = 17
  Left = 8
  Top = 40
  Width = 153
  Taborder = 1
  Caption = Sort Badges based on level

Name = MultipleLines
  Type = Checkbox
  Container = Groupbox5
  Height = 17
  Left = 24
  Top = 72
  Width = 169
  Taborder = 2
  Caption = Place each level on a new line

Name = TopDiamond
  Type = Radiobutton
  Container = Groupbox5
  Height = 17
  Left = 24
  Top = 56
  Width = 97
  Taborder = 3
  Caption = Diamond at top

Name = TopBronze
  Type = Radiobutton
  Container = Groupbox5
  Height = 17
  Left = 120
  Top = 56
  Width = 89
  Taborder = 4
  Caption = Bronze at top

Name = Version
  Type = Memo
  Color = 15790320
  Height = 17
  Left = 544
  Readonly = Yes
  Style = bold
  Textcolor = 8421504
  Top = 548
  Width = 77
  Wrap = No
  Taborder = 11

Name = Override
  Type = Checkbox
  Exitonchange = Yes
  Height = 17
  Left = 398
  Top = 206
  Width = 63
  Taborder = 12
  Caption = Override

Name = NoNewVersion
  Type = Image
  Autosize = No
  Exitonclick = No
  File = Version.jpg
  Height = 56
  Left = 122
  Source = Macro
  Top = 68
  Visible = Yes
  Width = 380

Name = DelayRun
  Type = Checkbox
  Height = 17
  Left = 232
  Top = 492
  Width = 161
  Taborder = 13
  Caption = Autorun next time (with delay)

Name = TravString
  Type = Edit
  Color = 13816530
  Container = Groupbox6
  Enabled = No
  Height = 21
  Left = 168
  Top = 20
  Width = 49
  Taborder = 0

Name = Label9
  Type = Label
  Container = Groupbox6
  Height = 13
  Left = 8
  Top = 24
  Width = 152
  Caption = Travel Bugs moved/discovered:

Name = CoinString
  Type = Edit
  Color = 13816530
  Container = Groupbox6
  Enabled = No
  Height = 21
  Left = 168
  Top = 45
  Width = 49
  Taborder = 1

Name = Label11
  Type = Label
  Container = Groupbox6
  Height = 13
  Left = 8
  Top = 48
  Width = 140
  Caption = Geocoins moved/discovered:

Name = EditTrackables
  Type = Button
  Container = Groupbox6
  Height = 25
  Left = 224
  Top = 32
  Width = 51
  Taborder = 2
  Caption = Edit

Name = Light
  Type = Edit
  Container = Groupbox5
  Height = 21
  Left = 72
  Top = 96
  Width = 60
  Taborder = 5

Name = Dark
  Type = Edit
  Container = Groupbox5
  Height = 21
  Left = 200
  Top = 96
  Width = 60
  Taborder = 6

Name = Label12
  Type = Label
  Container = Groupbox5
  Height = 13
  Left = 8
  Top = 100
  Width = 59
  Caption = Light Colour:

Name = Label13
  Type = Label
  Container = Groupbox5
  Height = 13
  Left = 136
  Top = 100
  Width = 59
  Caption = Dark Colour:

Name = ConfigureState
  Type = Button
  Container = Groupbox5
  Height = 25
  Left = 162
  Top = 10
  Width = 121
  Taborder = 7
  Caption = Configure State Badges

<enddata>







<Data> VarName=$form1
#********************************************************************
# Form generated by GSAK form designer on Wed 22-Dec-2010 12:37:45
#********************************************************************

Name = TrackableForm
Type = Form
Height = 273
Width = 757

Name = TravString
Type = Edit
Height = 21
Left = 296
Top = 64
Width = 65
Taborder = 0

Name = CoinString
Type = Edit
Height = 21
Left = 536
Top = 64
Width = 57
Taborder = 1

Name = Label1
Type = Label
Height = 13
Left = 136
Top = 68
Width = 155
Caption = Travel Bugs Moved/Discovered:

Name = Label2
Type = Label
Height = 13
Left = 386
Top = 68
Width = 143
Caption = Geocoins Moved/Discovered:

Name = TrackOK
Type = Button
Height = 25
Left = 328
Top = 200
Width = 75
Taborder = 2
Caption = Save

Name = Label3
Type = Label
Height = 13
Left = 120
Top = 136
Width = 477
Caption = If you keep an updated "My Trackables" database with trackables that you have moved/discovered,

Name = Label4
Type = Label
Height = 13
Left = 144
Top = 152
Width = 427
Caption = BadgeGen can automatically determine how many trackables you have moved/discovered

Name = AutoCountTrackables
Type = Checkbox
Exitonchange = Yes
Fontstyle = bold
Height = 17
Left = 216
Top = 168
Width = 305
Taborder = 3
Caption = I keep an up-to-date "My Trackables" database

Name = TravelbugBadge
Type = Image
File = bug.png
Height = 100
Left = 8
Source = Macro
Top = 120
Width = 100

Name = GeocoinBadge
Type = Image
File = coin.png
Height = 100
Left = 626
Source = Macro
Top = 120
Width = 100

Name = ProfileOpen
Type = Button
Height = 33
Left = 280
Top = 95
Width = 169
Taborder = 12
Caption = Open Browser to profile page

Name = Label5
Type = Label
Color = 0
Font = Arial Black
Height = 30
Left = 304
Size = 16
Top = 16
Width = 128
Caption = Trackables

<enddata>

<Data> VarName=$stateform
#********************************************************************
# Form generated by GSAK form designer on Fri 31-Dec-2010 23:16:58
#********************************************************************

Name = State Form
  Type = Form
  Height = 244
  Width = 546

Name = Label1
  Type = Label
  Font = Arial Black
  Height = 27
  Left = 190
  Size = 14
  Top = 11
  Width = 141
  Caption = State Badges

Name = Label2
  Type = Label
  Height = 13
  Left = 142
  Top = 38
  Width = 239
  Caption = Choose which countries to display state badges for

Name = AvailableCountries
  Type = Checklistbox
  Columns = 3
  Height = 88
  Left = 46
  Top = 60
  Values = Values;were;not;correctly;given;
  Width = 425
  Taborder = 0

Name = OK
  Type = Button
  Height = 25
  Left = 223
  Top = 168
  Width = 75
  Taborder = 1
  Caption = OK

Name = SelectAll
  Type = Button
  Height = 16
  Left = 80
  Top = 150
  Width = 31
  Taborder = 2
  Caption = All

Name = SelectNone
  Type = Button
  Height = 16
  Left = 110
  Top = 150
  Width = 41
  Taborder = 3
  Caption = None

Name = Label3
  Type = Label
  Height = 13
  Left = 45
  Top = 150
  Width = 33
  Caption = Select:

<enddata>

<Data> VarName=$ElevationWarning
#********************************************************************
# Form generated by GSAK form designer on Wed 26-Jan-2011 12:28:13
#********************************************************************

Name = Elevation Warning
  Type = Form
  Color = 15066597
  Delay = 3
  Height = 142
  Width = 364

Name = Label1
  Type = Label
  Height = 13
  Left = 40
  Style = bold
  Top = 10
  Width = 271
  Caption = BadgeGen has detected missing elevation data.

Name = Label2
  Type = Label
  Height = 13
  Left = 15
  Top = 30
  Width = 321
  Caption = Press "Update" to run the elevation macro to update elevation data.

Name = UpdateElev
  Type = Button
  Enter = Yes
  Height = 25
  Left = 30
  Top = 65
  Width = 286
  Taborder = 8
  Caption = Update Elevations

<enddata>









<data> VarName=$OfflineStateData
Australia,6
Austria,9
Belgium,11
Brazil,27
Canada,13
Czech Republic,14
Denmark,5
Germany,16
Italy,20
Netherlands,12
New Zealand,2
South Africa,9
Sweden,21
Switzerland,26
United Kingdom,14
United States,50
<enddata>
